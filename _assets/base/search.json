[
  {
  "url": "/document-staging/nugu-sdk/platform/ios/1.0",
  "order": 183,
  "indexes": [
    {
  "title": "1.0 으로 업그레이드",
  "hash": "",
  "sentences": [
    "1.0 으로 업그레이드",
    "NUGU SDK iOS 를 0.x 에서 1.0 으로 업그레이드 하기위한 가이드입니다.",
    "자세한 source code 변경사항은 github release note 를 참고해주세요.(https://github.com/nugu-developers/nugu-ios/releases/tag/1.0.)"
  ]
},
    {
  "title": "1.0 으로 업그레이드 > NotificationCenter 사용",
  "hash": "#notificationcenter-사용",
  "sentences": [
    "NotificationCenter 사용",
    "NUGU SDK 의 구성요소에 대한 변경사항을 전달하기 위해",
    "DelegateSet",
    "대신",
    "NotificationCenter",
    "를 사용합니다.",
    "DelegateSet 은 삭제되었으며, 기존에 DelegateSet 이 하던 역할을 delegate pattern 과 observer pattern 으로 구분하였습니다."
  ]
},
    {
  "title": "1.0 으로 업그레이드 > ASRAgent 변경사항 감지",
  "hash": "#asragent-변경사항-감지",
  "sentences": [
    "ASRAgent 변경사항 감지",
    "이전코드",
    "MainViewController.swift",
    "NuguCentralManager.shared.client.asrAgent.add(delegate: self)",
    "1.0 에서 변경된 코드",
    "MainViewController.swift",
    "asrResultObserver = object.observe(NuguAgentNotification.ASR.Result.self, queue: .main) { (notification) in\n    switch notification.result {\n        ...\n    }\n}"
  ]
},
    {
  "title": "1.0 으로 업그레이드 > SystemAgent 변경사항 감지",
  "hash": "#systemagent-변경사항-감지",
  "sentences": [
    "SystemAgent 변경사항 감지",
    "이전코드",
    "NuguCentralManager.swift",
    "client.systemAgent.add(systemAgentDelegate: self)",
    "1.0 에서 변경된 코드",
    "NuguCentralManager.swift",
    "systemAgentExceptionObserver = object.observe(NuguAgentNotification.System.Exception.self, queue: nil) { (notification) in\n    guard let self = self else { return }\n    \n    switch notification.code {\n        ...\n    }\n}\n\nsystemAgentRevokeObserver = object.observe(NuguAgentNotification.System.RevokeDevice.self, queue: nil) { (notification) in\n    ...\n}"
  ]
},
    {
  "title": "1.0 으로 업그레이드 > DialogStateAggregator 변경사항 감지",
  "hash": "#dialogstateaggregator-변경사항-감지",
  "sentences": [
    "DialogStateAggregator 변경사항 감지",
    "이전코드",
    "MainViewController.swift",
    "NuguCentralManager.shared.client.dialogStateAggregator.add(delegate: self)",
    "1.0 에서 변경된 코드",
    "MainViewController.swift",
    "dialogStateObserver = object.observe(NuguClientNotification.DialogState.State.self, queue: nil) { (notification) in\n    switch notification.state {\n        ...\n    }\n}"
  ]
},
    {
  "title": "1.0 으로 업그레이드 > NuguClient.Builder 추가",
  "hash": "#nuguclientbuilder-추가",
  "sentences": [
    "NuguClient.Builder 추가",
    "NuguClient 의 필수/선택 요소를 보다 효율적으로 생성하기 위해 builder pattern 이 적용되었습니다.",
    "이전코드",
    "NuguCentralManager.swift",
    "lazy private(set) var client: NuguClient = {\n    let client = NuguClient(delegate: self)\n    \n    ...\n    \n    return client\n}()",
    "1.0 에서 변경된 코드",
    "NuguCentralManager.swift",
    "lazy private(set) var client: NuguClient = {\n    let nuguBuilder = NuguClient.Builder()\n    \n    ...\n    \n    // Set DataSource for SoundAgent\n    nuguBuilder.setDataSource(self)\n    // Set Delegate for PhoneCallAgent, MessageAgent, MediaPlayerAgent,\n    // ExtensionAgent, LocationAgent, PermissionAgent\n    nuguBuilder.setDelegate(self)\n    \n    let client = nuguBuilder.build()\n    client.delegate = self\n    \n    return client\n}()"
  ]
},
    {
  "title": "1.0 으로 업그레이드 > SpeechRecognizerAggregator 추가",
  "hash": "#speechrecognizeraggregator-추가",
  "sentences": [
    "SpeechRecognizerAggregator 추가",
    "NUGU SDK 의",
    "SpeechRecognizerAggregator",
    "가",
    "MicInputProvider",
    ",",
    "ASRAgent",
    ",",
    "KeywordDetector",
    "를 통합 관리합니다.",
    "이전코드",
    "NuguCentralManager.swift",
    "private var startMicWorkItem: DispatchWorkItem?\n\n// Audio input source\nprivate let micQueue = DispatchQueue(label: \"central_manager_mic_input_queue\")\nprivate let micInputProvider = MicInputProvider()\n \nfunc enable() {\n    ...\n\n     // Set Last WakeUp Keyword\n     // If you don't want to use saved wakeup-word, don't need to be implemented\n     if UserDefaults.Standard.useWakeUpDetector,\n         let keyword = Keyword(rawValue: UserDefaults.Standard.wakeUpWord) {\n         client.keywordDetector.keywordSource = keyword.keywordSource\n         startWakeUpDetector()\n\n         startMicWorkItem?.cancel()\n         startMicWorkItem = DispatchWorkItem(block: { [weak self] in\n             log.debug(\"startMicWorkItem start\")\n             self?.startMicInputProvider(requestingFocus: false) { (success) in\n                 guard success else {\n                     log.debug(\"startMicWorkItem failed!\")\n                     return\n                 }\n             }\n         })\n         guard let startMicWorkItem = startMicWorkItem else { return }\n         // When mic has been activated before interruption end notification has been fired,\n         // Option's .shouldResume factor never comes in. (even when it has to be)\n         // Giving small delay for starting mic can be a solution for this situation\n         DispatchQueue.global().asyncAfter(deadline: .now() + 0.5, execute: startMicWorkItem)\n     } else {\n         stopWakeUpDetector()\n         stopMicInputProvider()\n     }\n }\n\nfunc startMicInputProvider(requestingFocus: Bool, completion: @escaping (Bool) -> Void) {\n     startMicWorkItem?.cancel()\n     DispatchQueue.main.async {\n         guard UIApplication.shared.applicationState == .active else {\n             completion(false)\n             return\n         }\n\n         NuguAudioSessionManager.shared.requestRecordPermission { [unowned self] isGranted in\n             guard isGranted else {\n                 log.error(\"Record permission denied\")\n                 completion(false)\n                 return\n             }\n             self.micQueue.async { [unowned self] in\n                 defer {\n                     log.debug(\"addEngineConfigurationChangeNotification\")\n                     NuguAudioSessionManager.shared.registerAudioEngineConfigurationObserver()\n                 }\n                 self.micInputProvider.stop()\n\n                 // Control center does not work properly when mixWithOthers option has been included.\n                 // To avoid adding mixWithOthers option when audio player is in paused state,\n                 // update audioSession should be done only when requesting focus\n                 if requestingFocus {\n                     NuguAudioSessionManager.shared.updateAudioSession(requestingFocus: requestingFocus)\n                 }\n                 do {\n                     try self.micInputProvider.start()\n                     completion(true)\n                 } catch {\n                     log.error(error)\n                     completion(false)\n                 }\n             }\n         }\n     }\n }\n\n func stopMicInputProvider() {\n     micQueue.sync {\n         startMicWorkItem?.cancel()\n         micInputProvider.stop()\n         NuguAudioSessionManager.shared.removeAudioEngineConfigurationObserver()\n     }\n }\n \n func startWakeUpDetector() {\n     client.keywordDetector.start()\n }\n \n func stopWakeUpDetector() {\n     client.keywordDetector.stop()\n }\n \n func startRecognition(initiator: ASRInitiator) {\n     client.asrAgent.startRecognition(initiator: initiator)\n }\n\n func stopRecognition() {\n     client.asrAgent.stopRecognition()\n }",
    "1.0 에서 변경된 코드",
    "NuguCentralManager.swift",
    "func startListening(initiator: ASRInitiator) {\n    client.speechRecognizerAggregator.startListening(initiator: initiator)\n}\n\nfunc startListeningWithTrigger() {\n    client.speechRecognizerAggregator.startListeningWithTrigger()\n}\n\nfunc stopListening() {\n    client.speechRecognizerAggregator.stopListening()\n}",
    "KeywordDetector",
    ",",
    "MicInputProvider",
    ",",
    "ASRAgent",
    "시작/종료와 관련된 코드를 모두 제거하고",
    "SpeechRecognizerAggregator",
    "의",
    "startListening(initiator:)",
    ",",
    "startListeningWithTrigger",
    ",",
    "stopListening",
    "함수 호출로 대체합니다."
  ]
},
    {
  "title": "1.0 으로 업그레이드 > Keyword 설정",
  "hash": "#keyword-설정",
  "sentences": [
    "Keyword 설정",
    "이전코드",
    "NuguCentralManager.swift",
    "// Set Last WakeUp Keyword\n // If you don't want to use saved wakeup-word, don't need to be implemented\n if UserDefaults.Standard.useWakeUpDetector,\n     let keyword = Keyword(rawValue: UserDefaults.Standard.wakeUpWord) {\n     client.keywordDetector.keywordSource = keyword.keywordSource\n }",
    "1.0 에서 변경된 코드",
    "NuguCentralManager.swift",
    "// Set Last WakeUp Keyword\n// If you don't want to use saved wakeup-word, don't need to be implemented.\n// Because `aria` is set as a default keyword\nif let keyword = Keyword(rawValue: UserDefaults.Standard.wakeUpWord) {\n    nuguBuilder.keywordDetector.keyword = keyword\n}\n\n// If you want to use built-in keyword detector, set this value as true\nnuguBuilder.speechRecognizerAggregator.useKeywordDetector = UserDefaults.Standard.useWakeUpDetector",
    "Keyword(e.g. “아리아”) 관련 설정을",
    "KeywordDetector",
    "대신",
    "SpeechRecognizerAggregator",
    "에 적용합니다."
  ]
},
    {
  "title": "1.0 으로 업그레이드 > SDK 에서 AVAudioSessionManager 를 관리",
  "hash": "#sdk-에서-avaudiosessionmanager-를-관리",
  "sentences": [
    "SDK 에서 AVAudioSessionManager 를 관리",
    "NUGU SDK 를 사용하기 위해서는 시스템, Application, NUGU SDK 의 복합적인 상황에 맞춰 AVAudioSession 의",
    "category",
    ",",
    "categoryOptions",
    " 와",
    "AVAudioSession.interruptionNotification",
    ",",
    "AVAudioSession.routeChangeNotification",
    "등을 적절하게 처리해 주어야 합니다.",
    "SDK 1.0 에 추가된",
    "AudioSessionManager",
    "는 NUGU SDK 를 사용하기 위한 기본적인 AVAudioSession 처리를 구현하고 있습니다.",
    "AVAudioSession 이 이미 Application 에서 충분히 복잡하게 관리되고 있다면, AudioSessionManager 를 사용하는 것보다 기존의 관리 로직에 NUGU SDK 를 위한 로직을 추가하는 방향이 더욱 효율적일 수 있습니다.",
    "Custom AudioSessionManager 를 참고해주세요."
  ]
},
    {
  "title": "1.0 으로 업그레이드 > SDK 의 AudioSessionManager 사용",
  "hash": "#sdk-의-audiosessionmanager-사용",
  "sentences": [
    "SDK 의 AudioSessionManager 사용",
    "Application 의",
    "NuguAudioSessionManager.swift",
    "파일 및 관련 코드를 삭제합니다.",
    "NuguCentralManager.swift",
    "client.audioSessionManager?.enable()",
    "AudioSessionManager",
    "가",
    "AVAudioSession.interruptionNotification",
    ",",
    "AVAudioSession.routeChangeNotification",
    "event 를 감지합니다.",
    "NUGU SDK 를 사용하는 동안 event 를 감지하여 SDK 동작에 필요한 기능을 수행합니다.",
    "NuguCentralManager.swift",
    "client.audioSessionManager?.disable()",
    "AudioSessionManager",
    "가",
    "AVAudioSession.interruptionNotification",
    ",",
    "AVAudioSession.routeChangeNotification",
    "event 감지를 중지합니다.",
    "NUGU SDK 를 사용하지 않을 때 호출하여 SDK 가 불필요한 동작을 수행하지 않도록합니다."
  ]
},
    {
  "title": "1.0 으로 업그레이드 > Custom AudioSessionManager 사용",
  "hash": "#custom-audiosessionmanager-사용-",
  "sentences": [
    "Custom AudioSessionManager 사용",
    "NUGU SDK 의",
    "AudioSessionManager",
    "를 사용하지 않고 Application 에서",
    "AVAudioSession",
    "을 직접 처리할 수 있습니다.",
    "NuguCentralManager.swift",
    "lazy private(set) var client: NuguClient = {\n    let nuguBuilder = NuguClient.Builder()\n    \n    ...\n    \n    nuguBuilder.audioSessionManager = nil\n    \n    ...\n    \n    let client = nuguBuilder.build()\n    client.delegate = self\n    \n    ...\n    \n    return client\n}()",
    "NuguClient",
    "생성시",
    "audioSessionManager",
    "를 nil 처리합니다.",
    "NuguCentralManager.swift",
    "extension NuguCentralManager: NuguClientDelegate {\n    func nuguClientWillUseMic() {\n        if requestingFocus {\n            NuguAudioSessionManager.shared.updateAudioSession(requestingFocus: true)\n        }\n    }\n    \n    func nuguClientWillRequireAudioSession() -> Bool {\n        return NuguAudioSessionManager.shared.updateAudioSession(requestingFocus: true)\n    }\n    \n    func nuguClientDidReleaseAudioSession() {\n        NuguAudioSessionManager.shared.notifyAudioSessionDeactivation()\n    }\n    \n    ...\n}",
    "NUGU SDK iOS 0.x 의",
    "NuguAudioSessionManager.swift",
    "를 참고하여 Application 에서 AudioSessionManager 를 직접 구현하고",
    "NuguClientDelegate",
    "의 일부 함수를 구현해 주어야 합니다."
  ]
},
    {
  "title": "1.0 으로 업그레이드 > VoiceChromePresenter 기능 추가",
  "hash": "#voicechromepresenter-기능-추가",
  "sentences": [
    "VoiceChromePresenter 기능 추가"
  ]
},
    {
  "title": "1.0 으로 업그레이드 > UITapGestureRecognizer 구현 이동",
  "hash": "#uitapgesturerecognizer-구현-이동",
  "sentences": [
    "UITapGestureRecognizer 구현 이동",
    "삭제해야 하는 코드",
    "MainViewController.swift",
    "@objc private extension MainViewController {\n    func didTapForStopRecognition() {\n        guard [.listening, .recognizing].contains(NuguCentralManager.shared.client.asrAgent.asrState) else { return }\n        NuguCentralManager.shared.client.asrAgent.stopRecognition()\n    }\n}\nfunc initializeNugu() {\n    let tapGestureRecognizer = UITapGestureRecognizer(target: self, action: #selector(didTapForStopRecognition))\n    tapGestureRecognizer.delegate = self\n    tapGestureRecognizer.cancelsTouchesInView = false\n    view.addGestureRecognizer(tapGestureRecognizer)\n}\nextension MainViewController: UIGestureRecognizerDelegate {\n    func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer, shouldReceive touch: UITouch) -> Bool {\n        let touchLocation = touch.location(in: gestureRecognizer.view)\n        return !nuguVoiceChrome.frame.contains(touchLocation)\n    }\n    \n    public func gestureRecognizer(_ gestureRecognizer: UIGestureRecognizer, shouldRecognizeSimultaneouslyWith otherGestureRecognizer: UIGestureRecognizer) -> Bool {\n        return true\n    }\n}",
    "UITapGestureRecognizer",
    "관련 기능을",
    "VoiceChromePresenter",
    "에서 처리하기 때문에 Application 에서 관련 코드를 삭제합니다."
  ]
},
    {
  "title": "1.0 으로 업그레이드 > ASRBeepPlayer 구현 이동",
  "hash": "#asrbeepplayer-구현-이동",
  "sentences": [
    "ASRBeepPlayer 구현 이동",
    "삭제해야 하는 코드",
    "NuguCentralManager.swift",
    "lazy private(set) var asrBeepPlayer: ASRBeepPlayer = ASRBeepPlayer(focusManager: client.focusManager)",
    "MainViewController.swift",
    "extension MainViewController: DialogStateDelegate {\n    func dialogStateDidChange(_ state: DialogState, isMultiturn: Bool, chips: [ChipsAgentItem.Chip]?, sessionActivated: Bool) {\n        switch state {\n        case .listening:\n            DispatchQueue.main.async {\n                NuguCentralManager.shared.asrBeepPlayer.beep(type: .start)\n            }\n        case .thinking:\n            DispatchQueue.main.async { [weak self] in\n                self?.nuguButton.pauseDeactivateAnimation()\n            }\n        default:\n            break\n        }\n    }\n}\n\nextension MainViewController: ASRAgentDelegate {\n    func asrAgentDidReceive(result: ASRResult, dialogRequestId: String) {\n        switch result {\n        case .complete:\n            DispatchQueue.main.async {\n                NuguCentralManager.shared.asrBeepPlayer.beep(type: .success)\n            }\n        case .error(let error, _):\n            DispatchQueue.main.async {\n                switch error {\n                case ASRError.listenFailed:\n                    NuguCentralManager.shared.asrBeepPlayer.beep(type: .fail)\n                case ASRError.recognizeFailed:\n                    NuguCentralManager.shared.localTTSAgent.playLocalTTS(type: .deviceGatewayRequestUnacceptable)\n                default:\n                    NuguCentralManager.shared.asrBeepPlayer.beep(type: .fail)\n                }\n            }\n        default: break\n        }\n    }\n}",
    "Beep 음 재생과 관련된 기능을",
    "VoiceChromePresenter",
    "에서 처리하기 때문에 Application 의",
    "ASRBeepPlayer.swift",
    "파일 및",
    "asrBeepPlayer.beep(type:)",
    "호출 코드를 삭제합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/airflowcontrol-interface",
  "order": 81,
  "indexes": [
    {
  "title": "AirflowControl Interface",
  "hash": "",
  "sentences": [
    "AirflowControl Interface",
    "NUGU 스마트홈 AirflowControl Capability Interface는 NUGU 스마트홈에 등록된 SmartHomeDevice의 풍량제어방식에 대한 설명입니다. 특정 풍량을 설정하거나 풍량 단계를 상향, 하향 조정하는 등의 Directive들로 구성되어 있으며 팬 및 풍량, 풍속을 제어할 수 있는 기능이 있는 모든 SmartHomeDevice를 지원합니다."
  ]
},
    {
  "title": "AirflowControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "AirflowControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "AirflowControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"AIR_CONDITIONER\",\n      \"deviceTypeName\": \"에어컨\",\n      \"deviceModelName\": \"example air_conditioner\",\n      \"friendlyNameSuggestion\": \"거실\",\n      \"manufacturer\": \"example manufacturer\",\n      \"supportedCapabilities\": {\n        \"airflowControl\": {\n          \"supportedAirflowTypes\": [\n            \"HIGH\",\n            \"MIDDLE\",\n            \"LOW\",\n            \"AUTO\"\n          ] // 지원 가능한 Airflow 타입 참고.\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "위의 Discovery 응답 예시에서 supportedCapabilities 는 이해를 돕기 위해 airflowControl 만을 속성으로 가지고 있으나, 실제로는 해당 디바이스가 지원가능한 모든 capability 에 대해서 응답해야 합니다.",
    "각각의 Capability 별로 어떤 속성을 가질 수 있는지는 다른 Capability 문서의 Discovery 섹션을 참고하세요.",
    "SmartHomeDevice Attribute Parameters",
    "supportedAirflowTypes | 해당 SmartHomeDevice가 지원하는 AirflowType의 명칭입니다.AirflowType은 NUGU스마트홈에서 지원하는 명칭 중 선택해서 응답할 수 있으며, 지원하는 AirflowType의 명칭은 AirflowType를 참조하시기 바랍니다.지원하는 AirflowType은 각 Device별로 Array 형태로 복수개 전달할 수 있습니다.",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다.",
    "connectionStatus | 디바이스 연결상태.현재 제어가 불가능한 상태의 디바이스인 경우 false 로 응답해야 합니다."
  ]
},
    {
  "title": "AirflowControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU SmartHome AirflowControl Capability는 풍량을 조회하는 AskAirflow, 풍량을 제어하는 SetAirflow, IncreaseAirflow, DecreaseAirflow, SetAirflowMax, SetAirflowMin 등의 Directive를 지원합니다."
  ]
},
    {
  "title": "AirflowControl Interface > SetAirflow",
  "hash": "#setairflow",
  "sentences": [
    "SetAirflow",
    "Directive 정보",
    "SmartHomeDevice의 풍량을 사용자가 발화한 특정 풍량으로 설정한다.",
    "Capability : AirflowControl",
    "Directive : SetAirflow",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 풍량 강풍으로 설정해줘.",
    "아리아, {FriendlyName} 풍량 약풍으로 설정해줘.",
    "아리아, {DeviceType} 풍량 3단계로 설정해줘."
  ]
},
    {
  "title": "AirflowControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/AirflowControl/directives/SetAirflow)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirflowControl\",\n      \"smartHomeDirective\": \"SetAirflow\",\n      \"parameters\": {\n        \"airflowType\": \"LOW\",\n        \"rawAirflowType\": \"약풍\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "SetAirflow Directive Request parameter details",
    "airflowType | 설정하고자 하는 airflowType의 사용자 발화 정보.해당 parameter의 value는 Device Discovery 당시 Response한 supprtedAirflowTypes 중 하나로 요청됩니다. | string",
    "rawAirflowType | 사용자가 실제 발화한 AirflowType.정규화 되지 않은 값 | string"
  ]
},
    {
  "title": "AirflowControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"12345678\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceModelName\": \"삼성전자 스마트 에어컨\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"에어컨\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"airflowType\": \"LOW\"\n      }\n    }\n  ]\n}",
    "SetAirflow Directive Response parameter details",
    "airflowType | 설정한 후에 SmartHomeDevice의 airflowType.해당 parameter의 value로 사용자에게 안내됩니다. | string"
  ]
},
    {
  "title": "AirflowControl Interface > AskAirflow",
  "hash": "#askairflow",
  "sentences": [
    "AskAirflow",
    "Directive 정보",
    "SmartHomeDevice에 설정된 풍량을 조회한다.",
    "Capability : AirflowControl",
    "Directive : AskAirflow",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 풍량 알려줘.",
    "아리아, {FriendlyName} 풍량 어떻게 설정되어 있어?",
    "아리아, {DeviceType} 풍량 조회해줘"
  ]
},
    {
  "title": "AirflowControl Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/AirflowControl/directives/AskAirflow)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirflowControl\",\n      \"smartHomeDirective\": \"AskAirflow\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "AirflowControl Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"airflowType\": \"HIGH\"\n      }\n    }\n  ]\n}",
    "AskAirflow Directive Response parameter details",
    "airflowType | 현재 설정되어 있는 SmartHomeDevice의 airflowType정보.해당 parameter의 value로 사용자에게 안내됩니다. | string"
  ]
},
    {
  "title": "AirflowControl Interface > IncreaseAirflow",
  "hash": "#increaseairflow",
  "sentences": [
    "IncreaseAirflow",
    "Directive 정보",
    "SmartHomeDevice의 설정 풍량을 증가시킨다.",
    "Capability : AirflowControl",
    "Directive : IncreaseAirflow",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 풍량 올려줘.",
    "아리아, {FriendlyName} 풍량 1단계 올려서 설정해줘.",
    "아리아, {DeviceType} 풍량 3단계 올려줘."
  ]
},
    {
  "title": "AirflowControl Interface > Sample Request",
  "hash": "#sample-request-2",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/AirflowControl/directives/IncreaseAirflow)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirflowControl\",\n      \"smartHomeDirective\": \"IncreaseAirflow\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "IncreaseAirflow Directive request parameter details",
    "  | 별도의 파라미터는 없고, 1단계씩 올려야 합니다.n 단계 올리는 스펙은 추후 지원 예정입니다. |  "
  ]
},
    {
  "title": "AirflowControl Interface > Sample Response",
  "hash": "#sample-response-2",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"airflowType\": \"HIGH\" // 올려서 최종적으로 설정한 풍량 타입 응답.\n      }\n    }\n  ]\n}",
    "IncreaseAirflow Directive response parameter details",
    "airflowType | Airflow 증가 후 최종 설정된 SmartHomeDevice의 AirflowType.해당 parameter의 value로 사용자에게 안내됩니다. | string"
  ]
},
    {
  "title": "AirflowControl Interface > DecreaseAirflow",
  "hash": "#decreaseairflow",
  "sentences": [
    "DecreaseAirflow",
    "Directive 정보",
    "SmartHomeDevice의 설정 풍량을 감소시킨다.",
    "Capability : AirflowControl",
    "Directive : DecreaseAirflow",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 풍량 내려줘.",
    "아리아, {FriendlyName} 풍량 1단계 내려서 설정해줘.",
    "아리아, {DeviceType} 풍량 2단계 내려줘."
  ]
},
    {
  "title": "AirflowControl Interface > Sample Request",
  "hash": "#sample-request-3",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/AirflowControl/directives/DecreaseAirflow)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirflowControl\",\n      \"smartHomeDirective\": \"DecreaseAirflow\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "DecreaseAirflow Directive request parameter details",
    "  | 별도의 파라미터는 없 1단계씩 내려야 합니다.n 단계 내리는 스펙은 추후 지원 예정입니다. |  "
  ]
},
    {
  "title": "AirflowControl Interface > Sample Response",
  "hash": "#sample-response-3",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"properties\": {\n        \"airflowType\": \"강풍\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "DecreaseAirflow Directive response parameter details",
    "airflowType | Airflow 감소 후 최종 설정된 SmartHomeDevice의 AirflowType | string"
  ]
},
    {
  "title": "AirflowControl Interface > SetAirflowMax",
  "hash": "#setairflowmax",
  "sentences": [
    "SetAirflowMax",
    "Directive 정보",
    "SmartHomeDevice을 최고 풍량으로 설정한다.",
    "Capability : AirflowControl",
    "Directive : SetAirflowMax",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 풍량 최고로 설정해줘.",
    "아리아, {FriendlyName} 풍량 가장 높게 해줘",
    "아리아, {DeviceType} 풍량 최대로 해줘."
  ]
},
    {
  "title": "AirflowControl Interface > Sample Request",
  "hash": "#sample-request-4",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/AirflowControl/directives/SetAirflowMax)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirflowControl\",\n      \"smartHomeDirective\": \"SetAirflowMax\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "AirflowControl Interface > Sample Response",
  "hash": "#sample-response-4",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"airflowType\": \"HIGH\" // 올려서 최종적으로 설정한 풍량 타입 응답.\n      }\n    }\n  ]\n}",
    "SetAirflowMax Directive Response parameter details",
    "airflowType | Airflow 감소 후 최종 설정 된 SmartHomeDevice의 AirflowType | string"
  ]
},
    {
  "title": "AirflowControl Interface > SetAirflowMin",
  "hash": "#setairflowmin",
  "sentences": [
    "SetAirflowMin",
    "Directive 정보",
    "SmartHomeDevice을 최저 풍량으로 설정한다.",
    "Capability : AirflowControl",
    "Directive : SetAirflowMin",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 풍량 최저로 설정해줘.",
    "아리아, {FriendlyName} 풍량 가장 낮게 해줘",
    "아리아, {DeviceType} 풍량 최소로 해줘."
  ]
},
    {
  "title": "AirflowControl Interface > Sample Request",
  "hash": "#sample-request-5",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/AirflowControl/directives/SetAirflowMin)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirflowControl\",\n      \"smartHomeDirective\": \"SetAirflowMin\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "AirflowControl Interface > Sample Response",
  "hash": "#sample-response-5",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"airflowType\": \"LOW\" // 내려서 최종적으로 설정한 풍량 타입 응답.\n      }\n    }\n  ]\n}",
    "SetAirflowMin Directive response parameter details",
    "airflowType | 설정한 후에 SmartHomeDevice의 airflowType.해당 parameter의 value로 사용자에게 안내됩니다. | string"
  ]
},
    {
  "title": "AirflowControl Interface > Error & Exception",
  "hash": "#error--exception",
  "sentences": [
    "Error & Exception",
    "해당 Capability/Directive에서 응답 시 사용할 수 있는 ErrorCode는",
    "SmartHomeError",
    "를 참조해주시기 바랍니다.",
    "Sample Error Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"data\": [\n    {\n      \"resultCode\": \"DeviceTurnedOff\",\n      \"smartHomeDevice\": {\n        \"id\": \"D68856420232\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceModelName\": \"삼성전자 스마트 에어컨\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"에어컨\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    }\n  ]\n}",
    "사용자가 여러개 디바이스를 동시에 제어하려고 하는 경우, 아래와 같이 여러 디바이스에 대해 요청이 갈 수 있습니다. 이 때 각각의 기기를 제어한 뒤 제어 결과를 리스트로 응답해야 합니다.",
    "이는 모든 제어 요청에 대해 공통으로 해댱되는 내용입니다.",
    "응답으로는 각 디바이스별 성공/실패 여부를 data의 하위 리스트에 담을 수 있습니다"
  ]
},
    {
  "title": "AirflowControl Interface > Sample Request",
  "hash": "#sample-request-6",
  "sentences": [
    "Sample Request",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirflowControl\",\n      \"smartHomeDirective\": \"SetAirflowMin\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1111\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      {\n        \"id\": \"2222\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"안방\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/airqualitycheck-interface",
  "order": 82,
  "indexes": [
    {
  "title": "AirQualityCheck Interface",
  "hash": "",
  "sentences": [
    "AirQualityCheck Interface",
    "NUGU 스마트홈 AirQualityCheck Capability Interface는 NUGU 스마트홈에 등록된 SmartHomeDevice에서 주변 공기 상태를 측정하는 방식에 대한 설명입니다. 공기질은 1부터 10단계까지의 단계로 응답할 수 있으며 숫자가 작을수록 공기질이 좋은 상태입니다."
  ]
},
    {
  "title": "AirQualityCheck Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "AirQualityCheck Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "AirQualityCheck Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"AIR_CLEANER\",\n      \"deviceTypeName\": \"공기청정기\",\n      \"deviceModelName\": \"example device_model_name\",\n      \"friendlyNameSuggestion\": \"거실\",\n      \"manufacturer\": \"example manufacturer\",\n      \"supportedCapabilities\": {\n        \"airQualityCheck\": {} // 별도의 파라미터는 없으나 예시와 같이 빈 객체를 응답해야 함.\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "AirQualityCheck Capability 의 경우 Capability에 속한 파라미터가 없습니다.",
    "그러나 해당 디바이스가 공기 상태 질의가 가능한(AirQualityCheck Capability 를 지원하는) 디바이스라는 것을 NUGU SmartHome 플랫폼에 알려주기 위해서는 위의 응답 예시와 같이 빈 객체를 응답해야 합니다.",
    "SmartHomeDevice Attribute parameters",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다.",
    "connectionStatus | 디바이스 연결상태.현재 제어가 불가능한 상태의 디바이스인 경우 false 로 응답해야 합니다."
  ]
},
    {
  "title": "AirQualityCheck Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU SmartHome AirQualityCheck Capability는 공기상태를 조회하는 AskAirQuality Directive를 지원합니다."
  ]
},
    {
  "title": "AirQualityCheck Interface > AskAirQuality",
  "hash": "#askairquality",
  "sentences": [
    "AskAirQuality",
    "Directive 정보",
    "SmartHomeDevice에서 측정한 주변 공기상태를 조회한다.",
    "Capability : AirQualityCheck",
    "Directive : AskAirQuality",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 공기상태 알려줘.",
    "아리아, {FriendlyName} 공기상태 어때?",
    "아리아, {DeviceType} 공기상태 조회해줘"
  ]
},
    {
  "title": "AirQualityCheck Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/AirQualityCheck/directives/AskAirQuality)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirQualityCheck\",\n      \"smartHomeDirective\": \"AskAirQuality\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CLEANER\",\n        \"deviceTypeName\": \"공기청정기\",\n        \"deviceModelName\": \"example device_model_name\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airQualityCheck\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "AirQualityCheck Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CLEANER\",\n        \"deviceModelName\": \"example device_model_name\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"공기청정기\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"airQuality\": 1\n      }\n    }\n  ]\n}",
    "AskAirQuality Directive Response parameter details",
    "airQuality | SmartHomeDevice에서 측정한 주변 공기상태정보입니다.1부터 10까지의 단계로 응답할 수 있으며 숫자가 작을수록 공기질이 좋은 상태입니다. | 1~10"
  ]
},
    {
  "title": "AirQualityCheck Interface > Error & Exception",
  "hash": "#error--exception",
  "sentences": [
    "Error & Exception",
    "해당 Capability/Directive에서 응답 시 사용할 수 있는 ErrorCode는",
    "SmartHomeError",
    "를 참조해주시기 바랍니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android",
  "order": 184,
  "indexes": [
    {
  "title": "Android",
  "hash": "",
  "sentences": [
    "Android",
    "Android 환경에서 NUGU 서비스를 쉽게 사용할 수 있도록 NUGU SDK for Android를 제공합니다."
  ]
},
    {
  "title": "Android > 특징",
  "hash": "#특징",
  "sentences": [
    "특징",
    "주요 기능이 교체 가능한 구조로 특성에 따라 쉽게 커스터마이징 가능합니다.",
    "외부 라이브러리 사용 최소화하여 기존 애플리케이션 적용에 용이합니다.",
    "플랫폼 독립적/의존적 모듈을 명확히 분리하여 타 플랫폼으로의 확장에 용이합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-announcement/api-announcement-bizuser-v2",
  "order": 140,
  "indexes": [
    {
  "title": "Biz 사용자별 Announcement 전송 V2",
  "hash": "",
  "sentences": [
    "Biz 사용자별 Announcement 전송 V2",
    "등록된 Biz 사용자가 Biz API 수신 및 제휴사 계정 인증을 한 경우, 계정 인증을 통해 생성된 토큰을 바탕으로 개인에게 특화된 Announcement 메세지를 사용자의 디바이스에 발송 할 수 있습니다.",
    "기존의",
    "Biz 사용자별 Announcement 전송 V1",
    "은 Response 의 응답 시간이 경우에 따라 길게 소요될 수가 있어서, V2버전의 경우 요청에 대한 응답을 미리 준 후 비동기로 요청을 처리하며, 처리된 결과는 문서에 정의된",
    "callback",
    "을 통해 전달 받을수 있도록 변경/개선 되었습니다."
  ]
},
    {
  "title": "Biz 사용자별 Announcement 전송 V2 > 1. URL",
  "hash": "#1-url-",
  "sentences": [
    "1. URL",
    "[POST] https://biz-api.sktnugu.com/api/v2/enrolledUser/user/{userApiToken}/announcement?callBack={callback}"
  ]
},
    {
  "title": "Biz 사용자별 Announcement 전송 V2 > 2. Request",
  "hash": "#2-request-",
  "sentences": [
    "2. Request"
  ]
},
    {
  "title": "Biz 사용자별 Announcement 전송 V2 > 2.1 Body",
  "hash": "#21-body-",
  "sentences": [
    "2.1 Body",
    "body",
    "{\n  \"playServiceId\": \"XXX\",\n  \"tts\": {\n    \"text\": \"발송 내용\",\n    \"speed\": \"100\",\n    \"pause1\": \"600\",\n    \"pause2\": \"300\"\n  },\n  \"display\": {\n    \"type\": \"imageText2\",\n    \"title\": \"타이틀\",\n    \"header\": \"헤더\",\n    \"body\": \"본문\",\n    \"footer\": \"부가설명\",\n    \"image\": \"http://imageUrl\",\n    \"grammarGuide\": [\n      \"발화문1\",\n      \"발화문2\"\n    ]\n  }\n}"
  ]
},
    {
  "title": "Biz 사용자별 Announcement 전송 V2 > 2.2 설명",
  "hash": "#22-설명-",
  "sentences": [
    "2.2 설명",
    "Publisher-Token | Header | string | Y | 퍼블리셔가 보유한 토큰",
    "userApiToken | path | string | Y | 발송할 사용자의 API 토큰",
    "callBack | query param | string |   | 처리결과를 받을 URL(80/443포트만 허용)미입력시 전송되지 않는다.",
    "playServiceId | body | string | Y | 발송 대상 play대상 play의 합성음, TTS Domain을 기준으로 SKML을 생성",
    "tts | body | object |   | TTS를 구성하는 객체",
    "tts.text | body | string | Y | 발화문장발화문장, Display 객체 중 반드시 1개 이상은 존재해야 한다.",
    "tts.speed | body | string |   | 발화속도85, 90… 120까지의 5단위 값기본값은 100",
    "tts.pause1 | body | string |   | 문장 사이 묵음 구간 길이300, 400… 900까지의 100단위 값기본값은 600",
    "tts.pause2 | body | string |   | 100, 200… 500까지의 100단위 값기본값은 300",
    "display | body | object | Y | Display 객체발화문장, Display 객체 중 반드시 1개 이상은 존재해야 한다.",
    "display.type | body | string | Y | 사용할 Display TemplateFullText1, ImageText2중 하나",
    "display.title | body | string | Y | 화면 타이틀",
    "display.header | body | string | Y | 본문 제목",
    "display.body | body | string | Y | 본문 내용",
    "display.footer | body | string |   | 본문 부가 설명",
    "display.image | body | string |   | 이미지ImageText Type에서 이미지가 없을 경우, 디폴트 이미지 노출",
    "display.grammarGuide | body | array of string |   | 가이드 발화문"
  ]
},
    {
  "title": "Biz 사용자별 Announcement 전송 V2 > 3. Response",
  "hash": "#3-response-",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자별 Announcement 전송 V2 > 3.1 HTTP Status",
  "hash": "#31-http-status-",
  "sentences": [
    "3.1 HTTP Status",
    "200 |   | 정상 요청",
    "403 |   | 퍼블리셔 API Token이 유효하지 않거나, 유효하지 않은 자원에 접근할 경우 리턴",
    "404 |   | 발송 요청한 사용자가 존재하지 않을 때 응답값",
    "400 | V1ANN001 | body 값을 파싱할 수 없음",
    "400 | V1ANN002 | playServiceId 없음",
    "400 | V1ANN101 | tts 객체가 모두 존재하지 않음",
    "400 | V1ANN102 | tts.text 없음",
    "400 | V1ANN103 | tts.speed 값이 잘못됨",
    "400 | V1ANN104 | tts.pause1 값이 잘못됨",
    "400 | V1ANN105 | tts.pause2 값이 잘못됨",
    "400 | V1ANN201 | display.type 값이 잘못됨",
    "400 | V1ANN202 | display.title 값이 없음",
    "400 | V1ANN203 | display.header 값이 없음",
    "400 | V1ANN204 | display.body 값이 없음",
    "400 | V1ANN301 | 허용되지 않는 playServiceId"
  ]
},
    {
  "title": "Biz 사용자별 Announcement 전송 V2 > 3.2 Body",
  "hash": "#32-body-",
  "sentences": [
    "3.2 Body",
    "callback URL을 입력했을 경우에만 전달받음",
    "{\n  \"id\": \"XXX\",\n  \"name\": \"XXX\",\n  \"email\": \"XXX\",\n  \"resultCode\": \"OK\",\n  \"deviceResults\": [\n    {\n      \"code\": \"XXX\"\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-announcement/api-announcement-shareddevice",
  "order": 139,
  "indexes": [
    {
  "title": "전용디바이스 그룹별 Announcement 전송",
  "hash": "",
  "sentences": [
    "전용디바이스 그룹별 Announcement 전송",
    "전용 디바이스로 등록된 그룹에 토큰을 기준으로 Announcement API를 발송 할 수 있습니다."
  ]
},
    {
  "title": "전용디바이스 그룹별 Announcement 전송 > 1. URL",
  "hash": "#1-url-",
  "sentences": [
    "1. URL",
    "[POST] https://biz-api.sktnugu.com/api/v1/sharedDevice/group/{groupApiToken}/announcement?callBack={callback}"
  ]
},
    {
  "title": "전용디바이스 그룹별 Announcement 전송 > 2. Request",
  "hash": "#2-request-",
  "sentences": [
    "2. Request"
  ]
},
    {
  "title": "전용디바이스 그룹별 Announcement 전송 > 2.1 Body",
  "hash": "#21-body-",
  "sentences": [
    "2.1 Body",
    "body",
    "{\n  \"playServiceId\": \"XXX\",\n  \"tts\": {\n    \"text\": \"발송 내용\",\n    \"speed\": \"100\",\n    \"pause1\": \"600\",\n    \"pause2\": \"300\"\n  },\n  \"display\": {\n    \"type\": \"imageText2\",\n    \"title\": \"타이틀\",\n    \"header\": \"헤더\",\n    \"body\": \"본문\",\n    \"footer\": \"부가설명\",\n    \"image\": \"http://imageUrl\",\n    \"grammarGuide\": [\n      \"발화문1\",\n      \"발화문2\"\n    ]\n  }\n}"
  ]
},
    {
  "title": "전용디바이스 그룹별 Announcement 전송 > 2.2 설명",
  "hash": "#22-설명-",
  "sentences": [
    "2.2 설명",
    "Publisher-Token | Header | string | Y | 퍼블리셔가 보유한 토큰",
    "groupApiToken | path | string | Y | 발송할 그룹의 API 토큰",
    "playServiceId | body | string | Y | 발송 대상 play대상 play의 합성음, TTS Domain을 기준으로 SKML을 생성",
    "tts | body | object |   | TTS를 구성하는 객체",
    "tts.text | body | string | Y | 발화문장발화문장, Display 객체 중 반드시 1개 이상은 존재해야 한다.",
    "tts.speed | body | string |   | 발화속도85, 90… 120까지의 5단위 값기본값은 100",
    "tts.pause1 | body | string |   | 문장 사이 묵음 구간 길이300, 400… 900까지의 100단위 값기본값은 600",
    "tts.pause2 | body | string |   | 100, 200… 500까지의 100단위 값기본값은 300",
    "display | body | object | Y | Display 객체발화문장, Display 객체 중 반드시 1개 이상은 존재해야 한다.",
    "display.type | body | string | Y | 사용할 Display TemplateFullText1, ImageText2중 하나",
    "display.title | body | string | Y | 화면 타이틀",
    "display.header | body | string | Y | 본문 제목",
    "display.body | body | string | Y | 본문 내용",
    "display.footer | body | string |   | 본문 부가 설명",
    "display.image | body | string |   | 이미지ImageText Type에서 이미지가 없을 경우, 디폴트 이미지 노출",
    "display.grammarGuide | body | array of string |   | 가이드 발화문"
  ]
},
    {
  "title": "전용디바이스 그룹별 Announcement 전송 > 3. Response",
  "hash": "#3-response-",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "전용디바이스 그룹별 Announcement 전송 > 3.1 HTTP Status",
  "hash": "#31-http-status-",
  "sentences": [
    "3.1 HTTP Status",
    "202 |   | 정상 요청",
    "403 |   | 퍼블리셔 API Token이 유효하지 않거나, 유효하지 않은 자원에 접근할 경우 리턴",
    "404 |   | 발송 요청한 그룹이 존재하지 않을 때 응답값",
    "400 | V1ANN001 | body 값을 파싱할 수 없음",
    "400 | V1ANN002 | playServiceId 없음",
    "400 | V1ANN101 | tts 객체가 존재하지 않음",
    "400 | V1ANN102 | tts.text 없음",
    "400 | V1ANN103 | tts.speed 값이 잘못됨",
    "400 | V1ANN104 | tts.pause1 값이 잘못됨",
    "400 | V1ANN105 | tts.pause2 값이 잘못됨",
    "400 | V1ANN201 | display.type 값이 잘못됨",
    "400 | V1ANN202 | display.title 값이 없음",
    "400 | V1ANN203 | display.header 값이 없음",
    "400 | V1ANN204 | display.body 값이 없음",
    "400 | V1ANN301 | 허용되지 않는 playServiceId"
  ]
},
    {
  "title": "전용디바이스 그룹별 Announcement 전송 > 3.2 Body",
  "hash": "#32-body-",
  "sentences": [
    "3.2 Body",
    "callback URL을 입력했을 경우에만 전달받음",
    "{\n  \"devices\": [\n    {\n      \"uniqueName\": \"XXX\",\n      \"token\": \"XXX\",\n      \"resultCode\": \"XXX\"\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-announcement/api-announcement-usergroup",
  "order": 141,
  "indexes": [
    {
  "title": "Biz 사용자 그룹별 Announcement 전송",
  "hash": "",
  "sentences": [
    "Biz 사용자 그룹별 Announcement 전송",
    "등록된 Biz 사용자의 그룹 토큰을 기준으로, Biz 사용자가 수신 지정한 디바이스에 Announcement API를 발송 할 수 있습니다."
  ]
},
    {
  "title": "Biz 사용자 그룹별 Announcement 전송 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[POST] https://biz-api.sktnugu.com/api/v1/enrolledUser/group/{groupApiToken}/announcement?callBack={callback}"
  ]
},
    {
  "title": "Biz 사용자 그룹별 Announcement 전송 > 2. Request",
  "hash": "#2-request-",
  "sentences": [
    "2. Request"
  ]
},
    {
  "title": "Biz 사용자 그룹별 Announcement 전송 > 2.1 Body",
  "hash": "#21-body-",
  "sentences": [
    "2.1 Body",
    "{\n  \"playServiceId\": \"XXX\",\n  \"tts\": {\n    \"text\": \"발송 내용\",\n    \"speed\": \"100\",\n    \"pause1\": \"600\",\n    \"pause2\": \"300\"\n  },\n  \"display\": {\n    \"type\": \"imageText2\",\n    \"title\": \"타이틀\",\n    \"header\": \"헤더\",\n    \"body\": \"본문\",\n    \"footer\": \"부가설명\",\n    \"image\": \"http://imageUrl\",\n    \"grammarGuide\": [\n      \"발화문1\",\n      \"발화문2\"\n    ]\n  }\n}"
  ]
},
    {
  "title": "Biz 사용자 그룹별 Announcement 전송 > 2.2 설명",
  "hash": "#22-설명-",
  "sentences": [
    "2.2 설명",
    "Publisher-Token | Header | string | Y | 퍼블리셔가 보유한 토큰",
    "groupApiToken | path | string | Y | 발송할 그룹의 API 토큰",
    "playServiceId | body | string | Y | 발송 대상 play대상 play의 합성음, TTS Domain을 기준으로 SKML을 생성",
    "tts | body | object |   | TTS를 구성하는 객체",
    "tts.text | body | string | Y | 발화문장발화문장, Display 객체 중 반드시 1개 이상은 존재해야 한다.",
    "tts.speed | body | string |   | 발화속도85, 90… 120까지의 5단위 값기본값은 100",
    "tts.pause1 | body | string |   | 문장 사이 묵음 구간 길이300, 400… 900까지의 100단위 값기본값은 600",
    "tts.pause2 | body | string |   | 100, 200… 500까지의 100단위 값기본값은 300",
    "display | body | object | Y | Display 객체발화문장, Display 객체 중 반드시 1개 이상은 존재해야 한다.",
    "display.type | body | string | Y | 사용할 Display TemplateFullText1, ImageText2중 하나",
    "display.title | body | string | Y | 화면 타이틀",
    "display.header | body | string | Y | 본문 제목",
    "display.body | body | string | Y | 본문 내용",
    "display.footer | body | string |   | 본문 부가 설명",
    "display.image | body | string |   | 이미지ImageText Type에서 이미지가 없을 경우, 디폴트 이미지 노출",
    "display.grammarGuide | body | array of string |   | 가이드 발화문"
  ]
},
    {
  "title": "Biz 사용자 그룹별 Announcement 전송 > 3. Response",
  "hash": "#3-response-",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 그룹별 Announcement 전송 > 3.1 HTTP Status",
  "hash": "#31-http-status-",
  "sentences": [
    "3.1 HTTP Status",
    "202 |   | 정상 요청",
    "403 |   | 퍼블리셔 API Token이 유효하지 않거나, 유효하지 않은 자원에 접근할 경우 리턴",
    "404 |   | 발송 요청한 그룹이 존재하지 않을 때 응답값",
    "400 | V1ANN001 | body 값을 파싱할 수 없음",
    "400 | V1ANN002 | playServiceId 없음",
    "400 | V1ANN101 | tts 객체가 모두 존재하지 않음",
    "400 | V1ANN102 | tts.text 없음",
    "400 | V1ANN103 | tts.speed 값이 잘못됨",
    "400 | V1ANN104 | tts.pause1 값이 잘못됨",
    "400 | V1ANN105 | tts.pause2 값이 잘못됨",
    "400 | V1ANN201 | display.type 값이 잘못됨",
    "400 | V1ANN202 | display.title 값이 없음",
    "400 | V1ANN203 | display.header 값이 없음",
    "400 | V1ANN204 | display.body 값이 없음",
    "400 | V1ANN204 | 허용되지 않는 playServiceId"
  ]
},
    {
  "title": "Biz 사용자 그룹별 Announcement 전송 > 3.2 Body",
  "hash": "#32-body-",
  "sentences": [
    "3.2 Body",
    "callback URL을 입력했을 경우에만 전달받음",
    "{\n  \"users\": [\n    {\n      \"id\": \"XXX\",\n      \"name\": \"XXX\",\n      \"email\": \"XXX\",\n      \"resultCode\": \"OK\",\n      \"deviceResults\": [\n        {\n          \"code\": \"XXX\"\n        }\n      ]\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-announcement",
  "order": 138,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz-1/api-enrolleduser-cancel-invite",
  "order": 134,
  "indexes": [
    {
  "title": "Biz 사용자 초대 취소",
  "hash": "",
  "sentences": [
    "Biz 사용자 초대 취소",
    "초대 진행중인 Biz 사용자의 초대 절차를 취소합니다.",
    "초대 취소 요청이 수락되어도, 이미 초대 완료된 Biz 사용자에 대해서는 취소가 불가능합니다.",
    "Biz Service 초대장 발송 시에는, Biz Kit 기본 정보 필수값이 미리 입력되어 있어야 합니다. Biz Kit 기본 정보 입력 를 참고해주세요."
  ]
},
    {
  "title": "Biz 사용자 초대 취소 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[DELETE] {{hostName}}/api/v1/invitation/{invitationId}"
  ]
},
    {
  "title": "Biz 사용자 초대 취소 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request"
  ]
},
    {
  "title": "Biz 사용자 초대 취소 > 2.1 Body",
  "hash": "#21-body",
  "sentences": [
    "2.1 Body",
    "body",
    "{\n  \"users\": [\n    {\n      \"email\": \"XXX\"\n    }\n  ]\n}"
  ]
},
    {
  "title": "Biz 사용자 초대 취소 > 2.2 설명",
  "hash": "#22-설명",
  "sentences": [
    "2.2 설명",
    "Publisher-Token | Header | string |   | Y | 퍼블리셔가 보유한 토큰",
    "invitationId | parameter | int |   | Y | 초대 사유",
    "users | body | array of object |   |   | 초대한 사용자의 정보",
    "users[].email | body | string | 350 | Y | 취소대상자의 이메일만일 값이 비워져 있을 경우 초대 요청 내 모든 사용자에 대한 초대 취소가 이뤄진다.대상자를 지정했어도 이미 사용자가 초대를 수락한 경우 취소처리되지 않는다."
  ]
},
    {
  "title": "Biz 사용자 초대 취소 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 초대 취소 > 3.1 HTTP Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 HTTP Status",
    "200 |   | 정상적으로 초대 취소 요청이 수락된 경우의 응답",
    "403 |   | 퍼블리셔 API Token이 유효하지 않거나, 유효하지 않은 자원에 접근할 경우 리턴",
    "406 |   | 초대 요청 사용자가 초대 행위를 이미 진행했거나, 진행중으로 취소가 불가능한 경우의 응답",
    "404 |   | 대상되는 초대 요청 사용자가 없음"
  ]
},
    {
  "title": "Biz 사용자 초대 취소 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"users\": [\n    {\n      \"email\": \"XXX\"\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz/api-enrolleduser-creategroup",
  "order": 122,
  "indexes": [
    {
  "title": "Biz 사용자 그룹 생성",
  "hash": "",
  "sentences": [
    "Biz 사용자 그룹 생성",
    "Biz 사용자를 관리하기 위한 그룹을 생성하는 기능입니다."
  ]
},
    {
  "title": "Biz 사용자 그룹 생성 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[POST] https://biz-api.sktnugu.com/api/v1/enrolledUser/group"
  ]
},
    {
  "title": "Biz 사용자 그룹 생성 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request"
  ]
},
    {
  "title": "Biz 사용자 그룹 생성 > 2.1 Body",
  "hash": "#21-body",
  "sentences": [
    "2.1 Body",
    "body",
    "{\n  \"name\": \"XXX\",\n  \"alias\": \"XXX\",\n  \"playServiceIds\": [\n    \"aaa.bbb.ccc\",\n    \"ddd.eee.fff\"\n  ]\n}"
  ]
},
    {
  "title": "Biz 사용자 그룹 생성 > 2.2 설명",
  "hash": "#22-설명",
  "sentences": [
    "2.2 설명",
    "Publisher-Token | Header | string |   | Y | 퍼블리셔가 보유한 토큰",
    "name | body | string | 100 | Y | 생성할 그룹 이름",
    "alias | body | string | 100 |   | 생성할 그룹의 Alias",
    "playServiceIds | body | array of string | 각각 100 |   | 퍼블리셔가 소유한 그룹에 할당할 private play 목록"
  ]
},
    {
  "title": "Biz 사용자 그룹 생성 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 그룹 생성 > 3.1 Http Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 Http Status",
    "201 |   | 정상 생성",
    "403 |   | 퍼블리셔 API Token이 유효하지 않을 경우의 응답",
    "401 |   | 생성하고자 하는 그룹이름이 기존재할 경우의 응답",
    "400 | PLAY001 | 요청한 play의 playServiceId가 없거나 잘못된 경우",
    "400 | PLAY002 | 요청한 play가 서비스중이 아닌 경우",
    "400 | PLAY003 | 퍼블리셔의 소유가 아닌 play를 요청한 경우",
    "400 | GROUP002 | 그룹명이 없거나, 사이즈를 초과할 경우",
    "400 | GROUP003 | alias의 사이즈를 초과한 경우"
  ]
},
    {
  "title": "Biz 사용자 그룹 생성 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"id\": \"XXX\",\n  \"name\": \"XXX\",\n  \"token\": \"XXX\",\n  \"alias\": \"XXX\",\n  \"playServiceIds\": [\n    \"aaa.bbb.ccc\",\n    \"ddd.eee.fff\"\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz-1/api-enrolleduser-createtoken",
  "order": 135,
  "indexes": [
    {
  "title": "Biz 사용자 API Token 생성",
  "hash": "",
  "sentences": [
    "Biz 사용자 API Token 생성",
    "Biz 사용자를 대상으로 Announcement 등 API를 발송할 때, 제휴사 계정을 인증하여 해당 계정 기준으로 토큰을 발급하고 발송 할 수 있도록 합니다.",
    "유의사항",
    "Developers는 Biz 사용자를 식별하는 키로 email을 사용한다.\n    \n      email이 다르지만 Biz Api Token이 같은 경우를 허용하지 않는다.",
    "email이 다르지만 Biz Api Token이 같은 경우를 허용하지 않는다.",
    "Developers는 초대받은 Biz 사용자가 모든 초대과정을 정상적으로 마친 경우에만 정상적인 Biz 사용자로서 식별하며, 사용자에 의한 페이지 이탈등의 행위로 초대과정이 중단된 경우 상태를 유지하지 않는다.\n    \n      제휴사는 userApiToken을 전달했으나(제휴사 서비스에 저장했으나), 사용자가 초대행위를 마치지 않고 중단했다면, 생성한 userApiToken은 사용할 수 없다.",
    "제휴사는 userApiToken을 전달했으나(제휴사 서비스에 저장했으나), 사용자가 초대행위를 마치지 않고 중단했다면, 생성한 userApiToken은 사용할 수 없다."
  ]
},
    {
  "title": "Biz 사용자 API Token 생성 > 1. 절차",
  "hash": "#1-절차-",
  "sentences": [
    "1. 절차",
    "Biz 사용자는 초대 링크로 진입할 경우 NUGU ID 로그인을 수행한다.",
    "Developers는 기등록된 제휴사의 인증 URL로 status, callBack, email을 전달한다.\n    \n      status, email 은 Developers에서 생성된 값으로서 수정되어서는 안된다.",
    "status, email 은 Developers에서 생성된 값으로서 수정되어서는 안된다.",
    "제휴사는 인증과정을 통해 사용자 API Token을 생성하고, 전달받은 callBack에 userApiToken과 status를 전달한다."
  ]
},
    {
  "title": "Biz 사용자 API Token 생성 > 2. 인증 요청 [Developers 요청]",
  "hash": "#2-인증-요청-developers-요청-",
  "sentences": [
    "2. 인증 요청 [Developers 요청]",
    "Developers에서 기등록된 제휴사의 인증 URL로 인증을 요청한다.",
    "인증 URL을 통해 로그인 등의 행위들로 사용자를 식별하여, Biz 사용자 API Token을 생성한후, 요청시 전달한 callBack로 결과를 리턴한다."
  ]
},
    {
  "title": "Biz 사용자 API Token 생성 > 2.1 Request",
  "hash": "#21-request-",
  "sentences": [
    "2.1 Request",
    "status | query param | string | Y | Developers에서 사용자를 식별하는 키값으로서 전달된 값을 바꾸어서는 안된다.",
    "callBack | query param | string | Y | 인증을 마친후 생성한 Biz 사용자 API Token과 status를 전달할 URL",
    "email | query param | string | Y | Developers에서 초대한 사용자 이메일을 식별하는 키값으로서 전달된 값을 변경해서는 안된다."
  ]
},
    {
  "title": "Biz 사용자 API Token 생성 > 2.2 Response",
  "hash": "#22-response-",
  "sentences": [
    "2.2 Response"
  ]
},
    {
  "title": "Biz 사용자 API Token 생성 > 3. 인증 결과 수신 [제휴사 요청]",
  "hash": "#3-인증-결과-수신-제휴사-요청-",
  "sentences": [
    "3. 인증 결과 수신 [제휴사 요청]",
    "Developers에서 사용자 API Token을 저장하는 API로서 POST 방식로 전송한다.",
    "Developers는 전달받은 파라미터가 유효하지 않을 경우, confirmUrl로 결과코드를 전송한다."
  ]
},
    {
  "title": "Biz 사용자 API Token 생성 > 3.1 Request",
  "hash": "#31-request-",
  "sentences": [
    "3.1 Request",
    "status | query param | string | Y | Developers에서 사용자를 식별하는 키값으로서 인증 요청에 전달된 값을 바꾸어서는 안된다.",
    "userApiToken | query param | string | Y | 인증을 마친후 생성한 Biz 사용자 API Token",
    "confirmUrl | query param | string |   | 사용자가 정상적인 초대행위를 마친 경우 제휴사에 성공결과를 전달하기 위한 URL 없을 경우 전송하지 않는다."
  ]
},
    {
  "title": "Biz 사용자 API Token 생성 > 3.2 Response",
  "hash": "#32-response-",
  "sentences": [
    "3.2 Response"
  ]
},
    {
  "title": "Biz 사용자 API Token 생성 > 4. 인증 결과 전송 [Developers 요청]",
  "hash": "#4-인증-결과-전송-developers-요청-",
  "sentences": [
    "4. 인증 결과 전송 [Developers 요청]",
    "제휴사에서 인증 결과를 전송받고자 confirmUrl을 입력했다면, 입력한 URL로 처리결과를 POST로 전송한다."
  ]
},
    {
  "title": "Biz 사용자 API Token 생성 > 4.1 Request",
  "hash": "#41-request-",
  "sentences": [
    "4.1 Request"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz/api-enrolleduser-deletegroup",
  "order": 124,
  "indexes": [
    {
  "title": "Biz 사용자 그룹 삭제",
  "hash": "",
  "sentences": [
    "Biz 사용자 그룹 삭제",
    "그룹을 삭제 하는 기능입니다. 만일 삭제하는 그룹내 사용자가 존재할 경우, 기존 사용자는 그룹 미분류 상태로 변경됩니다."
  ]
},
    {
  "title": "Biz 사용자 그룹 삭제 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[DELETE] https://biz-api.sktnugu.com/api/v1/enrolledUser/group/{groupId}"
  ]
},
    {
  "title": "Biz 사용자 그룹 삭제 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request",
    "Publisher-Token | Header | Y | 퍼블리셔가 보유한 토큰",
    "groupId | path | Y | 삭제하고자 하는 그룹 ID"
  ]
},
    {
  "title": "Biz 사용자 그룹 삭제 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz-1/api-enrolleduser-deleteuser",
  "order": 130,
  "indexes": [
    {
  "title": "Biz 사용자 삭제",
  "hash": "",
  "sentences": [
    "Biz 사용자 삭제",
    "등록된 사용자를 삭제하는 기능입니다."
  ]
},
    {
  "title": "Biz 사용자 삭제 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[DELETE] https://biz-api.sktnugu.com/api/v1/enrolledUser/user/{userId}"
  ]
},
    {
  "title": "Biz 사용자 삭제 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request",
    "Publisher-Token | Header | Y | 퍼블리셔가 보유한 토큰",
    "userId | path | Y | 삭제하고자 하는 사용자 ID"
  ]
},
    {
  "title": "Biz 사용자 삭제 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz-1/api-enrolleduser-getinfo",
  "order": 132,
  "indexes": [
    {
  "title": "Biz 사용자 상세 조회",
  "hash": "",
  "sentences": [
    "Biz 사용자 상세 조회",
    "초대되어 퍼블리셔에 등록된 Biz 사용자 상세정보를 조회하는 기능입니다."
  ]
},
    {
  "title": "Biz 사용자 상세 조회 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[GET] https://biz-api.sktnugu.com/api/v1/enrolledUser/user/{userId}"
  ]
},
    {
  "title": "Biz 사용자 상세 조회 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request",
    "Publisher-Token | Header | Y | 퍼블리셔가 보유한 토큰",
    "userId | path | Y | Biz 사용자 ID"
  ]
},
    {
  "title": "Biz 사용자 상세 조회 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 상세 조회 > 3.1 Http Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 Http Status",
    "200 | 정상 응답",
    "403 | 퍼블리셔 API Token이 유효하지 않을 경우의 응답",
    "404 | 대상 Biz 사용자를 찾을 수 없을 때 응답"
  ]
},
    {
  "title": "Biz 사용자 상세 조회 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"id\": \"XXX\",\n  \"name\": \"XXX\",\n  \"token\": \"XXX\",\n  \"email\": \"XXX\",\n  \"alias\": \"XXX\",\n  \"phone\": \"XXX\",\n  \"group\": {\n    \"id\": \"XXX\",\n    \"name\": \"XXX\"\n  },\n  \"serviceType\": \"SERVICE\",\n  \"serviceAgreeYn\": \"Y\",\n  \"serviceApiAgreeYn\": \"Y\",\n  \"serviceApiAllowedDeviceCount\": 3,\n  \"serviceAcceptedDateTime\": \"2021-0804T16:34:30.388\",\n  \"plays\": [\n    {\n      \"playServiceId\": \"a.b.c\",\n      \"token\": \"XXX\",\n      \"agreeYn\": \"Y\"\n      \"apiAgreeYn\": \"Y\",\n      \"apiAllowedDeviceCount\": 3,\n      \"acceptedDateTime\": \"2021-0804T16:34:30.388\"\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz-1/api-enrolleduser-getinviteinfo",
  "order": 133,
  "indexes": [
    {
  "title": "Biz 사용자 초대 목록 조회",
  "hash": "",
  "sentences": [
    "Biz 사용자 초대 목록 조회",
    "현재 진행중인 초대 건의 목록을 제공합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 목록 조회 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[GET] https://biz-api.sktnugu.com/api/v1/invitation"
  ]
},
    {
  "title": "Biz 사용자 초대 목록 조회 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request",
    "Publisher-Token | Header | string | Y | 퍼블리셔가 보유한 토큰"
  ]
},
    {
  "title": "Biz 사용자 초대 목록 조회 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 초대 목록 조회 > 3.1 HTTP Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 HTTP Status",
    "200 | 조회/수정시 정상적인 응답",
    "403 | 퍼블리셔 API Token이 유효하지 않을 경우의 응답"
  ]
},
    {
  "title": "Biz 사용자 초대 목록 조회 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"invitations\": [\n    {\n      \"id\": 333,\n      \"cause\": \"서비스 사용을 위한 초대\",\n      \"createdDate\": \"2017-11-06T06:00:00.000Z\",\n      \"targetPlayServiceIds\": [\n        \"aaa.bbb.ccc\",\n        \"ddd.eee.fff\"\n      ],\n      \"targetGroupId\": \"XXX\",\n      \"users\": [\n        {\n          \"email\": \"XXX\",\n          \"name\": \"XXX\",\n          \"alias\": \"XXX\",\n          \"status\": \"ENABLE\"\n        }\n      ]\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz-1/api-enrolleduser-getlist",
  "order": 131,
  "indexes": [
    {
  "title": "Biz 사용자 목록 조회",
  "hash": "",
  "sentences": [
    "Biz 사용자 목록 조회",
    "초대되어 퍼블리셔에 등록된 Biz 사용자 목록을 조회하는 기능입니다."
  ]
},
    {
  "title": "Biz 사용자 목록 조회 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[GET] https://biz-api.sktnugu.com/api/v1/enrolledUser/user?page=1&pageSize=20"
  ]
},
    {
  "title": "Biz 사용자 목록 조회 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request",
    "Publisher-Token | Header | Y | 퍼블리셔가 보유한 토큰",
    "page | query param |   | default : 1",
    "pageSize | query param |   | default : 20"
  ]
},
    {
  "title": "Biz 사용자 목록 조회 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 목록 조회 > 3.1 Http Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 Http Status",
    "200 | 정상 응답",
    "403 | 퍼블리셔 API Token이 유효하지 않을 경우의 응답"
  ]
},
    {
  "title": "Biz 사용자 목록 조회 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"totalPages\": 10,\n  \"totalElements\": 100,\n  \"users\": [\n    {\n      \"id\": \"XXX\",\n      \"name\": \"XXX\",\n      \"email\": \"XXX\",\n      \"alias\": \"XXX\",\n      \"phone\": \"XXX\",\n      \"group\": {\n        \"id\": \"XXX\",\n        \"name\": \"XXX\"\n      },\n      \"serviceType\": \"SERVICE\",\n      \"apiAgreeType\": \"AGREE\",\n      \"authType\": \"ALL\",\n      \"acceptedDateTime\": \"2021-0804T16:34:30.388\"\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz/api-enrolleduser-group-getinfo",
  "order": 126,
  "indexes": [
    {
  "title": "Biz 사용자 그룹 상세 조회",
  "hash": "",
  "sentences": [
    "Biz 사용자 그룹 상세 조회",
    "Biz 사용자 그룹 정보를 상세 확인 할 수 있는 기능입니다."
  ]
},
    {
  "title": "Biz 사용자 그룹 상세 조회 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[GET] https://biz-api.sktnugu.com/api/v1/enrolledUser/group/{groupId}"
  ]
},
    {
  "title": "Biz 사용자 그룹 상세 조회 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request",
    "Publisher-Token | Header | Y | 퍼블리셔가 보유한 토큰",
    "groupId | path | Y | 그룹 ID or unmappedUser(그룹에 속하지 않은 사용자)"
  ]
},
    {
  "title": "Biz 사용자 그룹 상세 조회 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 그룹 상세 조회 > 3.1 Http Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 Http Status",
    "200 | 정상 응답",
    "403 | 퍼블리셔 API Token이 유효하지 않을 경우의 응답",
    "404 | 대상 그룹을 찾을 수 없을 때 응답"
  ]
},
    {
  "title": "Biz 사용자 그룹 상세 조회 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"id\": \"XXX\",\n  \"name\": \"XXX\",\n  \"token\": \"XXX\",\n  \"alias\": \"XXX\",\n  \"playServiceIds\": [\n    \"aaa.bbb.ccc\",\n    \"a1.b1.c1\"\n  ],\n  \"users\": [\n    {\n      \"id\": \"XXX\",\n      \"name\": \"XXX\",\n      \"email\": \"XXX\",\n      \"phone\": \"XXX\",\n      \"alias\": \"XXX\",\n      \"serviceType\": \"SERVICE\",\n      \"apiAgreeType\": \"ALL\",\n      \"authType\": \"ALL\",\n      \"acceptedDateTime\": \"2021-0804T16:34:30.388\"\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz/api-enrolleduser-group-getlist",
  "order": 125,
  "indexes": [
    {
  "title": "Biz 사용자 그룹 목록 조회",
  "hash": "",
  "sentences": [
    "Biz 사용자 그룹 목록 조회",
    "퍼블리셔가 보유한 Biz 사용자 그룹의 목록 조회하는 기능입니다."
  ]
},
    {
  "title": "Biz 사용자 그룹 목록 조회 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[GET] https://biz-api.sktnugu.com/api/v1/enrolledUser/group?page=1&pageSize=20"
  ]
},
    {
  "title": "Biz 사용자 그룹 목록 조회 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request",
    "Publisher-Token | Header | Y | 퍼블리셔가 보유한 토큰",
    "page | query param |   | default : 1",
    "pageSize | query param |   | default : 20"
  ]
},
    {
  "title": "Biz 사용자 그룹 목록 조회 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 그룹 목록 조회 > 3.1 Http Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 Http Status",
    "200 | 정상 응답",
    "403 | 퍼블리셔 API Token이 유효하지 않을 경우의 응답"
  ]
},
    {
  "title": "Biz 사용자 그룹 목록 조회 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"totalPages\": 10,\n  \"totalElements\": 100,\n  \"unmappedUserCount\": 3,\n  \"groups\": [\n    {\n      \"id\": \"XXX\",\n      \"name\": \"XXX\",\n      \"token\": \"XXX\",\n      \"alias\": \"XXX\",\n      \"playCount\": 3,\n      \"userCount\": 3,\n      \"createdDateTime\": \"2021-0804T16:34:30.388\"\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz-1/api-enrolleduser-invite",
  "order": 128,
  "indexes": [
    {
  "title": "Biz 사용자 초대",
  "hash": "",
  "sentences": [
    "Biz 사용자 초대",
    "Biz 사용자를 등록하기 위해, 초대 메일을 발송하는 기능입니다.",
    "Biz Service 초대장 발송 시에는, Biz Kit 기본 정보 필수값이 미리 입력되어 있어야 합니다. Biz Kit 기본 정보 입력 를 참고해주세요."
  ]
},
    {
  "title": "Biz 사용자 초대 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[POST] https://biz-api.sktnugu.com/api/v1/enrolledUser/invitation"
  ]
},
    {
  "title": "Biz 사용자 초대 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request"
  ]
},
    {
  "title": "Biz 사용자 초대 > 2.1 Body",
  "hash": "#21-body",
  "sentences": [
    "2.1 Body",
    "body",
    "{\n  \"reason\": \"서비스 사용을 위한 초대\",\n  \"targetPlayServiceIds\": [\n    \"aaa.bbb.ccc\",\n    \"ddd.eee.fff\"\n  ],\n  \"targetGroupId\": \"XXX\",\n  \"users\": [\n    {\n      \"email\": \"XXX\",\n      \"name\": \"XXX\",\n      \"phone\": \"XXX\",\n      \"alias\": \"XXX\"\n    }\n  ]\n}"
  ]
},
    {
  "title": "Biz 사용자 초대 > 2.2 설명",
  "hash": "#22-설명",
  "sentences": [
    "2.2 설명",
    "Publisher-Token | Header | string |   | Y | 퍼블리셔가 보유한 토큰",
    "reason | body | string | 400 |   | 초대 사유",
    "targetPlayServiceIds | body | array of string | 각각 100 |   | 초대 대상 play의 playServiceId targetGroupId 와 중복해서 요청할 수 없다.",
    "targetGroupId | body | string | 100 |   | 초대 대상 그룹 ID targetPlayServiceIds 와 중복해서 요청할 수 없다.",
    "users | body | array of object |   |   | 초대한 사용자의 정보",
    "users[].email | body | string | 350 | Y | 초대한 사용자의 이메일 만일 초대된 리스트에 동일한 이메일이 존재할 경우 재초대가 이뤄지며, name, alias가 갱신된다.",
    "users[].name | body | string | 100 | Y | 초대한 사용자의 이름",
    "users[].phone | body | string | 12 | Y | 초대한 사용자의 전화번호",
    "users[].alias | body | string | 100 |   | 초대한 사용자의 Alias"
  ]
},
    {
  "title": "Biz 사용자 초대 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 초대 > 3.1 HTTP Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 HTTP Status",
    "201 |   | 정상 초대",
    "403 |   | 퍼블리셔 API Token이 유효하지 않거나, 유효하지 않은 자원에 접근할 경우 리턴",
    "400 | PUB001 | Biz Kit 기본 필수정보 없는 상태",
    "400 | PLAY001 | 요청한 play의 playServiceId가 없거나 잘못된 경우",
    "400 | PLAY002 | 요청한 play가 서비스중이 아닌 경우",
    "400 | PLAY003 | 퍼블리셔의 소유가 아닌 play를 요청한 경우",
    "400 | GROUP001 | 그룹이 존재하지 않거나, 퍼블리셔의 소유가 아닌 경우",
    "400 | GROUP004 | targetPlayServiceIds, targetGroupId 중복 요청하는 경우",
    "400 | GROUP005 | 그룹에 Private Play 설정 없이 초대하는 경우",
    "400 | USER001 | Biz사용자 초대/수정시 email이 없거나 사이즈를 초과한 경우",
    "400 | USER002 | Biz사용자 초대/수정시 name이 없거나 사이즈를 초과한 경우",
    "400 | USER003 | Biz사용자 초대/수정시 alias의사이즈를 초과한 경우",
    "400 | USER005 | Biz사용자 초대/수정시 phone 정보가 불 충분할 경우",
    "400 | USER006 | Biz사용자 초대/수정시 초대 사유(reason) 정보가 불 충분할 경우",
    "400 | USER007 | 체험판 회원의 경우 허용 사용자를 초과하는 경우"
  ]
},
    {
  "title": "Biz 사용자 초대 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"id\": 333\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz/api-enrolleduser-modgroup",
  "order": 123,
  "indexes": [
    {
  "title": "Biz 사용자 그룹 수정",
  "hash": "",
  "sentences": [
    "Biz 사용자 그룹 수정",
    "Biz 사용자 그룹의 정보를 수정하는 기능입니다."
  ]
},
    {
  "title": "Biz 사용자 그룹 수정 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[PUT] https://biz-api.sktnugu.com/api/v1/enrolledUser/group/{groupId}"
  ]
},
    {
  "title": "Biz 사용자 그룹 수정 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request"
  ]
},
    {
  "title": "Biz 사용자 그룹 수정 > 2.1 body",
  "hash": "#21-body",
  "sentences": [
    "2.1 body",
    "body",
    "{\n  \"name\": \"XXX\",\n  \"alias\": \"XXX\",\n  \"playServiceIds\": [\n    \"aaa.bbb.ccc\",\n    \"ddd.eee.fff\"\n  ]\n}"
  ]
},
    {
  "title": "Biz 사용자 그룹 수정 > 2.2 설명",
  "hash": "#22-설명",
  "sentences": [
    "2.2 설명",
    "Publisher-Token | Header | string |   | Y | 퍼블리셔가 보유한 토큰",
    "groupId | path | string |   | Y | 수정하고자 하는 그룹 ID",
    "name | body | string | 100 | Y | 생성할 그룹 이름",
    "alias | body | string | 100 |   | 생성할 그룹의 Alias",
    "playServiceIds | body | array of string | 각각 100 |   | 퍼블리셔가 소유한 그룹에 할당할 private play 목록"
  ]
},
    {
  "title": "Biz 사용자 그룹 수정 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 그룹 수정 > 3.1 HTTP Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 HTTP Status",
    "200 |   | 정상 수정",
    "403 |   | 퍼블리셔 API Token이 유효하지 않거나, 유효하지 않은 자원에 접근할 경우 리턴",
    "404 |   | 수정요청한 그룹이 존재하지 않을 때 응답값",
    "401 |   | 변경하고자 하는 그룹이름이 기존재할 경우의 응답",
    "400 | PLAY001 | 요청한 play의 playServiceId가 없거나 잘못된 경우",
    "400 | PLAY002 | 요청한 play가 서비스중이 아닌 경우",
    "400 | PLAY003 | 퍼블리셔의 소유가 아닌 play를 요청한 경우",
    "400 | GROUP002 | 그룹생성/수정시 그룹명이 없거나, 사이즈를 초과할 경우",
    "400 | GROUP003 | 그룹생성/수정시 alias의 사이즈를 초과한 경우"
  ]
},
    {
  "title": "Biz 사용자 그룹 수정 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"id\": \"XXX\",\n  \"name\": \"XXX\",\n  \"token\": \"XXX\",\n  \"alias\": \"XXX\",\n  \"playServiceIds\": [\n    \"aaa.bbb.ccc\",\n    \"ddd.eee.fff\"\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz-1/api-enrolleduser-moduser",
  "order": 129,
  "indexes": [
    {
  "title": "Biz 사용자 수정",
  "hash": "",
  "sentences": [
    "Biz 사용자 수정",
    "초대 완료되어 등록된 사용자의 정보를 수정하는 기능입니다."
  ]
},
    {
  "title": "Biz 사용자 수정 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[PUT] https://biz-api.sktnugu.com/api/v1/enrolledUser/user/{userId}"
  ]
},
    {
  "title": "Biz 사용자 수정 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request"
  ]
},
    {
  "title": "Biz 사용자 수정 > 2.1 body",
  "hash": "#21-body",
  "sentences": [
    "2.1 body",
    "body",
    "{\n  \"name\": \"XXX\",\n  \"alias\": \"XXX\",\n  \"targetGroupId\": \"XXX\"\n}"
  ]
},
    {
  "title": "Biz 사용자 수정 > 2.2 설명",
  "hash": "#22-설명",
  "sentences": [
    "2.2 설명",
    "Publisher-Token | Header | string |   | Y | 퍼블리셔가 보유한 토큰",
    "userId | path | string |   | Y | 수정하고자 하는 사용자의 API 토큰",
    "name | body | string | 100 | Y | 수정할 사용자의 이름",
    "alias | body | string | 각각 100 |   | 수정할 사용자의 Alias",
    "targetGroupId | body | string |   |   | 변경할 그룹 ID 미입력시 변경되지 않으며, 변경시 서비스 동의 사용자의 경우 별도의 과정없이 변경이 가능하나, Play 동의 사용자일 경우 해당 그룹으로 재초대되는 절차를 거친다.또한 Play 동의 사용자일 경우 동의를 완료하기 전까지 그룹이 변경되지 않는다."
  ]
},
    {
  "title": "Biz 사용자 수정 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "Biz 사용자 수정 > 3.1 HTTP Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 HTTP Status",
    "200 |   | 정상 수정",
    "403 |   | 퍼블리셔 API Token이 유효하지 않거나, 유효하지 않은 자원에 접근할 경우 리턴",
    "404 |   | 수정요청한 그룹이 존재하지 않을 때 응답값",
    "401 |   | 변경하고자 하는 그룹이름이 기존재할 경우의 응답",
    "400 | USER002 | Biz사용자 초대/수정시 name이 없거나 사이즈를 초과한 경우",
    "400 | USER003 | Biz사용자 초대/수정시 alias의사이즈를 초과한 경우",
    "400 | USER004 | Bizt사용자 초대/수정시 기존에 중복된 email이 존재할 경우",
    "400 | USER008 | Biz Kit 기본 필수정보 없는 상태",
    "400 | GROUP001 | 그룹이 존재하지 않거나, 퍼블리셔의 소유가 아닌 경우"
  ]
},
    {
  "title": "Biz 사용자 수정 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"id\": \"XXX\",\n  \"email\": \"XXX\",\n  \"name\": \"XXX\",\n  \"alias\": \"XXX\",\n  \"targetGroupId\": \"XXX\"\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser",
  "order": 120,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/api-references",
  "order": 199,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-shareddevice",
  "order": 136,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-shareddevice/api-sharedevice-groupinquiry",
  "order": 137,
  "indexes": [
    {
  "title": "전용 디바이스 그룹 조회",
  "hash": "",
  "sentences": [
    "전용 디바이스 그룹 조회",
    "퍼블리셔가 기 등록, 보유한 전용 디바이스 그룹을 조회하는 기능입니다."
  ]
},
    {
  "title": "전용 디바이스 그룹 조회 > 1. URL",
  "hash": "#1-url",
  "sentences": [
    "1. URL",
    "[GET] https://biz-api.sktnugu.com/api/v1/sharedDevice/group"
  ]
},
    {
  "title": "전용 디바이스 그룹 조회 > 2. Request",
  "hash": "#2-request",
  "sentences": [
    "2. Request",
    "Publisher-Token | Header | Y | 퍼블리셔 API Token"
  ]
},
    {
  "title": "전용 디바이스 그룹 조회 > 3. Response",
  "hash": "#3-response",
  "sentences": [
    "3. Response"
  ]
},
    {
  "title": "전용 디바이스 그룹 조회 > 3.1 Http Status",
  "hash": "#31-http-status",
  "sentences": [
    "3.1 Http Status",
    "200 | 정상 응답",
    "403 | 퍼블리셔 API Token이 유효하지 않을 경우의 응답"
  ]
},
    {
  "title": "전용 디바이스 그룹 조회 > 3.2 Body",
  "hash": "#32-body",
  "sentences": [
    "3.2 Body",
    "{\n  \"groups\": [\n    {\n      \"name\": \"XXX\",\n      \"token\": \"XXX\",\n      \"devices\": [\n        {\n          \"uniqueName\": \"XXX\",\n          \"token\": \"XXX\",\n          \"alias\": \"XXX\"\n        }\n      ]\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/asr",
  "order": 156,
  "indexes": [
    {
  "title": "ASR",
  "hash": "",
  "sentences": [
    "ASR",
    "음성인식 결과를 Play 로 전달하기 위한 규격"
  ]
},
    {
  "title": "ASR > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.7 입니다.",
    "1.0 | 2019.11.24 | 규격 추가",
    "1.1 | 2020.04.29 | Recognize directive 에 wakeup, timeout 필드 추가Recognize directive, ExpechSpeech event 에 asrContext 필드 추가",
    "1.2 | 2020.06.05 | Recognize directive, ExpectSpeech event 의 asrContext 에 playServiceId 필드 추가",
    "1.3 | 2020.06.09 | Recognize directive, ExpectSpeech event 의 sessionId 필드 삭제",
    "1.4 | 2020.11.18 | ExpectSpeech directive 에 epd 필드 추가",
    "1.5 | 2021.03.03 | Context 에 state, initiator 필드 추가",
    "1.6 | 2021.05.31 | ASR.ExpectSpeech directive 에 listenTimeoutFailBeep 필드 추가",
    "1.7 | 2022.07.04 | ASR.ExpectSpeech directive의 asrContext에 isAddListen 추가"
  ]
},
    {
  "title": "ASR > State Diagram",
  "hash": "#state-diagram",
  "sentences": [
    "State Diagram"
  ]
},
    {
  "title": "ASR > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "ASR > ASRAgent 사용",
  "hash": "#asragent-사용",
  "sentences": [
    "ASRAgent 사용",
    "ASR interface 규격에 따른 디바이스의 동작 제어는 ASRAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 ASRAgent instance 에 접근할 수 있습니다.",
    "val asrAgent = nuguAndroidClient.asrAgent",
    "Microphone 으로 부터 음성 데이터를 가져오기 위한 AudioSourceManager 를 생성합니다.",
    "val audioSourceManager = AudioSourceManager(AudioRecordSourceFactory())",
    "음성인식에 필요한 학습 모델을 설정합니다.",
    "NuguAndroidClient.Builder(\n    context,\n    NuguOAuth.create(context),\n    audioSourceManager\n).endPointDetector(\n    EndPointDetector(\n        context.getDir(\n            \"skt_nugu_assets\",\n            Context.MODE_PRIVATE\n        ).absolutePath + File.separator + \"skt_epd_model.raw\"\n    )\n)",
    "AudioSourceManager, ASRAgent 를 연결해주기 위한 SpeechRecognizerAggregator 를 생성합니다.",
    "speechRecognizerAggregator = SpeechRecognizerAggregator(\n    null,\n    SpeechProcessorDelegate(asrAgent),\n    audioSourceManager,\n    Handler(Looper.getMainLooper())\n)",
    "NuguClient instance 를 통해 ASRAgent instance 에 접근할 수 있습니다.",
    "let asrAgent = nuguClient.asrAgent",
    "Microphone 으로 부터 음성 데이터를 가져오기 위한 MicInputProvider 를 생성합니다.",
    "let micInputProvider = MicInputProvider()",
    "Microphone 으로 부터 가져온 음성 데이터가 NuguClient 로 전달될 수 있도록 합니다.",
    "micInputProvider.delegate = nuguClient",
    "음성인식에 필요한 학습 모델을 설정합니다.",
    "let epdFile = Bundle.main.url(forResource: \"skt_epd_model\", withExtension: \"raw\")!\nnuguClient.asrAgent.options = ASROptions(endPointing: .client(epdFile: epdFile))",
    "CapabilityFactory::makeCapability 함수로 ASRAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto asr_handler(std::shared_ptr<IASRHandler>(\n        CapabilityFactory::makeCapability<ASRAgent, IASRHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(asr_handler.get())\n    ->construct();",
    "음성인식에 필요한 학습 모델을 설정합니다.",
    "asr_handler->setAttribute(ASRAttribute { \"/var/lib/nugu/model\", \"CLIENT\", \"PARTIAL\" });"
  ]
},
    {
  "title": "ASR > 음성 인식 요청",
  "hash": "#음성-인식-요청",
  "sentences": [
    "음성 인식 요청",
    "아리아",
    "발화 또는 NUGU Button 선택 시",
    "Recognize",
    "event 를 전달하여 음성인식을 시작할 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "speechRecognizerAggregator.startListening(initiator = TAP)",
    "try micInputProvider.start()\nasrAgent.startRecognition(initiator: .user)",
    "asr_handler->startRecognition()"
  ]
},
    {
  "title": "ASR > 음성인식 진행 상태 모니터링",
  "hash": "#음성인식-진행-상태-모니터링",
  "sentences": [
    "음성인식 진행 상태 모니터링",
    "음성인식에 대한 진행 상태를 모니터링 할 수 있습니다.",
    "음성인식에 대한 STT(SpeechToText) 결과가",
    "NotifyResult",
    "directive 로 전달됩니다.",
    "Android",
    "iOS",
    "Linux",
    "SpeechRecognizerAggregatorInterface.OnStateChangeListener 를 추가합니다.",
    "val listener = object: SpeechRecognizerAggregatorInterface.OnStateChangeListener {\n    override fun onStateChanged(state: State) {\n        ...\n    }\n}\nspeechRecognizerAggregator.addListener(listener)",
    "ASRAgentInterface.OnResultListener 를 추가합니다.",
    "val resultListener = object: ASRAgentInterface.OnResultListener {\n    fun onPartialResult(result: String, dialogRequestId: String) {\n        // STT 중간 결과\n        ...\n    }\n\n    fun onCompleteResult(result: String, dialogRequestId: String) {\n        // STT 최종 결과\n        ...\n    }\n\n    ...\n}\nasrAgent.addOnResultListener(resultListener)",
    "ASRAgentDelegate 를 추가합니다.",
    "class MyASRAgentDelegate: ASRAgentDelegate {\n    func asrAgentDidChange(state: ASRState) {\n        ...\n    }\n\n    func asrAgentDidReceive(result: ASRResult, dialogRequestId: String) {\n        // NotifyResult 결과 확인\n        ...\n    }\n}\nasrAgent.add(delegate: MyASRAgentDelegate())",
    "음성인식 진행 상태를 모니터링 하려면 IASRListener 를 추가합니다.",
    "class MyASRListener : public IASRListener {\npublic:\n    ...\n\n    void onState(ASRState state, const std::string &dialog_id) override\n    {\n        ...\n    }\n\n    void onPartial(const std::string &text, const std::string &dialog_id) override\n    {\n        // STT 중간 결과\n        ...\n    }\n\n    void onComplete(const std::string &text, const std::string &dialog_id) override\n    {\n        // STT 최종 결과\n        ...\n    }\n\n    ...\n};\nauto asr_listener(std::make_shared<MyASRListener>());\nCapabilityFactory::makeCapability<ASRAgent, IASRHandler>(asr_listener.get());"
  ]
},
    {
  "title": "ASR > 음성 인식 중단",
  "hash": "#음성-인식-중단",
  "sentences": [
    "음성 인식 중단",
    "사용자가 음성 인식 중단 요청을",
    "StopRecognize",
    "event 로 전달할 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "speechRecognizerAggregator.stopListening()",
    "asrAgent.stopRecognition()",
    "asr_handler->stopRecognition()"
  ]
},
    {
  "title": "ASR > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"ASR\": {\n    \"version\": \"1.6\",\n    \"engine\": \"{{STRING}}\",\n    \"state\": \"{{STRING}}\",\n    \"initiator\": \"{{STRING}}\"\n  }\n}",
    "engine | string | N | Device 에서 사용하는 음성인식 engine 을 명시 NUGU 음성인식 engine 을 사용하는 경우 “skt”(값을 채우지 않으면 default “skt”)",
    "state | string | Y | IDLEEXPECTING_SPEECHLISTENINGRECOGNIZINGBUSYState Diagram 참고",
    "initiator | string | N | 마이크 오픈이 어떻게 트리거되었는지- WAKE_UP_WORD : 사용자 발화로 Wakeup- PRESS_AND_HOLD : PTT 방식으로 Wakeup- TAP : NUGU 버튼 등에 의해서 Wakeup- EXPECT_SPEECH : ASR.ExpectSpeech- EARSET : 이어셋 VoiceCommand 등을 통해 Wakeup"
  ]
},
    {
  "title": "ASR > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
},
    {
  "title": "ASR > ExpectSpeech",
  "hash": "#expectspeech",
  "sentences": [
    "ExpectSpeech",
    "{\n  \"header\": {\n    \"namespace\": \"ASR\",\n    \"name\": \"ExpectSpeech\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.6\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"domainTypes\": [\"{{STRING}}\"],\n    \"asrContext\": {\n      \"task\": \"{{STRING}}\",\n      \"sceneId\": \"{{STRING}}\",\n      \"sceneText\": [\n        \"{{STRING}}\"\n      ],\n      \"playServiceId\" : \"playServiceId\",\n      \"isAddListen\" : {{BOOLEAN}}\n    },\n    \"epd\": {\n      \"timeoutMilliseconds\": {{LONG}},\n      \"silenceIntervalInMilliseconds\": {{LONG}},\n      \"maxSpeechDurationMilliseconds\": {{LONG}}\n    },\n    \"listenTimeoutFailBeep\": {{BOOLEAN}}\n  }\n}",
    "playServiceId | string | N | Y : 회신받아야 하는 경우N : 마이크만 열고 싶은경우default : N",
    "property | string | N | NORMAL : 일반 발화를 입력으로 받음DICTATION : dictation 서버로 라우팅하여 처리 필드가 없는 경우default 값은 NORMAL",
    "domainTypes | array of string | N | ExpectSpeech 의한 발화시에 NLU에서 사용할 domainType 셋팅 정보",
    "asrContext | object | N | -",
    "asrContext.task | string | N | -",
    "asrContext.sceneId | string | N | -",
    "asrContext.sceneText | array of string | N | -",
    "asrContext.playServiceId | string | N | -",
    "asrContext.isAddListen | boolean | N | add-listen으로 인입된 발화 여부",
    "epd | object | N | End Point Detection 관련 정보 없으면 device의 default 값을 사용하위의 3개 파라미터도 optional이기 때문에 존재하는 파라미터만 업데이트하고, 없는 파라미터는 device의 default 값을 사용",
    "epd.timeoutMilliseconds | long | N | Wake up 후 종료까지 대기 시간 (단위: msec)이 값은 위의 timeoutInMilliseconds와는 다른 epd 전용값",
    "epd.silenceIntervalInMilliseconds | long | N | end point detection 전에 기다리는 묵음 구간 (단위: msec)",
    "epd.maxSpeechDurationMilliseconds | long | N | 사용자 발화 최대 녹음 시간 (단위: msec)",
    "listenTimeoutFailBeep | boolean | N | Listening timeout 발생시 beep 재생 여부default 값은 true"
  ]
},
    {
  "title": "ASR > NotifyResult",
  "hash": "#notifyresult",
  "sentences": [
    "NotifyResult",
    "음성 인식 결과 전달",
    "{\n  \"header\": {\n    \"namespace\": \"ASR\",\n    \"name\": \"NotifyResult\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.6\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"result\": \"{{STRING}}\",\n    \"state\": \"{{STRING}}\"\n  }\n}",
    "token | string | N | Recognize Event에서 사용한 token 값 (어떤 발화에 대한 분석 결과인지 식별하기 위한 용도)",
    "result | string | N | 인식 결과를 전송",
    "state | string | Y | PARTIAL : 사용자 발화의 일부분COMPLETE : 사용자 발화의 전체 문장NONE : 음성 인식 결과 없음ERROR : Error 발생SOS : SOS(Start of Speech)EOS : EOS(End of Speech)FA : Wakeup False Acceptance"
  ]
},
    {
  "title": "ASR > CancelRecognize",
  "hash": "#cancelrecognize",
  "sentences": [
    "CancelRecognize",
    "{\n  \"header\": {\n    \"namespace\": \"ASR\",\n    \"name\": \"CancelRecognize\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.6\"\n  },\n  \"payload\": {\n    \"cause\": \"{{STRING}}\"\n  }\n}",
    "cause | string | Y | WAKEUP_POWER : 다른 wakeup보다 power가 적어서 취소됨"
  ]
},
    {
  "title": "ASR > Events",
  "hash": "#events",
  "sentences": [
    "Events"
  ]
},
    {
  "title": "ASR > Recognize",
  "hash": "#recognize",
  "sentences": [
    "Recognize",
    "{\n  \"header\": {\n    \"namespace\": \"ASR\",\n    \"name\": \"Recognize\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.6\"\n  },\n  \"payload\": {\n    \"codec\": \"{{STRING}}\",\n    \"playServiceId\": \"{{STRING}}\",\n    \"domainTypes\": [\"{{STRING}}\"],\n    \"language\": \"{{STRING}}\",\n    \"endpointing\": \"{{STRING}}\",\n    \"encoding\": \"{{STRING}}\",\n    \"wakeup\": {\n      \"word\": \"{{STRING}}\",\n      \"boundary\": {\n        \"start\": {{LONG}},\n        \"end\": {{LONG}},\n        \"detection\": {{LONG}}\n      },\n      \"power\": {\n        \"noise\": {{LONG}},\n        \"speech\": {{LONG}}\n      }\n    },\n    \"asrContext\": {\n      \"task\": \"{{STRING}}\",\n      \"sceneId\": \"{{STRING}}\",\n      \"sceneText\": [\n        \"{{STRING}}\"\n      ],\n      \"playServiceId\" : \"playServiceId\"\n    },\n    \"timeout\": {\n      \"listen\": {{LONG}},\n      \"maxSpeech\": {{LONG}},\n      \"response\": {{LONG}}\n    }\n  }\n}",
    "codec | string | Y | SPEEX",
    "playServiceId | string | N | ExpectSpeech에 의한 발화인 경우에만 ExpectSpeech에서 받은 playServiceId를 적용",
    "property | string | N | ExpectSpeech에 의한 발화인 경우에만 ExpectSpeech에서 받은 property를 적용",
    "domainTypes | array of string | N | ExpectSpeech에 의한 발화인 경우에만 ExpectSpeech에서 받은 domainTypes를 적용",
    "language | string | N | KOR, ENG, JPN, CHN, …default 값은 KOR",
    "endpointing | string | Y | CLIENT : 클라이언트 EPD(EndPointDetector) 사용SERVER : 서버 EPD 사용",
    "encoding | string | N | PARTIAL : 사용자 발화의 일부분COMPLETE : 사용자 발화의 전체 문장 (default)",
    "wakeup | object | N | 서버 EPD 사용시 필수 값.wakeup을 포함해서 서버에 전달하는 경우 포함wakeup 정보를 전달하는 경우 포함 (전달하는 pcm에 wakeup이 포함되지 않더라도 필요한 경우 전달)",
    "wakeup.word | string | Y | 전송하는 stream에 포함된 wakeup word( ex “아리아”)",
    "wakeup.boundary | object | N | 전송하는 stream에서 wakeup word에 대한 boundary 정보",
    "wakeup.boundary.start | long | Y | wakeup module 에서 얻은 milliseconds 를 sample count 로 변환해서 전송해야 함.sample count for start time",
    "wakeup.boundary.end | long | Y | wakeup module 에서 얻은 milliseconds 를 sample count 로 변환해서 전송해야 함.sample count for end time",
    "wakeup.boundary.detection | long | Y | wakeup module 에서 얻은 milliseconds 를 sample count 로 변환해서 전송해야 함.sample count for detection time",
    "wakeup.boundary.metric | string | N | sample(default) / byte / frame / time현재 sample 만 지원되며, 추후 byte / frame / time 속성 지원 예정",
    "wakeup.power | object | N | 전송하는 stream에 포함된 wakeup pcm의 power값",
    "wakeup.power.noise | float | Y | wakeup pcm의 power중 noise를 의미하는 값 (주로 min값)",
    "wakeup.power.speech | float | Y | wakeup pcm의 power중 speech를 의미하는 값 (주로 max값)",
    "asrContext | object | N | ExpectSpeech에 의한 발화인 경우에만 ExpectSpeech에서 받은 asrContext를 적용",
    "asrContext.task | string | N | -",
    "asrContext.sceneId | string | N | -",
    "asrContext.sceneText | array of string | N | -",
    "asrContext.playServiceId | string | N | -",
    "timeout | object | N | Server EPD 사용시 필수 값.",
    "timeout.listen | long | Y | SOS 를 기다리는 시간 (milliseconds)",
    "timeout.maxSpeech | long | Y | SOS이후 EOS를 기다리는 시간 (milliseconds)",
    "timeout.response | long | Y | EOS 이후 응답을 기다리는 시간 (milliseconds)"
  ]
},
    {
  "title": "ASR > ResponseTimeout",
  "hash": "#responsetimeout",
  "sentences": [
    "ResponseTimeout",
    "Recognize Event가 전달되고 사용자 발화도 모두 전달이 완료된 이후 응답을 받지 못한 경우",
    "{\n  \"header\": {\n    \"namespace\": \"ASR\",\n    \"name\": \"ResponseTimeout\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.6\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "playServiceId | string | N | ExpectSpeech에 의한 발화인 경우에만 ExpectSpeech에서 받은 playServiceId를 적용"
  ]
},
    {
  "title": "ASR > ListenTimeout",
  "hash": "#listentimeout",
  "sentences": [
    "ListenTimeout",
    "Recognize event가 전달되고 사용자 발화가 발화하지 않은 경우",
    "{\n  \"header\": {\n    \"namespace\": \"ASR\",\n    \"name\": \"ListenTimeout\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.6\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "playServiceId | string | N | ExpectSpeech에 의한 발화인 경우에만 ExpectSpeech에서 받은 playServiceId를 적용"
  ]
},
    {
  "title": "ASR > StopRecognize",
  "hash": "#stoprecognize",
  "sentences": [
    "StopRecognize",
    "Recognize event 취소",
    "{\n  \"header\": {\n    \"namespace\": \"ASR\",\n    \"name\": \"StopRecognize\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.6\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "playServiceId | string | N | ExpectSpeech에 의한 발화인 경우에만 ExpectSpeech에서 받은 playServiceId를 적용"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/create-a-play-with-audioplayer/audioplayer-define-action",
  "order": 42,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/create-a-play-with-audioplayer/audioplayer-define-built-in-intent",
  "order": 43,
  "indexes": [
    {
  "title": "Built-in Intent를 위한 Action 정의하기",
  "hash": "",
  "sentences": [
    "Built-in Intent를 위한 Action 정의하기",
    "스피커의 상태(state)에 따라 Action을 정의 방법을 “아리아, 이어서 재생”과 같이 “resume” Built-in Intent를 사용하는 경우를 예로 들어 설명합니다.",
    "“resume” Built-in Intent (NUGU.INTENT.resume)가 들어오는 경우는 스피커의 상태에 따라 동작을 정의해 보면 다음과 같습니다.",
    "PAUSED | AudioPlayer.Play Directive를 전송하여 일시정지했던 지점부터 이어서 재생 시작",
    "PLAYING | “이미 재생 중입니다” 응답 Prompt",
    "IDLE, STOPPED, FINISHED | AudioPlayer.Play Directive를 전송하여 처음부터 재생 시작",
    "위의 표과 같이 상태에 따른 동작이 정의되면 아래의 순서로 Action을 정의할 수 있습니다. Built-in Intent는",
    "NUGU.INTENT.XXXX",
    "형식으로 정의되어 있습니다."
  ]
},
    {
  "title": "Built-in Intent를 위한 Action 정의하기 > “resume” Built-in Intent를 처리하는 Action 정의",
  "hash": "#resume-built-in-intent를-처리하는-action-정의",
  "sentences": [
    "“resume” Built-in Intent를 처리하는 Action 정의",
    "Action을 정의할 Play가 General > 기본 정보 페이지의 Capability Interface에서 AudioPlayer Interface 제어 항목이 ON으로 설정되어 있는지 확인합니다.",
    "Play에 ‘resume’이라는 Action을 생성합니다.",
    "Trigger의 Intent 항목에서 NUGU.INTENT.resume을 선택합니다."
  ]
},
    {
  "title": "Built-in Intent를 위한 Action 정의하기 > 스피커의 상태를 처리하는 Branch Action 생성",
  "hash": "#스피커의-상태를-처리하는-branch-action-생성",
  "sentences": [
    "스피커의 상태를 처리하는 Branch Action 생성",
    "스피커의 상태를 처리할 다음 세 가지 Branch Action을 추가한 후",
    "Play 저장",
    "버튼을 클릭하여 Action을 저장합니다.",
    "resumeWhilePause - 스피커가 PAUSED 상태인 경우",
    "resumeWhilePlaying - 스피커가 PLAYING 상태인 경우",
    "resumeWhileStopped - 나머지 모든 경우(Default)",
    "Branch Action의 종류는 위에서 스피커의 상태에 따라 동작을 정의한 표와 동일합니다."
  ]
},
    {
  "title": "Built-in Intent를 위한 Action 정의하기 > 각 Branch Action에서 Trigger 조건 정의",
  "hash": "#각-branch-action에서-trigger-조건-정의",
  "sentences": [
    "각 Branch Action에서 Trigger 조건 정의",
    "Branch Action의 버튼을 클릭하여 각 Branch Action의 상세 설정 페이지로 이동합니다.",
    "이동한 Branch Action의 ‘Trigger 선택’ 영역에서 Trigger Composite Condition 항목의 + > Condition 버튼을 클릭하면 하단에 셀렉트 박스(Select Box)가 표시됩니다.",
    "첫 번째 셀렉트 박스에서 [NPK]context_supportedInterfaces_AudioPlayer_playerActivity를 선택하고, 두 번째 셀렉트 박스에서 다음과 같을 경우를 선택한 후, 우측에 생긴 박스에서 String을 선택 상태로 두고 각 Branch Action별로 PAUSED, PLAYING 이라고 입력합니다.\n    \n      Default로 선택된 Branch Action은 Trigger 정의가 필요없습니다.\n      AudioPlayer 상태는 context.supportedInterfaces.AudioPlayer.playerActivity”에 저장되어 있습니다.\n      context.supportedInterfaces.AudioPlayer.playerActivity는 Backend proxy API의 Request Body에 정의되어 있습니다. 자세한 내용은 Backend proxy API Reference를 참고하세요.",
    "Default로 선택된 Branch Action은 Trigger 정의가 필요없습니다.",
    "AudioPlayer 상태는 context.supportedInterfaces.AudioPlayer.playerActivity”에 저장되어 있습니다.",
    "context.supportedInterfaces.AudioPlayer.playerActivity는 Backend proxy API의 Request Body에 정의되어 있습니다. 자세한 내용은 Backend proxy API Reference를 참고하세요.",
    "Trigger 다음과 같이 정의하면, ‘resumeWhilePause’ Branch Action은 PAUSED 상태에서 동작합니다.",
    "그리고, ‘resumeWhilePlaying’ Branch Action은 같은 방식으로 PLAYING 이라고 입력합니다.",
    "나머지 모든 경우는 각 상태에 대한 조건을 모두 정의할 필요 없이 Branch Action을 Default로 지정합니다."
  ]
},
    {
  "title": "Built-in Intent를 위한 Action 정의하기 > 각 Branch Action의 응답 정의",
  "hash": "#각-branch-action의-응답-정의",
  "sentences": [
    "각 Branch Action의 응답 정의",
    "응답에 필요한 정보 가져오기에서 Backend proxy 사용 여부 항목이 ON으로 설정되어 있는지 확인합니다.",
    "Output 영역에서 각 Branch Action별로 응답을 정의합니다. resumeWhilePause Branch Action은 Response 유형을 Directive로 선택합니다.\n\n    \n\n    \n      resumeWhilePause Branch Action의 응답은 이전의 일시 정지(PAUSED) 시점의 시간을 AudioPlayer.Play Directive를 통해 전송하면 됩니다.\n      AudioPlayer.Play Directive를 Backend proxy에서 만들어서 전송하면 해당 Directive는 스피커까지 전송되어 ‘이어서 재생’을 시작합니다.\n      AudioPlayer.Play Directive의 offsetInMilliseconds 값은 일시 정지된 시간을 넣어주어야 이어서 재생이 가능합니다.",
    "resumeWhilePause Branch Action의 응답은 이전의 일시 정지(PAUSED) 시점의 시간을 AudioPlayer.Play Directive를 통해 전송하면 됩니다.",
    "AudioPlayer.Play Directive를 Backend proxy에서 만들어서 전송하면 해당 Directive는 스피커까지 전송되어 ‘이어서 재생’을 시작합니다.",
    "AudioPlayer.Play Directive의 offsetInMilliseconds 값은 일시 정지된 시간을 넣어주어야 이어서 재생이 가능합니다.",
    "resumeWhilePlaying Branch Action은 Prompt에 “이미 재생 중입니다.” 등의 응답 메시지를 입력합니다.\n\n    \n\n    \n      오디오가 이미 재생 중이기 때문에 Directive를 전송할 필요가 없으므로 응답 Prompt만을 보내고 계속 이어서 재생합니다.",
    "오디오가 이미 재생 중이기 때문에 Directive를 전송할 필요가 없으므로 응답 Prompt만을 보내고 계속 이어서 재생합니다.",
    "resumeWhileStopped Branch Action은 Response 유형을 Prompt + Directive로 선택하고, Prompt에 ‘음악을 들려드릴게요.’ 등의 응답 메시지를 입력합니다.\n\n    \n    \n      오디오를 이어서 재생하는 것은 아니지만 해당 Action을 처음부터 재생 시작하도록 정의했으므로, 응답 Prompt로 음악 재생이 시작됨을 알려줌과 동시에 AudioPlayer.Play Directive를 전송해야 합니다.\n      이 경우 Backend proxy는 offsetInMilliseconds 값을 0으로 하여 처음부터 재생하도록 AudioPlayer.Play Directive를 전송해야 합니다.",
    "오디오를 이어서 재생하는 것은 아니지만 해당 Action을 처음부터 재생 시작하도록 정의했으므로, 응답 Prompt로 음악 재생이 시작됨을 알려줌과 동시에 AudioPlayer.Play Directive를 전송해야 합니다.",
    "이 경우 Backend proxy는 offsetInMilliseconds 값을 0으로 하여 처음부터 재생하도록 AudioPlayer.Play Directive를 전송해야 합니다.",
    "각 Branch Action별로 설정을 완료할 때마다 Play 저장 버튼을 클릭하여 Play에 적용합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/create-a-play-with-audioplayer/audioplayer-define-custom-intent",
  "order": 41,
  "indexes": [
    {
  "title": "Custom Intent 정의하기",
  "hash": "",
  "sentences": [
    "Custom Intent 정의하기",
    "AudioPlayer Interface에서 제공하는 Built-in Intent 외에 추가로 사용할 Custom Intent를 정의합니다. AudioPlayer를 개발할 때는 Built-in Intent의 종류와 용도를 정확히 파악하고, 시나리오에 따라 추가로 필요한 Custom Intent를 정의해야 합니다.",
    "Built-in Intent에 대한 자세한 내용은 Built-in Intent를 참고하세요."
  ]
},
    {
  "title": "Custom Intent 정의하기 > ‘play’ Built-in Intent만으로 충분한 경우",
  "hash": "#play-built-in-intent만으로-충분한-경우",
  "sentences": [
    "‘play’ Built-in Intent만으로 충분한 경우",
    "Built-in Intent 중 NUGU.INTENT.play는 단독 발화인 경우에만 동작합니다. 즉, 특별한 Entity 없이 “틀어줘”와 같이 재생을 명령하는 경우에만 분석이 됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/use-backend-proxy/capability-interfaces/audioplayer-display-interface",
  "order": 48,
  "indexes": [
    {
  "title": "AudioPlayer를 위한 Display Interface",
  "hash": "",
  "sentences": [
    "AudioPlayer를 위한 Display Interface",
    "이 페이지에서는 AudioPlayer Interface를 사용할 때, 화면이 있는 디바이스에서 AudioPlayer 제어 화면을 제공할 때 사용하는 Display Interface를 안내합니다.",
    "AudioPlayer Interface를 위한 Display Interface를 사용하기 위해서는",
    "General",
    ">",
    "기본 정보",
    ">",
    "Capability Interface",
    "에서",
    "AudioPlayer",
    "만 체크하면 됩니다."
  ]
},
    {
  "title": "AudioPlayer를 위한 Display Interface > 지원 디바이스",
  "hash": "#지원-디바이스",
  "sentences": [
    "지원 디바이스",
    "현재 AudioPlayer용 Display Interface를 지원하는 디바이스는 다음과 같으며, 지원 디바이스는 확장될 예정입니다.",
    "T map",
    "Btv",
    "NU300"
  ]
},
    {
  "title": "AudioPlayer를 위한 Display Interface > AudioPlayer Interface를 위한 확장 Template",
  "hash": "#audioplayer-interface를-위한-확장-template-",
  "sentences": [
    "AudioPlayer Interface를 위한 확장 Template",
    "AudioPlayer를 지원하는 Play가 화면을 가진 디바이스에서 사용될 때 보여지는 Template으로 Play를 개발할 때 다음의 두 작업을 꼭 해야 합니다.",
    "Play Directive의 ‘metadata’ 필드에 Template 정보 전달",
    "Display Interface용 Event를 처리하는 Action 생성"
  ]
},
    {
  "title": "AudioPlayer를 위한 Display Interface > 1. Play Directive의 ‘metadata’ 필드에 Template 정보 전달",
  "hash": "#1-play-directive의-metadata-필드에-template-정보-전달",
  "sentences": [
    "1. Play Directive의 ‘metadata’ 필드에 Template 정보 전달",
    "AudioPlayer를 위한 확장 Template의 타입은 두 가지이며, 타입에 따라 Play Directive의 metadata 필드에 담을 정보는 다음과 같습니다.",
    "AudioPlayer.Template1",
    "AudioPlayer.Template2"
  ]
},
    {
  "title": "AudioPlayer를 위한 Display Interface > AudioPlayer.Template1",
  "hash": "#audioplayertemplate1",
  "sentences": [
    "AudioPlayer.Template1",
    "{\n  \"metadata\": {\n    \"template\": {\n      \"type\": \"AudioPlayer.Template1\",\n      \"title\": {\n        \"iconUrl\": \"https://nugu.sk.com/music_icon.png\",\n        \"text\": \"FLO Music\"\n      },\n      \"content\": {\n        \"title\": \"NONO\",\n        \"subtitle1\": \"Loopy\",\n        \"subtitle2\": \"Prod. Code Kunst\",\n        \"imageUrl\": \"https://nugu.sk.com/flo.jpg\",\n        \"durationSec\": \"329\"\n      }\n    }\n  }\n}",
    "type | string | Y | AudioPlayer template type1) AudioPlayer.Template12) AudioPlayer.Template2",
    "title | object | Y | title object",
    "title.iconUrl | string | N | icon image url",
    "title.text | string | Y | title text",
    "content | object | Y | content object",
    "content.title | string | Y | content 영역의 title",
    "content.subtitle1 | string | Y | subtitle1",
    "content.subtitle2 | string | Y | subtitle2",
    "content.imageUrl | string | Y | image url",
    "content.durationSec | string | N | 오디오 콘텐츠의 길이로 단위는 초이며, 0보다 큰 값을 가질 경우 Progress Bar가 활성화됩니다."
  ]
},
    {
  "title": "AudioPlayer를 위한 Display Interface > AudioPlayer.Template2",
  "hash": "#audioplayertemplate2",
  "sentences": [
    "AudioPlayer.Template2",
    "{\n  \"metadata\": {\n    \"template\": {\n      \"type\": \"AudioPlayer.Template2\",\n      \"title\": {\n        \"iconUrl\": \"https://nugu.sk.com/news_icon.png\",\n        \"text\": \"11월 8일 주요뉴스\"\n      },\n      \"content\": {\n        \"title\": \"문대통령 \\\"BTS 꿈/열정에 세계 젊은 이들 용기... 빌보드 1위 축하\\\"\",\n        \"subtitle\": \"T map을 위해 추가됨\",\n        \"imageUrl\": \"https://nugu.sk.com/news_bg.jpg\",\n        \"durationSec\": \"123\"\n      }\n    }\n  }\n}",
    "type | string | Y | AudioPlayer template type1) AudioPlayer.Template12) AudioPlayer.Template2",
    "title | object | Y | title object",
    "title.iconUrl | string | N | icon image url",
    "title.text | string | Y | title text",
    "content | object | Y | content object",
    "content.title | string | Y | content 영역의 title",
    "content.subtitle | string | Y | T map용 Template은 기본으로 title, subtitle만 제공",
    "content.imageUrl | string | Y | image url",
    "content.durationSec | string | N | 오디오 콘텐츠의 길이로 단위는 초이며, 0보다 큰 값을 가질 경우 Progress Bar가 활성화됩니다."
  ]
},
    {
  "title": "AudioPlayer를 위한 Display Interface > Template Type을 지정하지 않은 경우 (Default Template)",
  "hash": "#template-type을-지정하지-않은-경우-default-template",
  "sentences": [
    "Template Type을 지정하지 않은 경우 (Default Template)",
    "‘metadata’ 필드에 Template 타입을 지정하지 않은 경우, Default Template으로 동작하게 되며, Play가 화면을 가진 디바이스에서 오디오 재생 시 Play 이름만 표시됩니다. AudioPlayer, Display Interface를 함께 사용하는 경우, Template1이나 Template2를 사용하기를 권장합니다.",
    "T map은 Default, AudioPlayer.Template1, AudioPlayer.Template2과 같은 type과는 상관없이 아래 그림과 같이 제공됩니다."
  ]
},
    {
  "title": "AudioPlayer를 위한 Display Interface > 2. Display Interface용 Event를 처리하는 Action 생성",
  "hash": "#2-display-interface용-event를-처리하는-action-생성",
  "sentences": [
    "2. Display Interface용 Event를 처리하는 Action 생성"
  ]
},
    {
  "title": "AudioPlayer를 위한 Display Interface > 버튼 클릭 관련 Event",
  "hash": "#버튼-클릭-관련-event",
  "sentences": [
    "버튼 클릭 관련 Event",
    "AudioPlayer를 위한 Template은 오디오 재생을 제어하는 버튼이 있으며, 이 버튼에 의해 총 다섯 개의 이벤트가 발생할 수 있습니다. AudioPlayer/Display Interface를 함께 사용하기 위해서는, 총 5개의 Event를 처리하는 5개의 Action을 반드시 정의해야 합니다.",
    "5개의 Event가 Trigger인 5개의 Custom Action을 만들어야 합니다.",
    "{\n  \"type\": \"AudioPlayer.NextCommandIssued\",\n  \"token\": \"{{STRING}}\",\n  \"offsetInMilliseconds\": {{LONG}}\n}",
    "NextCommandIssued | next 버튼을 눌렀을 때 발생하는 이벤트 | NextCommandIssued 이벤트가 trigger인 Action을 정의해야 합니다.",
    "PreviousCommandIssued | previous 버튼을 눌렸을 때 발생하는 이벤트 | PreviousCommandIssued 이벤트가 trigger인 Action을 정의해야 합니다.",
    "PlayCommandIssued | play 버튼을 눌렀을 때 발생하는 이벤트 | PlayCommandIssued 이벤트가 trigger인 Root Action 하위에 2개의 Branch Action을 만들어, AudioPlayer_playerActivity가 PAUSED인 Branch와 STOPPED/FINISHED 인 경우를 구분해주어야 합니다.",
    "PauseCommandIssued | pause 버튼을 눌렀을 때 발생하는 이벤트 | PauseCommandIssued 이벤트가 trigger인 Action을 정의해야 합니다.",
    "StopCommandIssued | stop 버튼을 눌렀을 때 발생하는 이벤트 | StopCommandIssued 이벤트가 trigger인 Action을 정의해야 합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/use-backend-proxy/capability-interfaces/audioplayer-interface",
  "order": 47,
  "indexes": [
    {
  "title": "AudioPlayer Interface",
  "hash": "",
  "sentences": [
    "AudioPlayer Interface",
    "Play가 스트리밍 URL을 통한 오디오 파일 재생 기능을 포함한다면 AudioPlayer Interface를 사용하도록 설정을 해야 스피커에서 오디오 파일 재생이 가능합니다. 오디오 파일의 재생은 스트리밍 방식으로만 가능하고, 재생을 시작하려면 Play Directive에 스트리밍 URL을 전달해야 합니다.",
    "AudioPlayer Interface는 오디오 파일의 재생 외에 플레이어의 다양한 상태를 확인할 수 있는 이벤트와 동작을 제어하기 위한 Directive로 구성이 되어 있습니다. 또한 Built-in Intent들을 기본적으로 제공하기 때문에 오디오 파일 제어를 위한 언어 학습 모델을 별도로 만들 필요가 없습니다."
  ]
},
    {
  "title": "AudioPlayer Interface > 지원하는 스트리밍 포맷",
  "hash": "#지원하는-스트리밍-포맷",
  "sentences": [
    "지원하는 스트리밍 포맷",
    "오디오 재생을 위해 NUGU 디바이스에서 지원하는 스트리밍 프로토콜과 오디오 코덱은 다음의 표에서 제공하는 규격을 지원해야 합니다. 다음은 NUGU 디바이스에서 지원하는 스트리밍 포맷입니다.",
    "HLS (Http Live Streaming) | mp3 | >= 44.1KHz | >= 128kbps | -",
    "MP4 over HTTP | AAC | >= 44.1KHz | >= 96kbps | 초기 버퍼링 시간을 줄이기 위해 moov atom을 파일의 앞쪽으로 이동시킨 MP4 파일을 권장합니다.",
    "샘플링 주파수와 비트율은 최소 권장 사항을 의미합니다. 더 낮은 값을 사용해도 재생을 되지만 음질의 저하를 체감할 수 있기 때문에 최소 권장을 준수할 것을 강력히 권장합니다.",
    "AudioPlayer Interface를 지원하는 Play를 만드는 방법은 AudioPlayer를 지원하는 Play 만들기를 참고하세요."
  ]
},
    {
  "title": "AudioPlayer Interface > State Diagram",
  "hash": "#state-diagram",
  "sentences": [
    "State Diagram",
    "AudioPlayer Interface는 사용자의 발화와 스트리밍 상태의 변경에 따라 아래의 그림과 같은 상태를 가집니다.",
    "Play는 스피커의 오디오 플레이어의 상태와 사용자의 발화에 따라 적절한 처리를 할 수 있도록 개발해야 합니다. 여기서는 AudioPlayer Interface에서 제공하는 Built-in Intent, Directive, Event에 대해 설명합니다.",
    "IDLE | 최초 전원이 켜지면 IDLE 상태로 진입합니다.이후 재생이 한번이라도 시작되면 전원이 꺼질 때까지 IDLE 상태가 될 수 없습니다.",
    "PLAYING | AudioPlayer에서 재생 중인 상태입니다.",
    "STOPPED | Stop Directive를 받아 중지된 상태입니다.",
    "PAUSED | PAUSED 상태가 되는 경우는 다음 두 경우입니다.1. Pause Directive를 받아 일시 정지 상태2. 오디오 재생 중에 사용자 발화가 들어오면 자동으로 PAUSED상태가 되고, 해당 발화의 처리가 끝나고 오디오 재생이 이어지는 경우에는 PLAYING 상태로 돌아감",
    "FINISHED | 정상적으로 끝까지 재생을 마치면 FINISHED 상태가 됩니다.만약, 다음 곡이 버퍼되어 있으면 FINISHED 상태가 되었다가 바로 PLAYING상태로 바뀝니다."
  ]
},
    {
  "title": "AudioPlayer Interface > Built-in Intents",
  "hash": "#built-in-intents",
  "sentences": [
    "Built-in Intents",
    "Built-in Intent는 Play Builder에 Intent를 정의하지 않아도 NUGU 플랫폼에서 기본으로 제공하는 Intent입니다. Built-in Intent는 Play 생성 시 추가되며, 모든 Play에서 공통(필수)으로 사용되는 Universal Intent와 Capability Interface(AudioPlayer Interface)를 사용함으로 선택했을 때 추가되는 Control Intent로 구분됩니다.",
    "Built-in Intent에 대한 자세한 내용은 Built-in Intent를 참고하세요."
  ]
},
    {
  "title": "AudioPlayer Interface > 공통(필수) Intent",
  "hash": "#공통필수-intent",
  "sentences": [
    "공통(필수) Intent",
    "Universal Intent | NUGU.INTENT.play | 틀어줘, 들려줘, 재생, 플레이",
    "NUGU.INTENT.stop | 그만, 종료, 멈춰, 스톱, 정지, 중지",
    "NUGU.INTENT.pause | 일시정지, 잠깐 멈춰",
    "NUGU.INTENT.resume | 계속 틀어줘, 이어서 틀어줘, 일시정지 해제, 일시정지 풀어줘"
  ]
},
    {
  "title": "AudioPlayer Interface > Control Intent",
  "hash": "#control-intent",
  "sentences": [
    "Control Intent",
    "Control Intent(AudioPlayer) | NUGU.INTENT.next | 다음, 넘겨, 넥스트, 다음 것",
    "NUGU.INTENT.previous | 이전, 이전 것",
    "NUGU.INTENT.forward | 앞으로",
    "NUGU.INTENT.backward | 뒤로",
    "NUGU.INTENT.random | 셔플, 랜덤, 무작위",
    "NUGU.INTENT.cancel.random | 셔플해제, 랜덤 해제, 무작위 취소",
    "NUGU.INTENT.repeat | 반복해줘, 반복, 무한 반복, 계속 반복, 반복 켜줘, 반복해서 들려줘",
    "NUGU.INTENT.cancel.repeat | 반복 해제, 반복 취소, 반복 종료, 반복 꺼줘, 반복 그만",
    "NUGU.INTENT.rewind | 다시, 다시 틀어줘, 다시 들려줘, 다시 시작, 처음으로, 처음부터",
    "NUGU.INTENT.ask.content.info | 이거 뭐야, 뭔지 알려줘",
    "NUGU.INTENT.another | 다른 것, 이거 말고, 그거 말고, 그거 말고 다른 거, 딴거, 다른거 틀어줘",
    "Play Builder에서 이 Intent 별로 Custom Action을 생성할 수 있는데, 필수로 지정된 4개의 Intent들은 Play Builder에서 Custom Action을 꼭 생성해주어야 합니다.",
    "그 외의 Intent들은 기능은 제공하지 않더라도 Action을 생성하여 적절한 답변을 주기를 권장하며, Action을 생성하지 않은 경우에는 Play 생성 시 설정한 Fallback Action이 실행됩니다.",
    "“BTS 노래 틀어줘”와 같이 Entity와 함께 발화하는 경우는 Built-in intent로 분석되지 않습니다. Entity와 함께 분석되어 처리해야 하는 경우, 직접 Custom Intent를 정의해야 합니다.",
    "Intents 등록에 대한 자세한 내용은 User Utterance Model 정의하기(Intent & Entity)를 참고하세요.",
    "Play Builder에서 Action을 정의하지 않는 경우 Fallback Action에 등록한 문장이 응답으로 나오기 때문에 지원하지 않는 기능이라도 적절한 답변을 보내주는 것을 권장합니다.",
    "예를 들어, 셔플 기능을 지원하지 않는 경우 Action을 생성하고 응답으로 “랜덤 재생은 지원하지 않습니다.”라고 명확히 안내해주는 것이 좋습니다."
  ]
},
    {
  "title": "AudioPlayer Interface > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
},
    {
  "title": "AudioPlayer Interface > Play Directive",
  "hash": "#play-directive",
  "sentences": [
    "Play Directive",
    "{\n  \"type\": \"AudioPlayer.Play\",\n  \"audioItem\": {\n    \"stream\": {\n      \"url\": \"{{STRING}}\",\n      \"offsetInMilliseconds\": {{LONG}},\n      \"progressReport\": {\n        \"progressReportDelayInMilliseconds\": {{LONG}},\n        \"progressReportIntervalInMilliseconds\": {{LONG}}\n      },\n      \"token\": \"{{STRING}}\",\n      \"expectedPreviousToken\": \"{{STRING}}\"\n    },\n    \"metadata\": {}\n    // reserved\n  }\n}",
    "url | string | Y | 오디오 콘텐츠의 URL을 입력합니다.",
    "offsetInMilliseconds | long | Y | 재생을 어느 offset(위치)에서 시작할지 설정합니다.값이 ‘0’이면 처음부터 재생합니다.",
    "progressReportDelayInMilliseconds | long | N | 재생을 시작해서 지정된 시간 뒤에 한 번 progressReportDelayElapsed 이벤트가 발생합니다.(offsetInMilliseconds 값과는 상관없이 콘텐츠 시작 시간을 기준으로 한 절대값을 의미합니다.)",
    "progressReportIntervalInMilliseconds | long | N | 재생을 시작해서 지정된 주기마다 progressReportIntervalElapsed 이벤트가 발생합니다.(offsetInMilliseconds 값과는 상관없이 콘텐츠 시작 시간을 기준으로 한 절대값을 의미합니다.)",
    "token | string | Y | 현재 stream을 나타내는 token입니다.token은 재생할 오디오 콘텐츠 별로 고유해야 합니다.",
    "expectedPreviousToken | string | N | 이전 stream을 나타내는 token입니다.",
    "metadata | object | N | reserved",
    "audioItem.stream.progressReport는 오디오의 시작 시간을 기준으로 절대 위치에 해당하는 시간에 이벤트를 발생시켜야 합니다. 아래의 그림처럼 Play Directive에 의해 시작하는 위치와 무관하게 시작을 기준으로 설정한 시간이 되는 경우 이벤트가 발생됩니다."
  ]
},
    {
  "title": "AudioPlayer Interface > Stop Directive",
  "hash": "#stop-directive",
  "sentences": [
    "Stop Directive",
    "오디오 재생을 멈춥니다.",
    "{\n  \"type\": \"AudioPlayer.Stop\"\n}"
  ]
},
    {
  "title": "AudioPlayer Interface > Pause Directive",
  "hash": "#pause-directive",
  "sentences": [
    "Pause Directive",
    "재생 중인 오디오를 일시 정지합니다.",
    "{\n  \"type\": \"AudioPlayer.Pause\"\n}"
  ]
},
    {
  "title": "AudioPlayer Interface > Events",
  "hash": "#events",
  "sentences": [
    "Events"
  ]
},
    {
  "title": "AudioPlayer Interface > PlaybackStarted",
  "hash": "#playbackstarted",
  "sentences": [
    "PlaybackStarted",
    "스트리밍 URL별로 재생이 시작될 때마다 발생합니다.",
    "{\n  \"type\": \"AudioPlayer.PlaybackStarted\",\n  \"requestId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"offsetInMilliseconds\": {{LONG}}\n}",
    "token | string | Y | 현재 재생 중인 stream의 token입니다.",
    "offsetInMilliseconds | long | Y | PlaybackStarted를 보낼 때 현재 재생 중인 stream의 offset 값입니다."
  ]
},
    {
  "title": "AudioPlayer Interface > PlaybackFinished",
  "hash": "#playbackfinished",
  "sentences": [
    "PlaybackFinished",
    "특정 스트리밍 URL을 끝까지 재생하여 종료되는 경우 발생합니다.",
    "{\n  \"type\": \"AudioPlayer.PlaybackFinished\",\n  \"requestId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"offsetInMilliseconds\": {{LONG}}\n}",
    "Play가 PlaybackFinished 이벤트를 수신하는 경우에는 다음과 같이 처리할 수 있습니다.",
    "Play List를 재생 중이고 다음 곡이 있는 경우 Play Directive를 전송",
    "한 곡만 재생하는 중이거나, Play List의 마지막 곡을 재생 중이면서 전체 반복을 다시 하지 않는 경우 Stop Directive를 전송",
    "Stop Directive는 전송하지 않아도 되지만, 재생 중인 경우는 다음 곡 재생 여부를 명확히 전달하는 것이 좋습니다."
  ]
},
    {
  "title": "AudioPlayer Interface > PlaybackStopped",
  "hash": "#playbackstopped",
  "sentences": [
    "PlaybackStopped",
    "다음의 경우에 PlaybackStopped 이벤트가 발생합니다.",
    "Stop Directive를 수신하는 경우",
    "재생 중에 Play Directive를 수신하여 기존에 재생 중인 곡을 Stop하는 경우 (이후 Play에 전달된 다음 곡을 재생)",
    "{\n  \"type\": \"AudioPlayer.PlaybackStopped\",\n  \"requestId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"offsetInMilliseconds\": {{LONG}}\n}"
  ]
},
    {
  "title": "AudioPlayer Interface > PlaybackFailed",
  "hash": "#playbackfailed",
  "sentences": [
    "PlaybackFailed",
    "오디오 재생 중 오류가 발생하면 해당 오류를 표시합니다.",
    "{\n  \"type\": \"AudioPlayer.PlaybackStarted\",\n  \"requestId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"offsetInMilliseconds\": {{LONG}}\n  \"error\": {\n    \"type\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  },\n  \"currentPlaybackState\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playerActivity\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 재생에 실패한 stream의 token입니다.",
    "offsetInMilliseconds | long | Y | PlaybackFailed를 보낼 때 현재 재생 중인 stream의 offset 값입니다.",
    "error.type | string | Y | 에러 유형을 표시합니다.MEDIA_ERROR_UNKNOWN: 알 수 없는 오류MEDIA_ERROR_INVALID_REQUEST: 서버가 잘못된 요청으로 인식MEDIA_ERROR_SERVICE_UNAVAILABLE: 서비스에 연결할 수 없음MEDIA_ERROR_INTERNAL_SERVER_ERROR: 서버가 요청을 수락했으나 처리할 수 없음MEDIA_ERROR_INTERNAL_DEVICE_ERROR: 디바이스 내부 오류",
    "error.message | string | Y | 발생한 에러에 대해 자세히 설명합니다.",
    "currentPlaybackState.token | string | Y | 현재 재생 중인 stream의 token으로 위에 있는 token과 다를 수 있습니다.",
    "currentPlaybackState.offsetInMilliseconds | long | Y | 에러가 발생했을 때 현재 재생 중인 stream의 offset 값입니다.",
    "currentPlaybackState.playActivity | string | Y | Player의 상태를 나타냅니다.PLAYING, PAUSED, FINISHED, BUFFER_UNDERRUN, IDLE"
  ]
},
    {
  "title": "AudioPlayer Interface > ProgressReportDelayElapsed",
  "hash": "#progressreportdelayelapsed",
  "sentences": [
    "ProgressReportDelayElapsed",
    "Play Directive에서 progressReportDelayInMilliseconds를 보내고, 설정된 시간 위치(offset)에서 재생될 때 Event가 발생합니다. 재생을 시작한 후 특정 위치까지 재생했을 때 과금이나 인증 등의 추가 작업이 필요한 경우에 사용합니다.",
    "{\n  \"type\": \"AudioPlayer.ProgressReportDelayElapsed\",\n  \"requestId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"offsetInMilliseconds\": {{LONG}}\n}"
  ]
},
    {
  "title": "AudioPlayer Interface > ProgressReportIntervalElapsed",
  "hash": "#progressreportintervalelapsed",
  "sentences": [
    "ProgressReportIntervalElapsed",
    "Play 디렉티브에서 progressReportIntervalInMilliseconds를 보냈을 때 설정된 시간 간격마다 Event가 발생합니다. 재생을 시작한 후 특정 위치까지 재생했을 때 과금이나 인증 등의 추가 작업이 필요한 경우에 사용합니다.",
    "{\n  \"type\": \"AudioPlayer.ProgressReportIntervalElapsed\",\n  \"requestId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"offsetInMilliseconds\": {{LONG}}\n}"
  ]
},
    {
  "title": "AudioPlayer Interface > PlaybackPaused",
  "hash": "#playbackpaused",
  "sentences": [
    "PlaybackPaused",
    "재생 중인 오디오를 일시 정지할 때 사용합니다.",
    "{\n  \"type\": \"AudioPlayer.PlaybackPaused\",\n  \"requestId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"offsetInMilliseconds\": {{LONG}}\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/audioplayer",
  "order": 150,
  "indexes": [
    {
  "title": "AudioPlayer",
  "hash": "",
  "sentences": [
    "AudioPlayer",
    "Play 에서 전달하는 음원을 재생하기 위한 규격"
  ]
},
    {
  "title": "AudioPlayer > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.6 입니다.",
    "1.0 | 2019.11.13 | 규격 추가",
    "1.1 | 2020.03.03 | lyric, favorite, repeat, shuffle, template.settings 관련 directive/event 추가AudioPlayer.Template1 에 lyrics, settings, badge 관련 필드 추가AudioPlayer.Play 에 cacheKey 필드 추가AudioPlayer.UpdateMetadata directive 추가AudioPlayer.Template1의 content.imageUrl을 Mandatory로 수정",
    "1.2 | 2020.03.12 | Request{Play/Resume/Next/Previous/Pause/Stop}Command Directive Request{Play/Resume/Next/Previous/Pause/Stop}CommandIssued Event 추가.",
    "1.3 | 2020.06.05 | PlaybackStopped event 에 reason 필드 추가.RequestCommandFailed event 추가.",
    "1.4 | 2020.08.12 | Context 에 playServiceId 추가",
    "1.5 | 2020.12.09 | PlaybackStopped event 의 reason 필드 값에 대한 조건 수정",
    "1.6 | 2021.03.05 | AudioPlayer.Template1 의 lyrics 에 showButton 필드 추가AudioPlayer.Template2 에 lyrics 필드 추가AudioPlayer.Template2 에 subtitle1 필드 추가"
  ]
},
    {
  "title": "AudioPlayer > State Diagram",
  "hash": "#state-diagram",
  "sentences": [
    "State Diagram"
  ]
},
    {
  "title": "AudioPlayer > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "AudioPlayer > AudioPlayerAgent 사용",
  "hash": "#audioplayeragent-사용",
  "sentences": [
    "AudioPlayerAgent 사용",
    "AudioPlayer interface 규격에 따른 디바이스의 동작 제어는 AudioPlayerAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 AudioPlayerAgent instance 에 접근할 수 있습니다.",
    "val audioPlayerAgent = nuguAndroidClient.audioPlayerAgent",
    "NuguClient instance 를 통해 AudioPlayerAgent instance 에 접근할 수 있습니다.",
    "let audioPlayerAgent = nuguClient.audioPlayerAgent",
    "CapabilityFactory::makeCapability 함수로 AudioPlayerAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto audio_player_handler(std::shared_ptr<IAudioPlayerHandler>(\n        CapabilityFactory::makeCapability<AudioPlayerAgent, IAudioPlayerHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(audio_player_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "AudioPlayer > 재생 상태 모니터링",
  "hash": "#재생-상태-모니터링",
  "sentences": [
    "재생 상태 모니터링",
    "Play",
    "directive 로 전달된 음원에 대한 재생 상태를 모니터링 할 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "AudioPlayerAgentInterface.Listener 를 추가합니다.",
    "val listener = object: AudioPlayerAgentInterface.Listener {\n    override fun onStateChanged(activity: State, context: Context) {\n        ...\n    }\n}\naudioPlayerAgent.addListener(listener)",
    "AudioPlayerAgentDelegate 를 추가합니다.",
    "class MyAudioPlayerAgentDelegate: AudioPlayerAgentDelegate {\n    func audioPlayerAgentDidChange(state: AudioPlayerState, dialogRequestId: String) {\n        ...\n    }\n}\n\naudioPlayerAgent.add(delegate: MyAudioPlayerAgentDelegate())",
    "IAudioPlayerListener 를 추가합니다.",
    "class MyAudioPlayerListener : public IAudioPlayerListener {\npublic:\n    ...\n\n    void mediaStateChanged (AudioPlayerState state, const std::string &dialog_id) override\n    {\n        ...\n    }\n\n    ...\n};\nauto audio_player_listener(std::make_shared<MyAudioPlayerListener>());\nCapabilityFactory::makeCapability<AudioPlayerAgent, IAudioPlayerHandler>(audio_player_listener.get());"
  ]
},
    {
  "title": "AudioPlayer > UI 구성 및 제어",
  "hash": "#ui-구성-및-제어",
  "sentences": [
    "UI 구성 및 제어",
    "AudioPlayer 로 음원을 재생할 때 화면을 구성하기 위해 필요한 데이터는",
    "Play",
    "directive 의",
    "audioItem.metadata.template",
    "에 포함되어 전달됩니다.",
    "Stop",
    "directive 또는 SDK 내부 timer 등에 의해 종료될 수 있으며,",
    "UpdateMetadata",
    "directive 에 의해 변경될 수 있습니다.",
    "AudioPlayer.Template1",
    "에 포함된 가사의 화면은",
    "사용자 발화",
    "에 따라",
    "ShowLyrics",
    ",",
    "HideLyrics",
    ",",
    "ControlLyricsPage",
    "directive 로 제어될 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "DisplayAggregatorInterface.Renderer 를 추가합니다.",
    "val renderer = object: DisplayAggregatorInterface.Renderer {\n    override fun render(templateId: String, templateType: String, templateContent: String, dialogRequestId: String, displayType: Type): Boolean {\n        ...\n    }\n\n    ...\n}\nnuguAndroidClient.setDisplayRenderer(renderer)",
    "UI 제어 요청을 처리하려면 LyricsPresenter 를 추가합니다.",
    "val presenter = object: LyricsPresenter {\n    override fun show(): Boolean {\n        ...\n    }\n\n    override fun hide(): Boolean {\n        ...\n    }\n\n    ...\n}\naudioPlayerAgent.setLyricsPresenter(presenter)",
    "AudioPlayerDisplayDelegate 를 추가합니다.",
    "class MyAudioPlayerDisplayDelegate: AudioPlayerDisplayDelegate {\n    func audioPlayerDisplayShouldRender(template: AudioPlayerDisplayTemplate, completion: @escaping (AnyObject?) -> Void) {\n        ...\n    }\n\n    func audioPlayerDisplayShouldShowLyrics(completion: @escaping (Bool) -> Void) {\n        ...\n    }\n\n    func audioPlayerDisplayShouldHideLyrics(completion: @escaping (Bool) -> Void) {\n        ...\n    }\n\n    ...\n}\n\naudioPlayerAgent.displayDelegate = MyAudioPlayerDisplayDelegate()",
    "IAudioPlayerListener 를 추가합니다.",
    "class MyAudioPlayerListener : public IAudioPlayerListener {\npublic:\n    ...\n\n    void renderDisplay(const std::string& id, const std::string& type, const std::string& json_payload, const std::string& dialog_id) override\n    {\n        ...\n    }\n\n    bool showLyrics(const std::string& id) override\n    {\n        ...\n    }\n\n    bool hideLyrics(const std::string& id) override\n    {\n        ...\n    }\n\n    ...\n};\nauto audio_player_listener(std::make_shared<MyAudioPlayerListener>());\nCapabilityFactory::makeCapability<AudioPlayerAgent, IAudioPlayerHandler>(audio_player_listener.get());"
  ]
},
    {
  "title": "AudioPlayer > 제어 명령",
  "hash": "#제어-명령",
  "sentences": [
    "제어 명령",
    "PUI, GUI 등으로 사용자가",
    "다음",
    "/",
    "이전",
    "/",
    "즐겨찾기",
    "/",
    "반복",
    "/",
    "셔플",
    "요청을 event 로 전달할 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "// 다음\naudioPlayerAgent.next()\n// 이전\naudioPlayerAgent.prev()\n// 즐겨찾기\naudioPlayerAgent.requestFavoriteCommand(false)\n// 반복\naudioPlayerAgent.requestRepeatCommand(RepeatMode.NONE)\n// 셔플\naudioPlayerAgent.requestShuffleCommand(false)",
    "// 다음 \naudioPlayerAgent.next()\n// 이전\naudioPlayerAgent.prev()\n// 즐겨찾기\naudioPlayerAgent.requestFavoriteCommand(false)\n// 반복\naudioPlayerAgent.requestRepeatCommand(.none)\n// 셔플\naudioPlayerAgent.requestShuffleCommand(false)",
    "// 다음\naudio_player_handler->next()\n// 이전\naudio_player_handler->prev()\n// 즐겨찾기\naudio_player_handler->requestFavoriteCommand(false)\n// 반복\naudio_player_handler->requestRepeatCommand(RepeatType.NONE)\n// 셔플\naudio_player_handler->requestShuffleCommand(false)"
  ]
},
    {
  "title": "AudioPlayer > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"AudioPlayer\": {\n    \"version\": \"1.4\",\n    \"playServiceId\":{{STRING}}\",\n    \"playerActivity\":{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"durationInMilliseconds\": {{LONG}},\n    \"lyricsVisible\": {{BOOLEAN}}\n  }\n}",
    "playServiceId | string | N | 현재 사용 중인 음원의 playServiceId",
    "playerActivity | string | Y | 현재 state",
    "token | string | N | 현재 사용 중인 음원의 토큰",
    "offsetInMilliseconds | long | Y | 현재 사용 중인 음원의 offset",
    "durationInMilliseconds | long | N | 현재 사용 중인 음원의 전체 재생시간(알수 없으면 보내주지 않음)",
    "lyricsVisible | boolean | N | AudioPlayer에서 가사 화면이 보여지고 있는지 여부가사를 보여줄 수 없는 Device에서는 lyricsVisible를 보내지 않음"
  ]
},
    {
  "title": "AudioPlayer > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
},
    {
  "title": "AudioPlayer > Play",
  "hash": "#play",
  "sentences": [
    "Play",
    "새로운 음원 또는 현재 음원 재생 요청입니다.(Play, Resume, Seek 요청이 포함되어 있습니다.)",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"Play\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"sourceType\": \"{{STRING}}\",\n    \"cacheKey\": \"{{STRING}}\",\n    \"audioItem\": {\n      \"stream\": {\n        \"url\": \"{{STRING}}\",\n        \"offsetInMilliseconds\": {{LONG}},\n        \"progressReport\": {\n          \"progressReportDelayInMilliseconds\": {{LONG}},\n          \"progressReportIntervalInMilliseconds\": {{LONG}}\n        },\n        \"token\": \"{{STRING}}\",\n        \"expectedPreviousToken\": \"{{STRING}}\"\n      },\n      \"metadata\": {\n        \"template\": {}\n      }\n    }\n  }\n}",
    "sourceType | string | N | URL or ATTACHMENT(default 는 URL)- ATTACHMENT 일 경우 stream에 url이 존재 하지 않음",
    "cacheKey | string | N | 디바이스에서 미디어 캐시를 위한 unique key(디바이스 캐시 기능은 필수가 아님)캐시가 불가능한 미디어 이면 디바이스로 내려주지 않음",
    "audioItem.stream | object | Y | -",
    "audioItem.stream.url | string | N | 오디오 컨텐츠의 URL (URL에 의한 streaming만 지원)sourceType 이 ATTACHMENT일 경우 없음",
    "audioItem.stream.offsetInMilliseconds | long | Y | 시작부터 얼마만큼의 offset부터 재생할지 설정.0이면 처음부터 재생",
    "audioItem.stream.progressReport.progressReportDelayInMilliseconds | long | N | 재생을 시작해서 지정된 시간 뒤에 한 번 progressReportDelayElapsed Event가 발생(offsetInMilliseconds 값과는 무관하게 컨텐츠 시작 시간 기준으로 절대값을 의미)",
    "audioItem.stream.progressReport.progressReportIntervalInMilliseconds | long | N | 재생을 시작해서 지정된 주기마다 progressReportIntervalElapsed Event가 발생(offsetInMilliseconds 값과는 무관하게 컨텐츠 시작 시간 기준으로 절대값을 의미)",
    "audioItem.stream.token | string | Y | 현재 stream을 나타내는 token Resume 을 판단하기 위한 key 값으로 사용되기 때문에, Play 에서 제공하는 미디어 내에서 unique 함이 보장되어야 함.",
    "audioItem.stream.expectedPreviousToken | string | N | 이전 stream을 나타내는 token",
    "audioItem.metadata | object | N | -",
    "audioItem.metadata.template | object | N | 각 type별 포맷은 아래에 기술 template이 정의되지 않은 경우 Display를 포함하는 디바이스는 Default 화면을 보여주어야 함"
  ]
},
    {
  "title": "AudioPlayer > audioItem.metadata.template - AudioPlayer.Template1",
  "hash": "#audioitemmetadatatemplate---audioplayertemplate1",
  "sentences": [
    "audioItem.metadata.template - AudioPlayer.Template1",
    "{\n  \"metadata\": {\n    \"disableTemplate\": {{BOOLEAN}},\n    \"template\": {\n      \"type\": \"AudioPlayer.Template1\",\n      \"title\": {\n        \"iconUrl\": \"{{STRING}}\",\n        \"text\": \"{{STRING}}\"\n      },\n      \"grammarGuide\": [\"{{STRING}}\"],\n      \"content\": {\n        \"title\": \"{{STRING}}\",\n        \"subtitle1\": \"{{STRING}}\",\n        \"subtitle2\": \"{{STRING}}\",\n        \"imageUrl\": \"{{STRING}}\",\n        \"durationSec\": \"{{STRING}}\",\n        \"backgroundImageUrl\": \"{{STRING}}\",\n        \"backgroundColor\": \"{{STRING}}\",\n        \"badgeImageUrl\": \"{{String}}\",\n        \"badgeMessage\": \"{{String}}\",\n        \"lyrics\": {\n          \"title\": \"{{String}}\",\n          \"lyricsType\": \"{{String}}\",\n          \"lyricsInfoList\": [\n            {\n              \"time\": {{Integer}},\n              \"text\": \"{{String}}\"\n            }\n          ],\n          \"showButton\": {\n            \"text\": \"{{String}}\"\n          }\n        },\n        \"settings\": {\n          \"favorite\": {{BOOLEAN}},\n          \"repeat\": \"{{String}}\",\n          \"shuffle\": {{BOOLEAN}}\n        }\n      }\n    }\n  }\n}",
    "disableTemplate | bool | N | true면 스크린을 가진 디바이스에서 AudioPlayer 재생 시 template을 display하지 않음default - false",
    "template.type | string | Y | AudioPlayer template type- AudioPlayer.Template1- AudioPlayer.Template2",
    "template.title | object | Y | title object",
    "template.title.iconUrl | string | N | icon image url",
    "template.title.text | string | Y | title text",
    "template.content | object | Y | content object",
    "template.content.title | string | Y | content 영역의 title",
    "template.content.subtitle1 | string | Y | subtitle1",
    "template.content.subtitle2 | string | N | subtitle2",
    "template.content.imageUrl | string | Y | image url",
    "template.content.durationSec | string | N | content duration in sec없거나 0, 음수, null이면 progress를 disabled 처리",
    "template.content.backgroundImageUrl | string | N | background image url",
    "template.content.backgroundColor | string | N | background colordefault - “#000”",
    "template.content.badgeImageUrl | string | N | 이미지(content.imageUrl)의 오른쪽 상단에 표시될 Badge Image의 URL",
    "template.content.badgeMessage | string | N | 이미지(content.imageUrl)의 왼쪽 하단에 표시될 Badge Message",
    "template.content.lyrics | obejct | N | 가사 화면을 표시하기 위한 정보",
    "template.content.lyrics.title | string | Y | 가사 화면에서 보여질 제목",
    "template.content.lyrics.lyricsType | string | Y | 가사의 종류- NONE : 자막 없음- SYNC : 자막 동기화- NON_SYNC : 자막 동기화 없음",
    "template.content.lyrics.lyricsInfoList | array of lyricsInfo | Y | 가사 내용(lyricsInfo)의 목록 기본 값은 빈 배열",
    "template.content.lyrics.lyricsInfoList.time | integer | N | lyricsTyps 이 SYNC 이면 mandatory lyricsInfo가 보여지는 시점의 millisecond 단위의 시간 정보",
    "template.content.lyrics.lyricsInfoList.text | string | Y | lyricsInfo가 보여지는 시점의 가사 내용",
    "content.lyrics.showButton | object | N | 가사 화면을 표시하기 위한 버튼",
    "content.lyrics.showButton.text | string | Y | 버튼 text",
    "template.content.settings | object | N | 사용자가 설정한 정보를 표시함- Play에서는 표시할 하위 field를 설정할 수 있음- 설정한 field에 대한 Event와 Directive를 사용할 수 있음",
    "template.content.settings.favorite | boolean | N | 재생 중인 음원에 대한 좋아요 여부",
    "template.content.settings.repeat | string | N | 재생 목록에 대한 반복 설정- ALL : 전곡 반복- ONE : 한곡 반복- NONE : 반복 없음",
    "template.content.settings.shuffle | boolean | N | 재생 목록의 음원을 임의의 순서로 재생할지 여부",
    "template.grammarGuide | list of string | N | 발화 도움말"
  ]
},
    {
  "title": "AudioPlayer > audioItem.metadata.template - AudioPlayer.Template2",
  "hash": "#audioitemmetadatatemplate---audioplayertemplate2",
  "sentences": [
    "audioItem.metadata.template - AudioPlayer.Template2",
    "{\n  \"metadata\": {\n    \"disableTemplate\": {{BOOLEAN}},\n    \"template\": {\n      \"type\": \"AudioPlayer.Template2\",\n      \"title\": {\n        \"iconUrl\": \"{{STRING}}\",\n        \"text\": \"{{STRING}}\"\n      },\n      \"grammarGuide\": [\"{{STRING}}\"],\n      \"content\": {\n        \"title\": \"{{STRING}}\",\n        \"subtitle\": \"{{STRING}}\",\n        \"subtitle1\": \"{{STRING}}\",\n        \"imageUrl\": \"{{STRING}}\",\n        \"durationSec\": \"{{STRING}}\",\n        \"backgroundColor\": \"{{STRING}}\",\n        \"lyrics\" : {\n          \"title\" : \"{{String}}\",\n          \"lyricsType\" : \"{{String}}\",\n          \"lyricsInfoList\" : [\n            {\"time\":\"{{Integer}}\",\"text\": \"{{String}}\"}\n          ],\n          \"showButton\": {\n            \"text\": \"{{String}}\"\n          }\n        }\n      }\n    }\n  }\n}",
    "disableTemplate | bool | N | true면 스크린을 가진 디바이스에서 AudioPlayer 재생 시 template을 display하지 않음 default : false",
    "template.type | string | Y | AudioPlayer template type- AudioPlayer.Template1- AudioPlayer.Template2",
    "template.title | object | Y | title object",
    "template.title.iconUrl | string | N | icon image url",
    "template.title.text | string | Y | title text",
    "template.content | object | Y | content object",
    "template.content.title | string | Y | content 영역의 title",
    "template.content.subtitle | string | Y | subtitle",
    "template.content.subtitle1 | string | Y | lyrics가 있는 경우, 가사화면 제목 우측의 소제목",
    "template.content.imageUrl | string | N | background image url",
    "template.content.durationSec | string | N | content duration in sec없거나 0, 음수, null이면 progress를 화면에서 disabled 처리",
    "template.content.backgroundColor | string | N | background colordefault : “#000”",
    "template.content.lyrics | obejct | N | 가사 화면을 표시하기 위한 정보",
    "template.content.lyrics.title | string | Y | 가사 화면에서 보여질 제목",
    "template.content.lyrics.lyricsType | string | Y | 가사의 종류- NONE : 자막 없음- SYNC : 자막 동기화- NON_SYNC : 자막 동기화 없음",
    "template.content.lyrics.lyricsInfoList | array of lyricsInfo | Y | 가사 내용(lyricsInfo)의 목록 기본 값은 빈 배열",
    "template.content.lyrics.lyricsInfoList.time | integer | N | lyricsTyps 이 SYNC 이면 mandatory lyricsInfo가 보여지는 시점의 millisecond 단위의 시간 정보",
    "template.content.lyrics.lyricsInfoList.text | string | Y | lyricsInfo가 보여지는 시점의 가사 내용",
    "content.lyrics.showButton | object | N | 가사 화면을 표시하기 위한 버튼",
    "content.lyrics.showButton.text | string | Y | 버튼 text",
    "template.grammarGuide | list of string | N | 발화 도움말"
  ]
},
    {
  "title": "AudioPlayer > Stop",
  "hash": "#stop",
  "sentences": [
    "Stop",
    "음원 재생 중지 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"Stop\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "AudioPlayer > Pause",
  "hash": "#pause",
  "sentences": [
    "Pause",
    "음원 일시정지 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"Pause\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "AudioPlayer > UpdateMetadata",
  "hash": "#updatemetadata",
  "sentences": [
    "UpdateMetadata",
    "음원의 Metadata UI 설정 정보를 갱신 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"UpdateMetadata\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"metadata\": {\n      \"template\": {\n        \"content\": {\n          \"settings\": {\n            \"favorite\": {{BOOLEAN}},\n            \"repeat\": \"{{STRING}}\",\n            \"shuffle\": {{BOOLEAN}}\n          }\n        }\n      }\n    }\n  }\n}",
    "metadata.template.content.settings.favorite | boolean | N | AudioPlayer.Template1의 settings.favorite 와 연동",
    "metadata.template.content.settings.repeat | string | N | AudioPlayer.Template1의 settings.repeat 과 연동- ALL : 전곡 반복- ONE : 한곡 반복- NONE : 반복 없음",
    "metadata.template.content.settings.shuffle | boolean | N | AudioPlayer.Template1의 settings.shuffle 과 연동"
  ]
},
    {
  "title": "AudioPlayer > ShowLyrics",
  "hash": "#showlyrics",
  "sentences": [
    "ShowLyrics",
    "가사화면 표시 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"ShowLyrics\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "AudioPlayer > HideLyrics",
  "hash": "#hidelyrics",
  "sentences": [
    "HideLyrics",
    "가사화면 닫기 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"HideLyrics\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "AudioPlayer > ControlLyricsPage",
  "hash": "#controllyricspage",
  "sentences": [
    "ControlLyricsPage",
    "가사화면 스크롤 위치 이동 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"ControlLyricsPage\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\"\n  }\n}",
    "direction | string | Y | 이전과 다음 PREVIOUS, NEXT"
  ]
},
    {
  "title": "AudioPlayer > RequestPlayCommand",
  "hash": "#requestplaycommand",
  "sentences": [
    "RequestPlayCommand",
    "Nugu mobile application 에서 새로운 곡 재생을 요청하기 위한 Directive.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestPlayCommand\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {}\n}",
    "payload | object | Y | Play 에서 곡 재생을 위해 필요한 정보"
  ]
},
    {
  "title": "AudioPlayer > RequestResumeCommand",
  "hash": "#requestresumecommand",
  "sentences": [
    "RequestResumeCommand",
    "Nugu mobile application 에서 현재 재생중인 play 에 대한 제어를 위한 Directive.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestResumeCommand\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "AudioPlayer > RequestNextCommand",
  "hash": "#requestnextcommand",
  "sentences": [
    "RequestNextCommand",
    "Nugu mobile application 에서 현재 재생중인 play 에 대한 제어를 위한 Directive.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestNextCommand\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "AudioPlayer > RequestPreviousCommand",
  "hash": "#requestpreviouscommand",
  "sentences": [
    "RequestPreviousCommand",
    "Nugu mobile application 에서 현재 재생중인 play 에 대한 제어를 위한 Directive.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestPreviousCommand\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "AudioPlayer > RequestPauseCommand",
  "hash": "#requestpausecommand",
  "sentences": [
    "RequestPauseCommand",
    "Nugu mobile application 에서 현재 재생중인 play 에 대한 제어를 위한 Directive.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestPauseCommand\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "AudioPlayer > RequestStopCommand",
  "hash": "#requeststopcommand",
  "sentences": [
    "RequestStopCommand",
    "Nugu mobile application 에서 현재 재생중인 play 에 대한 제어를 위한 Directive.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestStopCommand\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "AudioPlayer > Events",
  "hash": "#events",
  "sentences": [
    "Events"
  ]
},
    {
  "title": "AudioPlayer > PlaybackStarted",
  "hash": "#playbackstarted",
  "sentences": [
    "PlaybackStarted",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"PlaybackStarted\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > PlaybackPaused",
  "hash": "#playbackpaused",
  "sentences": [
    "PlaybackPaused",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"PlaybackPaused\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > PlaybackResumed",
  "hash": "#playbackresumed",
  "sentences": [
    "PlaybackResumed",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"PlaybackResumed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > PlaybackFinished",
  "hash": "#playbackfinished",
  "sentences": [
    "PlaybackFinished",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"PlaybackFinished\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > PlaybackStopped",
  "hash": "#playbackstopped",
  "sentences": [
    "PlaybackStopped",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"PlaybackStopped\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\",\n    \"reason\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값",
    "reason | string | N | 이 이벤트가 만들어진 이유를 명시하기 위한 객체 STOP, PLAY_ANOTHER 중 하나.- PLAY_ANOTHER : 동일 play 내에서 다른 곡 재생을 위해 이전에 재생하던 곡을 정지했을 때 올려주는 값.- STOP : 그 외 정지의 경우."
  ]
},
    {
  "title": "AudioPlayer > PlaybackFailed",
  "hash": "#playbackfailed",
  "sentences": [
    "PlaybackFailed",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"PlaybackFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"error\": {\n      \"type\": \"{{STRING}}\",\n      \"message\": \"{{STRING}}\"\n    },\n    \"currentPlaybackState\": {\n      \"token\": \"{{STRING}}\",\n      \"offsetInMilliseconds\": {{LONG}},\n      \"playerActivity\": \"{{STRING}}\"\n    },\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 재생에 실패한 stream의 token",
    "offsetInMilliseconds | long | Y | PlaybackFailed를 보낼 때 재생 중인 stream의 offset 값",
    "error.type | string | Y | MEDIA_ERROR_UNKNOWNMEDIA_ERROR_INVALID_REQUESTMEDIA_ERROR_SERVICE_UNAVAILABLEMEDIA_ERROR_INTERNAL_SERVER_ERRORMEDIA_ERROR_INTERNAL_DEVICE_ERROR",
    "error.message | string | Y | 에러에 대해 자세히 기술",
    "currentPlaybackState.token | string | Y | 현재 재생 중인 stream의 token으로 위에 있는 token과 다를 수 있음",
    "currentPlaybackState.offsetInMilliseconds | long | Y | 에러가 발생했을 때 현재 재생 중인 stream의 offset 값",
    "currentPlaybackState.playActivity | string | Y | player의 상태PLAYING, PAUSED, FINISHED, IDLE"
  ]
},
    {
  "title": "AudioPlayer > ProgressReportDelayElapsed",
  "hash": "#progressreportdelayelapsed",
  "sentences": [
    "ProgressReportDelayElapsed",
    "Play directive로 전달된 stream이 재생을 시작한 뒤 progressReportDelayInMilliseconds",
    "offsetInMilliseconds는 stream의 시작을 기준으로 offset을 의미 (컨텐츠 재생 시간 0부터 절대값을 의미)",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"ProgressReportDelayElapsed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > ProgressReportIntervalElapsed",
  "hash": "#progressreportintervalelapsed",
  "sentences": [
    "ProgressReportIntervalElapsed",
    "Play directive로 전달된 stream이 재생을 시작한 뒤 progressIntervalDelayInMilliseconds 주기마다 Event 전달",
    "offsetInMilliseconds는 stream의 시작을 기준으로 offset을 의미 (컨텐츠 재생 시간 0부터 절대값을 의미)",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"ProgressReportIntervalElapsed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > NextCommandIssued",
  "hash": "#nextcommandissued",
  "sentences": [
    "NextCommandIssued",
    "사용자가 다음 음원 재생을 요청하면 전송됩니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"NextCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}}\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > PreviousCommandIssued",
  "hash": "#previouscommandissued",
  "sentences": [
    "PreviousCommandIssued",
    "사용자가 이전 음원 재생을 요청하면 전송됩니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"PreviousCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}}\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > FavoriteCommandIssued",
  "hash": "#favoritecommandissued",
  "sentences": [
    "FavoriteCommandIssued",
    "사용자가 현재 음원 즐겨찾기(좋아요 포함)를 요청하면 전송됩니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"FavoriteCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"favorite\": {{BOOLEAN}}\n  }\n}",
    "favorite | boolean | Y | 재생 중인 음원에 대한 좋아요 여부"
  ]
},
    {
  "title": "AudioPlayer > RepeatCommandIssued",
  "hash": "#repeatcommandissued",
  "sentences": [
    "RepeatCommandIssued",
    "사용자가 현재 음원 반복 재생을 요청하면 전송됩니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RepeatCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"repeat\": {{BOOLEAN}}\n  }\n}",
    "repeat | boolean | Y | 재생 목록에 대한 반복 설정 - ALL : 전곡 반복 - ONE : 한곡 반복 - NONE : 반복 없음"
  ]
},
    {
  "title": "AudioPlayer > ShuffleCommandIssued",
  "hash": "#shufflecommandissued",
  "sentences": [
    "ShuffleCommandIssued",
    "사용자가 셔플 재생을 요청하면 전송됩니다.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"ShuffleCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"shuffle\": {{BOOLEAN}}\n  }\n}",
    "shuffle | boolean | Y | 재생 목록의 음원을 임의의 순서로 재생할지 여부"
  ]
},
    {
  "title": "AudioPlayer > ShowLyricsSucceeded",
  "hash": "#showlyricssucceeded",
  "sentences": [
    "ShowLyricsSucceeded",
    "ShowLyrics Directive가 발생하여 가사화면을 성공적으로 띄운다음 발생되는 Event",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"ShowLyricsSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "AudioPlayer > ShowLyricsFailed",
  "hash": "#showlyricsfailed",
  "sentences": [
    "ShowLyricsFailed",
    "ShowLyrics Directive가 발생하였는데 가사화면을 띄우지 못한 경우 발생되는 Event",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"ShowLyricsFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "AudioPlayer > HideLyricsSucceeded",
  "hash": "#hidelyricssucceeded",
  "sentences": [
    "HideLyricsSucceeded",
    "HideLyrics Directive가 발생하여 가사화면을 성공적으로 닫은 다음 발생되는 Event",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"HideLyricsSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "AudioPlayer > HideLyricsFailed",
  "hash": "#hidelyricsfailed",
  "sentences": [
    "HideLyricsFailed",
    "HideLyrics Directive가 발생하였는데 가사화면을 닫지 못한 경우 발생되는 Event",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"HideLyricsFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "AudioPlayer > ControlLyricsPageSucceeded",
  "hash": "#controllyricspagesucceeded",
  "sentences": [
    "ControlLyricsPageSucceeded",
    "ControlLyricsPage Directive가 발생하여 가사화면을 성공적으로 이동한 다음 발생되는 Event",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"ControlLyricsPageSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\"\n  }\n}",
    "direction | string | Y | 이전과 다음을 수행한 결과PREVIOUS, NEXT"
  ]
},
    {
  "title": "AudioPlayer > ControlLyricsPageFailed",
  "hash": "#controllyricspagefailed",
  "sentences": [
    "ControlLyricsPageFailed",
    "ControlLyricsPage Directive가 발생하였는데 가사화면을 이동하지 못한 경우 발생되는 Event",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"ControlLyricsPageFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\"\n  }\n}",
    "direction | string | Y | 이전과 다음을 수행한 결과PREVIOUS, NEXT"
  ]
},
    {
  "title": "AudioPlayer > RequestPlayCommandIssued",
  "hash": "#requestplaycommandissued",
  "sentences": [
    "RequestPlayCommandIssued",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestPlayCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {}\n}",
    "payload | string | Y | RequestPlayCommand Directive 에 포함되어 있는 payload 를 그대로 포함."
  ]
},
    {
  "title": "AudioPlayer > RequestResumeCommandIssued",
  "hash": "#requestresumecommandissued",
  "sentences": [
    "RequestResumeCommandIssued",
    "RequestResumeCommand Directive 를 받은 디바이스가 발생시키는 Event.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestResumeCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > RequestNextCommandIssued",
  "hash": "#requestnextcommandissued",
  "sentences": [
    "RequestNextCommandIssued",
    "RequestNextCommand Directive 를 받은 디바이스가 발생시키는 Event.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestNextCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > RequestPreviousCommandIssued",
  "hash": "#requestpreviouscommandissued",
  "sentences": [
    "RequestPreviousCommandIssued",
    "RequestPreviousCommand Directive 를 받은 디바이스가 발생시키는 Event.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestPreviousCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > RequestPauseCommandIssued",
  "hash": "#requestpausecommandissued",
  "sentences": [
    "RequestPauseCommandIssued",
    "RequestPauseCommand Directive 를 받은 디바이스가 발생시키는 Event.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestPauseCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
},
    {
  "title": "AudioPlayer > RequestStop CommandIssued",
  "hash": "#requeststop-commandissued",
  "sentences": [
    "RequestStop CommandIssued",
    "RequestStopCommand Directive 를 받은 디바이스가 발생시키는 Event.",
    "{\n  \"header\": {\n    \"namespace\": \"AudioPlayer\",\n    \"name\": \"RequestStopCommandIssued\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"offsetInMilliseconds\": {{LONG}},\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 현재 재생 중인 stream의 token",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 stream의 offset 값"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/authentication",
  "order": 148,
  "indexes": [
    {
  "title": "Authentication",
  "hash": "",
  "sentences": [
    "Authentication",
    "NUGU 플랫폼 인증은",
    "OAuth 2.0",
    "의 규격을 지원하고, NUGU의 회원 체계는 SK텔레콤의",
    "T아이디",
    "를 따릅니다.",
    "플랫폼 인증을 위해서는 NUGU에서 별도로 발급하는",
    "Client Id, Client Secret",
    "과 제휴사에서 등록한",
    "Redirect Uri",
    "정보가 필요합니다. 인증 정보는 체험판 신청으로 발급 받을 수 있으며, 정식판 제휴 시에는 PoC 관리 메뉴에서 발급 받은 정보를 확인 할 수 있습니다."
  ]
},
    {
  "title": "Authentication > Authorize Endpoint",
  "hash": "#authorize-endpoint",
  "sentences": [
    "Authorize Endpoint",
    "response_type=code",
    "만 사용 됩니다.",
    "data",
    "파라미터를 사용하여 디바이스 일련번호를 전달 할 수 있습니다.",
    "{“deviceSerialNumber”:”DEVICE_SERIAL_NUMBER”}",
    "GET",
    "https://api.host.domain",
    "/v1/auth/oauth/authorize",
    "인증 요청 (Authorize Endpoint)",
    "NUGU계정 미사용, 체험판 사용 시에는 불필요합니다.",
    "Parameters",
    "Query",
    "client_id",
    "string",
    "발급받은 ClientId를 사용 합니다.",
    "response_type",
    "string",
    "code 만 사용 됩니다.",
    "redirect_uri",
    "string",
    "설정한 RedirectUri를 사용합니다.",
    "scope",
    "string",
    "(TODO)",
    "data",
    "string",
    "추가적인 데이터를 포함됩니다.",
    "state",
    "string",
    "CSRF를 위해 사용 되는 값입니다.",
    "Response",
    "302",
    "Header",
    "HTTP/1.1 302 \nDate: Mon, 14 Oct 2019 02:24:58 GMT\nLocation: {redirect_uri}?code={code}&state={state}"
  ]
},
    {
  "title": "Authentication > Token Endpoint",
  "hash": "#token-endpoint",
  "sentences": [
    "Token Endpoint",
    "grant_type=refresh_token",
    ",",
    "grant_type=authorization_code",
    ",",
    "grant_type=client_credentials",
    "가사용 됩니다.",
    "NUGU계정 미사용, 체험판은",
    "grant_type=client_credentials",
    "을 사용합니다.",
    "Client 인증 정보는 Body Parameter(application/x-www-form-urlencoded)를 사용 합니다.",
    "POST",
    "https://api.host.domain",
    "/v1/auth/oauth/token",
    "토큰 요청 (Token Endpoint)",
    "NUGU계정 미사용, 체험판 사용 시에는 code와 redirect_url 입력이 불필요합니다.",
    "Parameters",
    "Body",
    "data",
    "string",
    "추가적인 데이터가 포함 됩니다. ex) {\"deviceSerialNumber\":\"DEVICE_SERIAL_NUMBER\"}",
    "grant_type",
    "string",
    "authorization_code (신규), client_credentials (NUGU 회원 미사용, 체험판)",
    "code",
    "string",
    "응답 받은 code 값을 사용 합니다.",
    "redirect_uri",
    "string",
    "인증 요청 시 사용된 redirect_uri를 사용합니다.",
    "client_id",
    "string",
    "발급 받은 ClientId를 사용합니다.",
    "client_secret",
    "string",
    "발급 받은 ClientSecret을 사용합니다.",
    "Response",
    "200",
    "Header",
    "HTTP/1.1 200 \nDate: Mon, 14 Oct 2019 02:24:59 GMT\nContent-Type: application/json;charset=UTF-8",
    "Body",
    "{\n  \"access_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjM3MTg1MDM1NDYsInVzZXJfbmFtZSI6IkFMREZBS0sxQjhaUjU2MzE1QzVEIiwianRpIjoiYWU4ZWQ0MTEtZTljYy00NGRjLThlYjUtODc4NTdjM2QzNmFlIiwiY2xpZW50X2lkIjoic3BlYWtlci5udWd1Lm51MTEwIiwic2NvcGUiOltdLCJleHQiOnsidXNyIjoiQUxERkFLSzFCOFpSNTYzMTVDNUQiLCJwb2MiOiJzcGVha2VyLm51Z3UubnUxMTAiLCJkdmMiOiJBTERGRzU1WU1ZUkE5RTUyN0VCRCIsInRrbiI6IjNDNzMxMzEwOUIyQTQ1RTZCQjhBRUQ2MjBGRjNBMThGIn19.DrmLXJXBF9YL7-R7gtEg5dOLQ7UfYMlPKGp1WHNfx8M\",\n  \"token_type\" : \"Bearer\",\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NzM2MTE4OTksInVzZXJfbmFtZSI6IkFMREZBS0sxQjhaUjU2MzE1QzVEIiwianRpIjoiNjAzYTkyNjUtNTJmNS00ZDE2LWEzOWYtMTVkMGZhM2IxMTgyIiwiY2xpZW50X2lkIjoic3BlYWtlci5udWd1Lm51MTEwIiwic2NvcGUiOltdLCJhdGkiOiJhZThlZDQxMS1lOWNjLTQ0ZGMtOGViNS04Nzg1N2MzZDM2YWUiLCJleHQiOnsidXNyIjoiQUxERkFLSzFCOFpSNTYzMTVDNUQiLCJkdmMiOiJBTERGRzU1WU1ZUkE5RTUyN0VCRCIsInBvYyI6InNwZWFrZXIubnVndS5udTExMCIsInRrbiI6IjNDNzMxMzEwOUIyQTQ1RTZCQjhBRUQ2MjBGRjNBMThGIn19.F29whyNRE6LN3c9yfNTH3F9uN3W04aP2Jxav3rSSFoY\",\n  \"expires_in\" : 2147483646,\n  \"jti\" : \"ae8ed411-e9cc-44dc-8eb5-87857c3d36ae\"\n}",
    "400",
    "Header",
    "HTTP/1.1 400 \nDate: Mon, 14 Oct 2019 04:22:45 GMT\nContent-Type: application/json;charset=UTF-8",
    "Body",
    "{\n  \"error\": \"invalid_grant\",\n  \"error_description\": \"Invalid authorization code: 0rrbEjnOfqxIv6uNic6C\"\n}",
    "401",
    "Header",
    "HTTP/1.1 401 \nDate: Mon, 14 Oct 2019 04:22:45 GMT\nContent-Type: application/json;charset=UTF-8\nWWW-Authenticate: Form realm=\"NUGU\", error=\"invalid_client\", error_description=\"Bad client credentials\"",
    "Body",
    "{\n  \"error\": \"invalid_client\",\n  \"error_description\": \"Bad client credentials\"\n}",
    "POST",
    "https://api.host.domain",
    "/v1/auth/oauth/token",
    "토큰 갱신 요청 (Token Endpoint)",
    "NUGU계정 미사용, 체험판 사용 시에는 불필요합니다.",
    "Parameters",
    "Body",
    "data",
    "string",
    "추가적인 데이터가 포함 됩니다. ex) {\"deviceSerialNumber\":\"DEVICE_SEERIAL_NUMBER\"}",
    "grant_type",
    "string",
    "refresh_token (갱신)",
    "refresh_token",
    "string",
    "신규 발급 시 응답 받은 refresh_token을 사용합니다.",
    "client_id",
    "string",
    "client_secret",
    "string",
    "Response",
    "200",
    "Header",
    "HTTP/1.1 200 \nDate: Mon, 14 Oct 2019 03:01:27 GMT\nContent-Type: application/json;charset=UTF-8",
    "Body",
    "{\n  \"access_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjM3MTg1MDU3MzQsInVzZXJfbmFtZSI6IkFMREZBS0sxQjhaUjU2MzE1QzVEIiwianRpIjoiNzcyNWVmNGYtNzc4Yy00NDUyLTk3ZWItODE0NWVmNWIyOTNkIiwiY2xpZW50X2lkIjoic3BlYWtlci5udWd1Lm51MTEwIiwic2NvcGUiOltdLCJleHQiOnsidXNyIjoiQUxERkFLSzFCOFpSNTYzMTVDNUQiLCJkdmMiOiJBTERGRzU1WU1ZUkE5RTUyN0VCRCIsInBvYyI6InNwZWFrZXIubnVndS5udTExMCIsInRrbiI6IjNDNzMxMzEwOUIyQTQ1RTZCQjhBRUQ2MjBGRjNBMThGIn19.pKy2WqIWtKCybQT8jGZsYUyvGg3ZdtQ4zzTSj7IeRYQ\",\n  \"token_type\" : \"Bearer\",\n  \"refresh_token\" : \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJleHAiOjE1NzM2MTE4OTksInVzZXJfbmFtZSI6IkFMREZBS0sxQjhaUjU2MzE1QzVEIiwianRpIjoiNjAzYTkyNjUtNTJmNS00ZDE2LWEzOWYtMTVkMGZhM2IxMTgyIiwiY2xpZW50X2lkIjoic3BlYWtlci5udWd1Lm51MTEwIiwic2NvcGUiOltdLCJhdGkiOiI3NzI1ZWY0Zi03NzhjLTQ0NTItOTdlYi04MTQ1ZWY1YjI5M2QiLCJleHQiOnsidXNyIjoiQUxERkFLSzFCOFpSNTYzMTVDNUQiLCJkdmMiOiJBTERGRzU1WU1ZUkE5RTUyN0VCRCIsInBvYyI6InNwZWFrZXIubnVndS5udTExMCIsInRrbiI6IjNDNzMxMzEwOUIyQTQ1RTZCQjhBRUQ2MjBGRjNBMThGIn19.AkXWHMuUlKYKs3wP92roaBWQaFmuW7e4kKmlhmrWDZc\",\n  \"expires_in\" : 2147483646,\n  \"jti\" : \"7725ef4f-778c-4452-97eb-8145ef5b293d\"\n}",
    "400",
    "Header",
    "HTTP/1.1 400 \nDate: Mon, 14 Oct 2019 04:22:45 GMT\nContent-Type: application/json;charset=UTF-8",
    "Body",
    "{\n  \"error\": \"invalid_grant\",\n  \"error_description\": \"\"\n}",
    "401",
    "Header",
    "HTTP/1.1 401 \nDate: Mon, 14 Oct 2019 04:22:45 GMT\nContent-Type: application/json;charset=UTF-8\nWWW-Authenticate: Form realm=\"NUGU\", error=\"invalid_client\", error_description=\"Bad client credentials\"",
    "Body",
    "{\n  \"error\": \"invalid_client\",\n  \"error_description\": \"Bad client credentials\"\n}"
  ]
},
    {
  "title": "Authentication > Revoke Endpoint",
  "hash": "#revoke-endpoint",
  "sentences": [
    "Revoke Endpoint",
    "POST",
    "/v1/auth/oauth/revoke",
    "연결 해제 (Revoke Endpoint)",
    "Parameters",
    "Body",
    "data",
    "string",
    "token",
    "string",
    "client_id",
    "string",
    "client_secret",
    "string",
    "Response",
    "200",
    "Header",
    "HTTP/1.1 200 \nDate: Mon, 14 Oct 2019 03:01:27 GMT\nContent-Type: application/json;charset=UTF-8",
    "Body",
    "{}",
    "400",
    "Header",
    "HTTP/1.1 400 \nDate: Mon, 14 Oct 2019 04:22:45 GMT\nContent-Type: application/json;charset=UTF-8",
    "Body",
    "{\n  \"error\": \"invalid_token\",\n  \"error_description\": \"\"\n}",
    "401",
    "Header",
    "HTTP/1.1 401 \nDate: Mon, 14 Oct 2019 04:22:45 GMT\nContent-Type: application/json;charset=UTF-8",
    "Body",
    "{\n  \"error\": \"invalid_client\",\n  \"error_description\": \"\"\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/use-backend-proxy/backend-proxy-api-reference",
  "order": 50,
  "indexes": [
    {
  "title": "Backend proxy API Reference",
  "hash": "",
  "sentences": [
    "Backend proxy API Reference"
  ]
},
    {
  "title": "Backend proxy API Reference > Request sample",
  "hash": "#request-sample",
  "sentences": [
    "Request sample",
    "POST /action_name HTTP/1.1\nAccept: application/json, */*\nContent-Length: 400\nContent-Type: application/json\nHost: builder.open.co.kr\nAuthorization: token TOKEN_STRING",
    "{\n  \"version\": \"2.0\",\n  \"action\": {\n    \"actionName\": \"{{string}}\",\n    \"parameters\": {\n      KEY: {\n        \"type\": \"{{string}}\",\n        \"value\": VALUE\n      }\n    }\n  },\n  \"event\": {\n    \"type\": \"{{string}}\"\n  },\n  \"context\": {\n    \"session\": {\n      \"accessToken\": \"{{string}}\"\n    },\n    \"device\": {\n      \"type\": \"{{string}}\",\n      \"state\": {\n        KEY: VALUE\n      }\n    },\n    \"supportedInterfaces\": {\n      \"AudioPlayer\": {\n        \"playerActivity\": \"PLAYING\",\n        \"token\": \"string value\",\n        \"offsetInMilliseconds\": 100000\n      }\n    },\n    \"privatePlay\": {} // reserved\n  }\n}"
  ]
},
    {
  "title": "Backend proxy API Reference > Request header",
  "hash": "#request-header",
  "sentences": [
    "Request header",
    "Authorization | header | N | Backend proxy에서 유효한 요청인지 검증(validation)하기 위해 사용합니다.",
    "실제 스피커에서 연동할 때 전달하는 값이며, PlayBuider에서 테스트할 때는 포함하지 않습니다.",
    "NUGU developers > 내 정보 > API key 정보에서 확인할 수 있습니다."
  ]
},
    {
  "title": "Backend proxy API Reference > Request body",
  "hash": "#request-body",
  "sentences": [
    "Request body",
    "version | string | Y | Backend proxy API 버전을 표시합니다.",
    "action | json |   |  ",
    "action.actionName | string | Y | 현재 요청하는 Action의 이름입니다.",
    "action.parameters | string | Y | Action에서 설정된 파라미터로 Play Builder에서 설정한 내용을 포함합니다. (단, 값이 null인 경우 요청에서 제외됩니다. 요청에서 생략되었더라도 Backend parameter를 응답 값으로 포함해야 합니다.)     KEY - Play Builder에서 Action 내에 정의한 parameter 이름    type - 사용자 발화에서 분석된 Entity인 경우 Play Builder에서 설정한 Entity의 타입  value - 파라미터의 값으로 string 타입",
    "event | json | Y |  ",
    "event.type | string | Y | 디바이스에서 발생한 event의 종류를 나타내며, 이 값에 따라 event의 데이터가 달라집니다. (Capability Interfaces 참조)",
    "context | json | Y |  ",
    "context.session | json | Y |  ",
    "context.session.id | string | Y | 대화가 유지되는 동안의 유효한 키 값입니다.",
    "context.session.isNew | boolean | Y | 대화의 처음을 알려주는 값입니다.",
    "context.session.accessToken | string | N | OAuth 2에 사용되는 인증 token입니다.",
    "context.session.isPlayBuilderRequest | bool | N | Play Builder에서 테스트용으로 전달한 요청임을 의미합니다. (기본값: false)",
    "context.device | json | Y |  ",
    "context.device.type | string | Y | 현재 사용 중인 디바이스 종류를 나타냅니다.",
    "context.device.state | json | N | 디바이스의 상태를 나타내는 값으로 현재는 정의된 것이 없습니다.",
    "context.supportedInterfaces | json | Y | 개발한 Play가 특정 Capability Interface를 지원하는 경우 각 Interface별로 상태 정보를 표시합니다.",
    "profile | json | N | Private Play에서만 사용됩니다.",
    "profile.privatePlay | json | N | Private Play인 경우 정보를 추가합니다.",
    "profile.privatePlay.deviceUniqueId | string | N | Private Play인 경우에만 입력합니다.",
    "profile.privatePlay.userKey | string | Y | 해시된 사용자 ID(hashed user id)를 나타냅니다.",
    "profile.privatePlay.deviceKey | string | Y | 해시된 디바이스 ID(hashed device id)를 나타냅니다.",
    "profile.privatePlay.enrolledUser | json | N | 초대 사용자(enrolled user)인 경우 정보를 추가합니다.",
    "profile.privatePlay.enrolledUser.name | string | Y | 초대 사용자 추가 이름을 나타냅니다.",
    "profile.privatePlay.enrolledUser.phoneNo | string | Y | 초대 사용자 추가 전화번호를 나타냅니다.",
    "profile.privatePlay.enrolledUser.email | string | Y | 초대 사용자 추가 이메일을 나타냅니다.",
    "profile.privatePlay.enrolledUser.tag | string | N | 초대 사용자 추가 정보를 나타냅니다.",
    "context.device.state와 context.privatePlay는 동일 버전 내에서 하위 호환성을 유지한 상태로 지속적으로 확장될 수 있는 필드이므로 구현 시 주의해야 합니다."
  ]
},
    {
  "title": "Backend proxy API Reference > Context for Capability Interfaces(AudioPlayer Interface)",
  "hash": "#context-for-capability-interfacesaudioplayer-interface",
  "sentences": [
    "Context for Capability Interfaces(AudioPlayer Interface)",
    "AudioPlayer Interface를 사용하도록 설정된 Play에만 전송됩니다.",
    "playerActivity | string | Y | 스피커의 오디오 플레이어 상태값을 나타냅니다.IDLE, PLAYING, PAUSED, STOPPED, FINISHED, BUFFER_UNDERRUN",
    "token | string | N | 현재 재생 중인 곡의 token 값입니다.AudioPlayer.Play Directive 전송 시 스트리밍 URL과 함께 전송되는 token 값 재생 중인 곡이 있는 경우에만 token이 존재",
    "offsetInMilliseconds | long | Y | 현재 재생 중인 위치 (msec)를 나타냅니다.재생 중인 곡이 없을 경우 기본 값은 0"
  ]
},
    {
  "title": "Backend proxy API Reference > Response Sample",
  "hash": "#response-sample",
  "sentences": [
    "Response Sample",
    "{\n  \"version\": \"2.0\",\n  \"resultCode\": \"OK\",\n  \"output\": {\n    \"datetime\": \"오늘\",\n    KEY1: VALUE1,\n    KEY2: VALUE2,\n    ...\n  },\n  \"directives\": [\n    {\n      \"type\": \"AudioPlayer.Play\",\n      \"audioItem\": {     \n          \"stream\": {\n            \"url\": \"{{STRING}}\",\n            \"offsetInMilliseconds\": {{LONG}},\n            \"progressReport\": {\n              \"progressReportDelayInMilliseconds\": {{LONG}},\n              \"progressReportIntervalInMilliseconds\": {{LONG}}\n            },\n            \"token\": \"{{STRING}}\",\n            \"expectedPreviousToken\": \"{{STRING}}\"\n          },\n          \"metadata\": { } // reserved\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "Backend proxy API Reference > Response Body",
  "hash": "#response-body",
  "sentences": [
    "Response Body",
    "version | string | Y | Backend proxy API 버전을 표시합니다.",
    "resultCode | string | Y | OK : 성공인 경우 사용하는 값으로 다른 값을 전송하면 성공이 아닌 것으로 처리하기 때문에 주의해야 합니다.성공이 아닌 경우는 PlayBuider의 General > 기본정보 페이지의 예외 처리 또는 Action > Custom Actions > 선택한 Action의 예외 처리에서 설정된 Result Code(Exception Code)값 전송합니다.",
    "output | json | Y | Request에서 전송한 action.parameters의 KEY:VALUE를 처리한 결과를 전송합니다.Request의 모든 KEY:VALUE가 동일하게 나와야 합니다.VALUE는 Request의 값과 같거나 다를 수 있습니다.변경되지 않은 VALUE들은 Request의 값을 그대로 써주어야 합니다.  - KEY : Request의 action.parameters에 정의된 KEY  - VALUE : backend proxy에서 처리한 결과",
    "directives | json | N | 특정 Capability Interface를 지원하는 Play에서 Directive를 전송하는 경우에 이 필드를 통해 전송합니다.각 Capability Interface의 Directive 포맷은 해당 Capability Interface 규격을 참조합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/use-backend-proxy/backend-proxy",
  "order": 45,
  "indexes": [
    {
  "title": "Backend proxy 구축하기",
  "hash": "",
  "sentences": [
    "Backend proxy 구축하기",
    "Play에서는 사용자의 발화를 분석한 내용을 기반으로 적절한 응답을 내보내 주거나 동작을 수행합니다. 이 응답에 필요한 정보가 외부 서버로부터 가져와야 하는 경우는 REST API를 통해 요청해야 하며, 음악을 재생하는 등의 디바이스를 동작시키는 명령을 정의하는 것도 Backend proxy에서 처리해야 합니다.",
    "NUGU 플랫폼의 Dialog Manager는 지정된 포맷(Backend proxy API 규격)으로 요청을 하기 때문에 외부 서비스의 REST API 포맷이 Backend proxy API 규격과 다르다면 포맷을 변환해주기 위한 Backend proxy 서버를 개발해야 합니다.",
    "이 서버는 Play Builder를 통해 Play를 만드는 과정에서 정의한 파라미터와",
    "Backend proxy API Reference",
    "에서 제공하는 규격을 사용하여 직접 개발해야 합니다.",
    "NUGU 플랫폼에서는 Backend proxy를 구축할 수 있는 클라우드 환경을 제공하고 있지 않으며, Play를 개발하는 곳에서 직접 구축을 하거나 클라우드 서비스를 이용할 수 있습니다.",
    "위 그림에서 첫번째 단계와 두번째 단계는 Play Builder에서 설정하는 작업이기 때문에 여기서 추가로 설명하지 않습니다.",
    "Play Builder에 Action별로 설정된 정보를 기반으로 Action 당 하나의 REST API 포맷을 파악하고 Backend proxy 호출을 필요로 하는 Action 수만큼의 REST API를 지원하는 서버를 개발합니다. 따라서 Play 외부 연동 서버 개발을 하려면 3번째 단계에서 REST API 포맷을 파악하는 방법을 이해하면 됩니다.",
    "Backend proxy API 규격은 다음과 같은 정보를 Backend proxy 서버로 전달합니다.",
    "Action 이름 | Backend proxy에서 처리해야 하는 요청을 구분하는 데 사용됩니다.어떠한 Action이 Backend proxy를 호출했는지 확인할 수 있습니다.",
    "Parameters | Play에서 정의된 Parameter들이 전달됩니다.Utterance Parameter에는 Play 사용자의 실제 발화에 담긴 Entity 혹은 그 Entity가 정규화된 값이 “value”로 전달됩니다.Backend Parameter는 “value”를 담아서 Play로 전달하게 될 Parameter이며 value는 “null”로 전달됩니다.Utterance/Backend Parameter를 구분할 수 없으므로, Play에서 어떻게 정의를 했는지 파악한 후 구현해야 합니다.",
    "Context 정보 | 사용자 식별 token, 디바이스 상태 정보 등이 전달됩니다.",
    "Event 정보 | 디바이스에서 발생한 Event 정보",
    "Backend proxy 서버는 위의 정보를 바탕으로 특정 사용자가 전달한 요청에 대해 적절한 정보를 전달해야 합니다."
  ]
},
    {
  "title": "Backend proxy 구축하기 > REST API URL",
  "hash": "#rest-api-url",
  "sentences": [
    "REST API URL",
    "REST API 호출은 Backend proxy를 사용하도록 지정한 Action에서만 이루어지며, 각 Action 별로 고유한 REST API URL이 결정됩니다.",
    "REST API URL 생성 규칙은 다음과 같습니다.",
    "Play Builder > General > 외부 서버 연결 정보 > Web URL + Play Builder > Actions > Action Name",
    "예를 들어 외부 서버 연결 정보의 Web URL에",
    "http://backend_proxy.nugu.com",
    "를 설정하고, Action 이름을 “playMusic”으로 설정했다면 해당 Action을 처리하는 REST API URL은",
    "http://backend_proxy.nugu.com/playMusic",
    "이 됩니다.",
    "각각의 정보를 참조하기 위한 Play Builder 화면은 아래와 같습니다."
  ]
},
    {
  "title": "Backend proxy 구축하기 > Request Body",
  "hash": "#request-body",
  "sentences": [
    "Request Body",
    "Request의 Body로 전달되는 JSON 포맷의 데이터는",
    "Backend proxy API Reference",
    "를 참조합니다. 이 JSON 데이터는 임의의 필드가 추가 될 수 있으므로, 이에 대한 영향이 없도록 구현되어야 합니다. Request Body에 정의된 필드 중 Play Builder에 설정한 값들에 의해 결정되는 필드는 action.parameters 입니다.",
    "NUGU 플랫폼에서 Play Builder에 설정된 정보로부터 action.parameters 필드를 채우는 규칙은 다음과 같습니다.",
    "KEY | Play Builder의 “응답에 필요한 정보 가져오기” 화면에서 다음의 두 위치에 설정된 모든 파라미터가 포함되어야 합니다. Utterance Parameter의 Parameter Name Backend Parameter의 Parameter Name",
    "type | Utterance Parameter에만 적용되며, Play Builder의 Entity Mapping에 설정된 값 중 “:” 앞의 값만 전송합니다.Backend Parameter의 경우에는 Entity Mapping을 설정하지 않기 때문에 이 필드는 사용되지 않습니다.",
    "value | 실제 해당 파라미터에 할당된 값을 전송합니다.Utterance Parameter의 경우 필수가 체크되지 않은 파라미터는 값이 있을 수도 있고 없을 수도 있습니다.Backend Parameter의 경우에도 Backend proxy가 몇 번 호출되느냐에 따라 값이 있을 수도 있고 없을 수도 있습니다.",
    "예를 들어 설명하면 아래와 같습니다.",
    "Backend Parameter의 경우 Backend proxy에서 처리한 결과를 가져오는 용도로 사용되기 때문에 Request Body에는 null을 갖게 됩니다.",
    "Backend Parameter에 어떤 값을 채워줄지는 Play Builder에서 설정한 Action의 용도에 따라 다르며, Play Builder 작성자와 Backend proxy 개발자 간에 어떻게 처리해야 할지 정확하게 내용을 공유하고 있어야 합니다.",
    "{\n  \"action\": {\n    \"actionName\": \"action이름\",\n    \"parameters\": {\n      \"datetime\": {\n        \"type\": \"BID_DT_DAY\",\n        \"value\": \"오늘\"\n      },\n      \"isValidTime\": {\n        \"type\": null,\n        \"value\": null\n      }\n    }  \n  }\n}"
  ]
},
    {
  "title": "Backend proxy 구축하기 > Response Body",
  "hash": "#response-body",
  "sentences": [
    "Response Body",
    "REST API 요청에 대한 응답으로 생성되는 Body는 Request Body의 action.parameters에 전달했던 모든 KEY를 동일하게 Response에 전달해주어야 합니다.",
    "Request의 action.parameters에 사용된 KEY는 모두 Response의 “output” 내의 KEY로 정의되어야 합니다.",
    "“output” 내의 KEY는 Request와 다르게 “type”, “value” 필드를 갖지 않고, string 타입의 값(VALUE)만을 포함합니다.",
    "Utterance Parameter와 Backend Parameter 모두 Backend proxy에 요청을 한 뒤에 값이 바뀔 수 있습니다.\n\n    (Request에서 값을 갖거나 null일 수 있으며, Response에서는 요청 값을 그대로 갖거나 변경되거나 null이 될 수 있습니다.)",
    "Response에서 모든 값을 그대로 똑같이 포함하는 이유는 입출력이 명확히 구분되지 않기 때문입니다.\n사용자 발화에 의해 설정된 Utterance Parameter의 경우 Backend proxy에서 값을 바꾼 뒤에 응답 텍스트에 사용될 수도 있습니다. 규격만을 정확히 따른다면 어떻게 사용하든 크게 문제되지 않습니다."
  ]
},
    {
  "title": "Backend proxy 구축하기 > resultCode",
  "hash": "#resultcode",
  "sentences": [
    "resultCode",
    "“output” 필드 외에 “resultCode”가 정의되어 있습니다. 이 필드는 위 그림에서 설정한 Exception Code에 의해 결정됩니다.",
    "예외 상황 관리를 참고하세요.",
    "Play Builder는 Backend proxy 호출 시 발생할 수 있는 다양한 예외 상황마다 적절히 대응할 수 있도록 설정할 수 있습니다.",
    "Play Builder에서는 “Exception Code”와 각 상황에서의 Exception Prompt 또는 사용자에게 오류 상황을 알려주고 필요한 Parameter를 다시 물어볼 수 있는데, 이때의 각 상황은 Backend proxy의 “resultCode”로 전달되는 값과 Play Builder에서 설정한 “Exception Code”를 매칭하여 동작을 결정합니다.",
    "따라서 Response Body로 전달되는 JSON 포맷에서 “resultCode”에 올 수 있는 값의 종류와 수행되는 로직은 다음과 같습니다.",
    "“OK” - 성공일 경우 Backend proxy는 고정된 값을 보내줘야 합니다. (이 값 외의 모든 경우(case)는 예외 처리를 합니다.)",
    "Exception Code - Play Builder에서 정의한 Exception Code 값으로 Play Builder에서 설정한 동작을 수행합니다.",
    "이외의 모든 값 (“”, null 포함) - Play Builder > 외부 서버 연결 정보 > 연동 실패 시 Prompt 영역에서 지정한 기본(Default) Prompt를 보내 줍니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/before-start/backend-proxy",
  "order": 16,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/ios/background",
  "order": 177,
  "indexes": [
    {
  "title": "Background 동작 처리",
  "hash": "",
  "sentences": [
    "Background 동작 처리",
    "Connection-oriented 방식을 사용하는 PoC 의 경우 application 이 background 로 전활될 경우 필요하다면 연결을 끊어주어야 합니다.",
    "NUGU 회원 연동 방식의 PoC 에서 OAuth token 발급 결과 scope 에 “device:S.I.D” 가 포함된 경우에만 connection-oriented 방식을 사용합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/background",
  "order": 187,
  "indexes": [
    {
  "title": "Background 동작 처리",
  "hash": "",
  "sentences": [
    "Background 동작 처리",
    "Connection-oriented 방식을 사용하는 PoC 의 경우 application 이 background 로 전활될 경우 필요하다면 연결을 끊어주어야 합니다.",
    "NUGU 회원 연동 방식의 PoC 에서 OAuth token 발급 결과 scope 에 “device:S.I.D” 가 포함된 경우에만 connection-oriented 방식을 사용합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/battery",
  "order": 164,
  "indexes": [
    {
  "title": "Battery",
  "hash": "",
  "sentences": [
    "Battery",
    "디바이스 배터리 정보를 Play 로 전달하기 위한 규격"
  ]
},
    {
  "title": "Battery > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.1 입니다.",
    "1.0 | 2020.02.25 | 규격 추가",
    "1.1 | 2020.04.29 | Context 에 approximateLevel 필드 추가"
  ]
},
    {
  "title": "Battery > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Battery > BatteryAgent 사용",
  "hash": "#batteryagent-사용",
  "sentences": [
    "BatteryAgent 사용",
    "Battery interface 규격에 따른 디바이스의 정보 전달은 BatteryAgent 가 처리합니다.",
    "Linux 는 BatteryAgent 를 지원하지 않습니다.",
    "Android",
    "NuguAndroidClient instance 를 통해 BatteryAgent instance 에 접근할 수 있습니다.",
    "val batteryAgent = nuguAndroidClient.getAgent(DefaultBatteryAgent.NAMESPACE)",
    "NuguAndroidClient 에 배터리 정보을 전달를 위한 기본 BatteryStatusProvider 구현이 포함되어 있습니다.",
    "BatteryStatusProvider 을 직접 구현하려면 NuguAndroidClient 생성시 추가합니다.",
    "class MyBatteryStatusProvider: BatteryStatusProvider {\n    ...\n}\nNuguAndroidClient.Builder(...)\n    .enableBattery(MyBatteryStatusProvider())"
  ]
},
    {
  "title": "Battery > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "디바이스 배터리 정보를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android",
    "BatteryStatusProvider 를 구현합니다.",
    "class MyBatteryStatusProvider: BatteryStatusProvider {\n    override fun getBatteryLevel(): Int {\n        ...\n    }\n\n    override fun isCharging(): Boolean? {\n        ...\n    }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/before-start",
  "order": 13,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz-1",
  "order": 127,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api",
  "order": 119,
  "indexes": [
    {
  "title": "Biz API",
  "hash": "",
  "sentences": [
    "Biz API"
  ]
},
    {
  "title": "Biz API > 1.Biz API 기능 소개",
  "hash": "#1biz-api-기능-소개",
  "sentences": [
    "1.Biz API 기능 소개",
    "정식판에서 제공하는 Biz 전용디바이스, Biz 사용자를 위한 API입니다. 다음과 같은 기능이 있습니다.",
    "Biz 사용자 API",
    "BIZ 전용 디바이스 API",
    "API 발송 (Announcement)"
  ]
},
    {
  "title": "Biz API > 2.Biz API 사용 권한",
  "hash": "#2biz-api-사용-권한",
  "sentences": [
    "2.Biz API 사용 권한",
    "Biz API는 제휴를 통한 정식판 권한 사용자에게 제공되며, API의 사용을 위해 발급받은 “퍼블리셔 토큰 (Publisher-Token) “이 필요합니다. 퍼블리셔 토큰은 정식판 권한 퍼블리셔의 “Biz Kit 기본 정보”에서 확인 가능합니다."
  ]
},
    {
  "title": "Biz API > 3.표준응답코드",
  "hash": "#3표준응답코드",
  "sentences": [
    "3.표준응답코드",
    "200 | 조회/수정 시 정상적인 응답",
    "201 | 생성 시 정상적인 응답",
    "204 | 삭제 시 정상적인 응답",
    "400 | 잘못된 요청에 의한 응답값",
    "403 | 퍼블리셔 API Token이 유효하지 않거나, 유효하지 않은 자원에 접근할 경우 리턴",
    "415 | 지원하지 않는 컨텐츠(미디어) 오류",
    "500 | 기타 서버 오류"
  ]
},
    {
  "title": "Biz API > 4.오류 : 400 응답시",
  "hash": "#4오류--400-응답시",
  "sentences": [
    "4.오류 : 400 응답시",
    "성공응답, 400응답을 제외한 나머지의 Http Status 응답값은 body를 가지고 있지 않는다."
  ]
},
    {
  "title": "Biz API > 4.1 body",
  "hash": "#41-body",
  "sentences": [
    "4.1 body",
    "{\n  \"errorCode\": \"XXX\"\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/manage-enrolled-user/biz-nugu-app",
  "order": 118,
  "indexes": [
    {
  "title": "Biz 사용자 설정 (NUGU APP)",
  "hash": "",
  "sentences": [
    "Biz 사용자 설정 (NUGU APP)"
  ]
},
    {
  "title": "Biz 사용자 설정 (NUGU APP) > 1. Biz 사용자 설정",
  "hash": "#1-biz-사용자-설정",
  "sentences": [
    "1. Biz 사용자 설정",
    "초대받아 등록된 Biz 사용자는, NUGU APP의 Biz 사용자 설정에서 초대 시 등록했던 정보를 수정 하거나, 사용 철회를 할 수 있습니다.",
    "NUGU APP 설정 > 사용자 설정 > Biz 사용자 설정",
    "NUGU APP의 Biz 사용자 설정 메뉴는, 초대 받아 등록되어 있는 Biz Service나 Play가 존재하는 경우만 노출됩니다."
  ]
},
    {
  "title": "Biz 사용자 설정 (NUGU APP) > 2. Biz 사용자 설정 (체험판)",
  "hash": "#2-biz-사용자-설정-체험판",
  "sentences": [
    "2. Biz 사용자 설정 (체험판)",
    "체험판에서는 Private Play 단위로 초대하여, 해당 Private Play에 대한 사용권한을 사용자에게 부여할 수 있습니다. 초대 받아 등록된 Biz 사용자는, NUGU APP의 Biz 사용자 설정 메뉴에서 Private Play 리스트의 확인과 사용 여부를 변경 할 수 있습니다.",
    "Biz 사용자 설정에 진입하면, 해당 유저가 TID 인증을 통해 수락했던 Private Play 목록이 표시됩니다.",
    "초대 수락했던 Private Play에 대한 사용 동의 철회가 가능합니다. 동의 철회 즉시, 해당 Play를 사용할 수 없습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/biz-api/api-enrolleduser/biz",
  "order": 121,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/bluetooth",
  "order": 161,
  "indexes": [
    {
  "title": "Bluetooth",
  "hash": "",
  "sentences": [
    "Bluetooth",
    "디바이스의 블루투스를 제어하기 위한 규격"
  ]
},
    {
  "title": "Bluetooth > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.1 입니다.",
    "1.0 | 2020.03.03 | 규격 추가",
    "1.1 | 2020.06.22 | Context 의 device 에 profile 필드 추가"
  ]
},
    {
  "title": "Bluetooth > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Bluetooth > BluetoothAgent 사용",
  "hash": "#bluetoothagent-사용",
  "sentences": [
    "BluetoothAgent 사용",
    "Bluetooth interface 규격에 따른 디바이스의 동작 제어는 BluetoothAgent 가 처리합니다.",
    "iOS/Linux 는 BluetoothAgent 를 지원하지 않습니다.",
    "Android",
    "NuguAndroidClient instance 를 통해 BluetoothAgent instance 에 접근할 수 있습니다.",
    "val bluetoothAgent = nuguAndroidClient.bluetoothAgent",
    "NuguAndroidClient 생성시 BluetoothProvider 을 추가합니다.",
    "class MyBluetoothProvider: BluetoothProvider {\n    ...\n}\nNuguAndroidClient.Builder(...)\n    .enableBluetooth(MyBluetoothProvider())"
  ]
},
    {
  "title": "Bluetooth > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "디바이스의 블루투스 상태를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android reference",
    "Android",
    "BluetoothProvider 를 구현합니다.",
    "class MyBluetoothProvider: BluetoothProvider {\n    override fun device() : BluetoothHost? {\n        ...\n    }\n\n    override fun activeDevice() : BluetoothDevice? {\n        ...\n    }\n\n    ...\n}"
  ]
},
    {
  "title": "Bluetooth > 블루투스 기기 제어",
  "hash": "#블루투스-기기-제어",
  "sentences": [
    "블루투스 기기 제어",
    "디바이스의 블루투스 기기 제어가",
    "StartDiscoverableMode",
    "/",
    "FinishDiscoverableMode",
    "directive 로 요청될 수 있습니다.",
    "디바이스와 연결된 블루투스 기기의 음원 재생이",
    "Play",
    "/",
    "Stop",
    "/",
    "Pause",
    "/",
    "Next",
    "/",
    "Previous",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "제어 기능을 실행하려면 BluetoothAgentInterface.Listener 를 추가합니다.",
    "val listener = object: BluetoothAgentInterface.Listener {\n    fun onDiscoverableStart(durationInSeconds: Long = 0) : DiscoverableStartResult {\n        ...\n    }\n\n    fun onDiscoverableFinish() : Boolean {\n        ...\n    }\n\n    fun onAVRCPCommand(command: AVRCPCommand) {\n        ...\n    }\n}\nbluetoothAgent.setListener(listener)"
  ]
},
    {
  "title": "Bluetooth > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Bluetooth\": {\n    \"version\": \"1.0\",\n    \"device\": {\n      \"name\": \"{{STRING}}\",\n      \"status\": \"{{STRING}}\",\n      \"profiles\": [\n        {\n          \"name\": \"{{STRING}}\",\n          \"enabled\": \"{{STRING}}\"\n        }\n      ]\n    },\n    \"activeDevice\": {\n      \"id\": \"{{STRING}}\",\n      \"name\": \"{{STRING}}\",\n      \"streaming\": \"{{STRING}}\"\n    }\n  }\n}",
    "device | object | Y | 디바이스의 블루투스 정보",
    "device.name | string | Y | TTS로 읽어줄 때 사용가능한 필드예: NUGU_123456",
    "device.status | string | Y | ON / OFF",
    "device.profile | list | N | Pairing된 bluetooth device가 있을 경우 지원하는 profile의 목록 해당 목록은 지원하는 profile이 있을 경우 명시됨",
    "device.profile.name | string | N | Pairing된 bluetooth device가 있을 경우 해당 device의 지원 profile의 이름을 나타냄아래는 현재 확인된 profile list이며, 해당 device에서 사용하는 profile은 추가될 수 있음- HSP : Headset Profile(전화 수발신을 위한 profile)- A2DP : Advanced Audio Distribution Profile(오디오 재생 profile)- PBAP : Phone Book Access Profile(Pairing된 device의 연락처를 수집할 수 있는 profile)- MAP : Message Access Profile(문자 수발신을 위한 profile)- PAN : Personal Area Networking(블루투스 테더링 profile) Profile 이름은 bluetooth.com에 명시된 profile의 약자임",
    "device.profile.enabled | string | N | Pairing된 bluetooth device가 있을 경우 해당 device의 지원 profile의 사용 여부를 나타냄 (TRUE/FALSE)",
    "activeDevice | object | N | 연결된 블루투스 기기 정보",
    "activeDevice.id | string | N | ID(pairedDevices 목록 중 하나이어야 함)",
    "activeDevice.name | string | N | -",
    "activeDevice.streaming | string | Y | streaming 상태 (INACTIVE/ACTIVE/PAUSED/UNUSABLE)"
  ]
},
    {
  "title": "Bluetooth > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive"
  ]
},
    {
  "title": "Bluetooth > StartDiscoverableMode",
  "hash": "#startdiscoverablemode",
  "sentences": [
    "StartDiscoverableMode",
    "Discoverable mode 활성화 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"StartDiscoverableMode\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"durationInSeconds\": \"{{LONG}}\"\n  }\n}",
    "durationInSeconds | long | N | Discoverable mode 를 지속할 시간(필드가 없는 경우 상시 모드)"
  ]
},
    {
  "title": "Bluetooth > FinishDiscoverableMode",
  "hash": "#finishdiscoverablemode",
  "sentences": [
    "FinishDiscoverableMode",
    "Discoverable mode 비활성화 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"FinishDiscoverableMode\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > Play",
  "hash": "#play",
  "sentences": [
    "Play",
    "연결된 블루투스 기기의 음원 재생 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"Play\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > Stop",
  "hash": "#stop",
  "sentences": [
    "Stop",
    "연결된 블루투스 기기의 음원 재생 중지 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"Play\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > Pause",
  "hash": "#pause",
  "sentences": [
    "Pause",
    "연결된 블루투스 기기의 음원 일시정지 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"Pause\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > Next",
  "hash": "#next",
  "sentences": [
    "Next",
    "연결된 블루투스 기기의 다음 음원 재생 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"Next\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > Previous",
  "hash": "#previous",
  "sentences": [
    "Previous",
    "연결된 블루투스 기기의 이전 음원 재생 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"Previous\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > Event",
  "hash": "#event",
  "sentences": [
    "Event"
  ]
},
    {
  "title": "Bluetooth > StartDiscoverableModeSucceeded",
  "hash": "#startdiscoverablemodesucceeded",
  "sentences": [
    "StartDiscoverableModeSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"StartDiscoverableModeSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"hasPairedDevices\": \"{{BOOLEAN}}\"\n  }\n}",
    "hasPairedDevices | boolean | Y | paired device 유무"
  ]
},
    {
  "title": "Bluetooth > StartDiscoverableModeFailed",
  "hash": "#startdiscoverablemodefailed",
  "sentences": [
    "StartDiscoverableModeFailed",
    "Discoverable mode 진입 실패",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"StartDiscoverableModeFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"hasPairedDevices\": \"{{BOOLEAN}}\"\n  }\n}",
    "hasPairedDevices | boolean | Y | paired device 유무"
  ]
},
    {
  "title": "Bluetooth > FinishDiscoverableModeSucceeded",
  "hash": "#finishdiscoverablemodesucceeded",
  "sentences": [
    "FinishDiscoverableModeSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"FinishDiscoverableModeSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > FinishDiscoverableModeFailed",
  "hash": "#finishdiscoverablemodefailed",
  "sentences": [
    "FinishDiscoverableModeFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"FinishDiscoverableModeFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > ConnectSucceeded",
  "hash": "#connectsucceeded",
  "sentences": [
    "ConnectSucceeded",
    "paired 이력에서 디바이스 연결이 성공 했을 때 또는 source(스마트폰 등)에서 직접 연결 연결 성공 했을 때 발생",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"ConnectSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > ConnectFailed",
  "hash": "#connectfailed",
  "sentences": [
    "ConnectFailed",
    "paired 이력에서 디바이스 연결이 실패 했을 때 발생",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"ConnectFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > DisconnectSucceeded",
  "hash": "#disconnectsucceeded",
  "sentences": [
    "DisconnectSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"DisconnectSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > DisconnectFailed",
  "hash": "#disconnectfailed",
  "sentences": [
    "DisconnectFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"DisconnectFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > MediaControlPlaySucceeded",
  "hash": "#mediacontrolplaysucceeded",
  "sentences": [
    "MediaControlPlaySucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"MediaControlPlaySucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > MediaControlPlayFailed",
  "hash": "#mediacontrolplayfailed",
  "sentences": [
    "MediaControlPlayFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"MediaControlPlayFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > MediaControlStopSucceeded",
  "hash": "#mediacontrolstopsucceeded",
  "sentences": [
    "MediaControlStopSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"MediaControlStopSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > MediaControlStopFailed",
  "hash": "#mediacontrolstopfailed",
  "sentences": [
    "MediaControlStopFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"MediaControlStopFaile\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > MediaControlPauseSucceeded",
  "hash": "#mediacontrolpausesucceeded",
  "sentences": [
    "MediaControlPauseSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"MediaControlPauseSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > MediaControlPauseFailed",
  "hash": "#mediacontrolpausefailed",
  "sentences": [
    "MediaControlPauseFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"MediaControlPauseFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > MediaControlNextSucceeded",
  "hash": "#mediacontrolnextsucceeded",
  "sentences": [
    "MediaControlNextSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"MediaControlNextSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > MediaControlNextFailed",
  "hash": "#mediacontrolnextfailed",
  "sentences": [
    "MediaControlNextFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"MediaControlNextFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Bluetooth > MediaControlPreviousSucceeded",
  "hash": "#mediacontrolprevioussucceeded",
  "sentences": [
    "MediaControlPreviousSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Bluetooth\",\n    \"name\": \"MediaControlPreviousSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/sdk-design-guide/booting",
  "order": 203,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/brightnesscontrol-interface",
  "order": 83,
  "indexes": [
    {
  "title": "BrightnessControl Interface",
  "hash": "",
  "sentences": [
    "BrightnessControl Interface",
    "NUGU 스마트홈 BrightnessControl Capability Interface는 NUGU 스마트홈에 등록된 SmartHomeDevice의 밝기제어방식에 대한 설명입니다. 스마트홈 기기의 밝기는 1부터 100단계로 제어할 수 있습니다."
  ]
},
    {
  "title": "BrightnessControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "BrightnessControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "BrightnessControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"123456\",\n      \"deviceTypeCode\": \"LIGHT\",\n      \"friendlyNameSuggestion\": \"거실\",\n      \"deviceTypeName\": \"조명\",\n      \"deviceModelName\": \"example_device_model_name\",\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"supportedCapabilities\": {\n        \"powerControl\": {},\n        \"colorControl\": {\n          \"supportedColorTypes\": [\n            \"BLUE\",\n            \"GREEN\",\n            \"CYAN\",\n            \"MINT\",\n            \"SKYBLUE\",\n            \"PURPLE\",\n            \"LAVENDER\",\n            \"COOL_WHITE\",\n            \"SALMON\",\n            \"GOLD\",\n            \"RED\",\n            \"MAGENTA\",\n            \"CRIMSON\",\n            \"WARM_WHITE\",\n            \"ORANGE\",\n            \"SOFTWHITE\",\n            \"PINK\",\n            \"WHITE\",\n            \"DAY_LIGHT\",\n            \"YELLOW\",\n            \"TURQUOISE\",\n            \"LIGHT_PURPLE\"\n          ] // 지원 가능한 ColorType 타입 참고.\n        },\n        \"brightnessControl\": {} // BrightnessControl 을 지원하려면 이 속성이 supportedCapabilities 에 포함되어 있어야 합니다.\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "SmarHomeDevice Attribute Parameters",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "BrightnessControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU SmartHome BrightnessControl Capability는 SmartHomeDevice의 밝기를 제어하는 SetBrightness, IncreaseBrightness, DecreaseBrightness, SetBrightnessMax, SetBrightnessMin 등의 Directive를 지원합니다."
  ]
},
    {
  "title": "BrightnessControl Interface > SetBrightness",
  "hash": "#setbrightness",
  "sentences": [
    "SetBrightness",
    "Directive 정보",
    "SmartHomeDevice의 밝기를 사용자가 발화한 특정 밝기로 설정한다.",
    "Capability : BrightnessControl",
    "Directive : SetBrightness",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 밝기 25로 설정해줘.",
    "아리아, {FriendlyName} 밝기 30%로 설정해줘.",
    "아리아, {DeviceType} 밝기 19로 설정해줘."
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/BrightnessControl/directives/SetBrightness)",
    "{\n  \"version\": 1,\n  \"requestId\": \"201909301991140f5a1e97441fa76a699284bc6035\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"BrightnessControl\",\n      \"smartHomeDirective\": \"SetBrightness\",\n      \"brightnessLevel\": 30\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"deviceModelName\": \"example_device_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"colorControl\": {},\n          \"brightnessControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "SetBrightness Directive Request parameter details",
    "brightnessLevel | 사용자가 SmartHomeDevice에 설정하고자 하는 밝기의 발화 정보입니다.1부터 100까지 설정할 수 있습니다. | integer(1~100)"
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"201909301991140f5a1e97441fa76a699284bc6035\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"deviceModelName\": \"example_device_model_name\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"brightnessLevel\": 1\n      }\n    }\n  ]\n}",
    "SetBrightness Directive Response parameter details",
    "brightnessLevel | SmartHomeDevice를 설정한 이후의 밝기정보입니다.제어를 마친 이후의 밝기를 기준으로 응답해야 합니다. | integer(1~100)"
  ]
},
    {
  "title": "BrightnessControl Interface > IncreaseBrightness",
  "hash": "#increasebrightness",
  "sentences": [
    "IncreaseBrightness",
    "Directive 정보",
    "SmartHomeDevice의 밝기단계를 올린다.",
    "Capability : BrightnessControl",
    "Directive : IncreaseBrightness",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 밝기 올려줘.",
    "아리아, {FriendlyName} 밝기 3 올려서 설정해줘.",
    "아리아, {DeviceType} 밝기 10단계 올려줘."
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/BrightnessControl/directives/IncreaseBrightness)",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019093019f78107f1a36147688c699703f5373a56\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"BrightnessControl\",\n      \"smartHomeDirective\": \"IncreaseBrightness\",\n      \"parameters\": {\n        \"brightnessDelta\": 3\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"deviceModelName\": \"example_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"colorControl\": {},\n          \"brightnessControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\",\n      \"userIdentifier\": \"example_\"\n    }\n  }\n}",
    "IncreaseTemperature Directive request parameter details",
    "brightnessDelta | 설정 밝기를 몇 단계 올릴지에 대한 사용자 발화 정보입니다.해당 정보가 없을 경우 1단계를 올리도록 설정합니다. | integer(1~100)"
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019093019f78107f1a36147688c699703f5373a56\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"brightnessLevel\": 6\n      }\n    }\n  ]\n}",
    "IncreaseBrightness Directive response parameter details",
    "brightnessLevel | SmartHomeDevice의 밝기를 조절한 이후의 설정 밝기입니다.제어를 마친 이후의 밝기를 기준으로 응답해야 합니다. | integer(1~100)"
  ]
},
    {
  "title": "BrightnessControl Interface > DecreaseBrightness",
  "hash": "#decreasebrightness",
  "sentences": [
    "DecreaseBrightness",
    "Directive 정보",
    "SmartHomeDevice의 밝기단계를 내린다.",
    "Capability : BrightnessLevel",
    "Directive : DecreaseBrightness",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 밝기 내려줘.",
    "아리아, {FriendlyName} 밝기 3 내려서 설정해줘.",
    "아리아, {DeviceType} 밝기 10단계 내려줘."
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Request",
  "hash": "#sample-request-2",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/BrightnessControl/directives/DecreaseBrightness)",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019093019f78107f1a36147688c699703f5373a56\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"BrightnessControl\",\n      \"smartHomeDirective\": \"DecreaseBrightness\",\n      \"parameters\": {\n        \"brightnessDelta\": 3\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"deviceModelName\": \"example_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"colorControl\": {},\n          \"brightnessControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "DecreseBrightness Directive request parameter details",
    "brightnessDelta | 설정 밝기를 몇 단계 내릴지에 대한 사용자 발화 정보입니다.해당 정보가 없을 경우 1단계를 내리도록 설정합니다. | integer(1~100)"
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Response",
  "hash": "#sample-response-2",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019093019f78107f1a36147688c699703f5373a56\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"brightnessLevel\": 1\n      }\n    }\n  ]\n}",
    "DecreaseBrightness Directive response parameter details",
    "brightnessLevel | SmartHomeDevice의 밝기를 조절한 이후의 설정 밝기입니다.제어를 마친 이후의 밝기를 기준으로 응답해야 합니다. | integer(1~100)"
  ]
},
    {
  "title": "BrightnessControl Interface > SetBrightnessMax",
  "hash": "#setbrightnessmax",
  "sentences": [
    "SetBrightnessMax",
    "Directive 정보",
    "SmartHomeDevice의 밝기를 최고 단계로 설정한다.",
    "Capability : BrightnessControl",
    "Directive : SetBrightnessMax",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 밝기 최고로 설정해줘.",
    "아리아, {FriendlyName} 가장 밝게 해줘",
    "아리아, {DeviceType} 설정 밝기 최대로 해줘."
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Request",
  "hash": "#sample-request-3",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/BrightnessControl/directives/SetBrightnessMax)",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019093019f78107f1a36147688c699703f5373a56\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"BrightnessControl\",\n      \"smartHomeDirective\": \"SetBrightnessMax\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"deviceModelName\": \"example_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"colorControl\": {},\n          \"brightnessControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Response",
  "hash": "#sample-response-3",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019093019f78107f1a36147688c699703f5373a56\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"brightnessLevel\": 100\n      }\n    }\n  ]\n}",
    "SetBrightnessMax Directive Response parameter details",
    "brightnessLevel | SmartHomeDevice의 밝기를 조절한 이후의 설정 밝기입니다.제어를 마친 이후의 밝기를 기준으로 응답해야 합니다. | integer(100)"
  ]
},
    {
  "title": "BrightnessControl Interface > SetBrightnessMin",
  "hash": "#setbrightnessmin",
  "sentences": [
    "SetBrightnessMin",
    "Directive 정보",
    "SmartHomeDevice의 밝기를 최저 단계로 설정한다.",
    "Capability : BrightnessControl",
    "Directive : SetBrightnessMin",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 밝기 최저로 설정해줘.",
    "아리아, {FriendlyName} 가장 어둡게 해줘",
    "아리아, {DeviceType} 설정 밝기 최하 단계로 해줘."
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Request",
  "hash": "#sample-request-4",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/BrightnessControl/directives/SetBrightnessMin)",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019093019f78107f1a36147688c699703f5373a56\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"BrightnessControl\",\n      \"smartHomeDirective\": \"SetBrightnessMin\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"deviceModelName\": \"example_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"colorControl\": {},\n          \"brightnessControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "BrightnessControl Interface > Sample Response",
  "hash": "#sample-response-4",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019093019f78107f1a36147688c699703f5373a56\",\n  \"data\": [\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      },\n      \"properties\": {\n        \"brightnessLevel\": 1\n      }\n    }\n  ]\n}",
    "SetBrightnessMin Directive Response parameter details",
    "brightnessLevel | SmartHomeDevice의 밝기를 조절한 이후의 설정 밝기입니다.제어를 마친 이후의 밝기를 기준으로 응답해야 합니다. | integer"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/built-in-actions",
  "order": 23,
  "indexes": [
    {
  "title": "Built-in Actions",
  "hash": "",
  "sentences": [
    "Built-in Actions",
    "Play Builder의 사용자가 Play를 만들면서 생성한 Action을 Custom Action이라고 하며, 꼭 만들어야 하거나 만들기를 권장하는 Action을 미리 생성하여 Built-in Action으로 제공하고 있습니다.",
    "모든 Play에서 항상 정의해야 하는 Action 4개는 Play를 만들 때 자동으로 생성됩니다.",
    "Built-in Action은 다음과 같습니다.",
    "이 Action들은 Play를 처음 만들 때 입력하는 3개의 응답을 통해 생성됩니다.",
    "위 액션들을 어떻게 활용하는지 좀 더 상세히 알아보도록 하겠습니다."
  ]
},
    {
  "title": "Built-in Actions > NUGU.ACTION.welcome",
  "hash": "#nuguactionwelcome",
  "sentences": [
    "NUGU.ACTION.welcome",
    "(1) 기기 대기(IDLE) 상태에서 ‘아리아 XXX 시작’과 같이 Play 호출이름(Invocation name)과 NUGU.INTENT.open을 함께 발화하거나,",
    "(2) 기기 대기(IDLE) 상태에서 ‘아리아 XXX에서 ~~ 해줘’ 와 같이 Play 호출이름과 해당 Play 내의 Custom Intent를 함께 발화하여 Play로 진입하게 되었을 때 동작하는 Action입니다.",
    "각 상황별(Case)로 응답(prompt)이 다르며, Action 내에서 각각 정의할 수 있습니다.",
    "(1)의 경우에는 ‘Invocation name만 발화한 경우’에 해당하는 Prompt가 발화되며, Prompt가 발화된 이후 세션 대기 상태로 넘어가며, 이러한 Prompt를 ‘대기 Prompt’라고 합니다.",
    "(2)의 경우에는 ‘Invocation name과 Intent를 함께 발화한 경우’에 해당하는 Prompt가 응답의 앞에 붙어서 발화됩니다. 이러한 Prompt를 ‘연속 Prompt’라고 합니다."
  ]
},
    {
  "title": "Built-in Actions > NUGU.ACTION.exit",
  "hash": "#nuguactionexit",
  "sentences": [
    "NUGU.ACTION.exit",
    "사용자가 Play의 세션 안에서 ‘그만’, ‘멈춰’ 등 NUGU.INTENT.stop에 해당하는 발화를 한 경우에 동작합니다. Prompt가 발화된 이후, 세션이 종료되고 IDLE 상태로 돌아갑니다. 이러한 Prompt를 ‘종료 Prompt’라고 합니다."
  ]
},
    {
  "title": "Built-in Actions > NUGU.ACTION.fallback",
  "hash": "#nuguactionfallback-",
  "sentences": [
    "NUGU.ACTION.fallback",
    "사용자가 Play 세션 내에서 발화를 했지만 처리할 Intent가 없는 경우에 동작합니다.",
    "처리할 Intent가 없는 상황 즉, Fallback 상황은 종료 유형과 대기 유형을 혼합하여 Prompt를 구성하는 복합 유형입니다.",
    "가장 처음 입력하는 Prompt는 ‘종료 Prompt’가 되며, 이후에 입력하는 것은 ‘대기 Prompt’가 됩니다.",
    "즉, 마지막 발화부터 입력하는 스택(Stack) 구조이며, LIFO(Last In First Out; 후입선출)로 동작합니다.",
    "prompt 대신 Common Action을 선택하여, 적절한 Directive를 사용하거나, Backend Proxy와 연계한 액션으로 처리도 가능합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-user-utterance-model/built-in-intents",
  "order": 20,
  "indexes": [
    {
  "title": "Built-in Intent",
  "hash": "",
  "sentences": [
    "Built-in Intent",
    "Built-in Intent는 자주 사용될 것으로 예상되거나 꼭 정의해야 하는 발화들을 미리 훈련시켜 제공하기에 별도로 학습을 위한 발화문을 정의할 필요가 없는 Intent 입니다. NUGU플랫폼에서 Built-in Intent의 인식 및 자연어 처리 성능을 향상시킬 때 함께 성능이 향상됩니다.",
    "Play의 설정에 맞게 제공되는 Built-in Intent들을 충분히 활용하여 Play를 정의한다면, 사용자들이 동작할 것이라고 기대하는 발화들을 잘 처리할 수 있어, Play를 쉽게 사용할 수 있습니다.",
    "Play를 최초 생성하는 시점에 2개의 Built-in Intent가 자동으로 추가됩니다. 향후 선택한 Capability Interface에 따라 Intent가 더 추가됩니다. 최초에 추가되는 2개의 Intent는 모든 Play에서 공통으로 사용되는 Intent로 Universal Intent라고 부르며, Capability Interface에 의해 추가되는 Intent를 Control Intent라고 부릅니다.",
    "Universal, Control Intent은 하나의 유형일 뿐이며, 사용자가 정의한 Intent와 근본적으로 같은 Intent입니다. NUGU에서 지원하는 Built-in Intent는 향후 늘어나거나 축소될 수 있습니다."
  ]
},
    {
  "title": "Built-in Intent > Universal Intent",
  "hash": "#universal-intent",
  "sentences": [
    "Universal Intent",
    "Play 생성과 함께 추가되는 Universal Intent는 다음과 같습니다.",
    "Universal Intent | NUGU.INTENT.stop | 그만, 종료, 멈춰, 스톱, 정지, 중지 | 필수",
    "  | NUGU.INTENT.rewind | 다시, 다시 틀어줘, 다시 들려줘, 다시 시작, 처음으로, 처음부터 | 필수",
    "Play를 빌드하기 위해서는 Universal Intent을 처리할 Action이 반드시 존재해야 합니다. Universal Intent를 trigger로 설정한 Action을 생성하지 않은 경우, Built-in Action이 자동 추가되며 Play를 생성할 때 입력한 기본응답을 통해 자동 정의됩니다."
  ]
},
    {
  "title": "Built-in Intent > Control Intent",
  "hash": "#control-intent",
  "sentences": [
    "Control Intent",
    "Control Intent는 Capability Interface를 사용할 때 사용하는 Intent입니다.",
    "Capability Interface 사용 설정에 대한 자세한 내용은 AudioPlayer Interface 지원하는 Play 만들기를 참고하세요.",
    "Capability Interface는 현재 AudioPlayer에서 사용하며, 이 Capability Interface를 선택하여 추가할 수 있는 Control Intent는 다음과 같습니다.",
    "Control Intent(AudioPlayer) | NUGU.INTENT.stop | 그만, 종료, 멈춰, 스톱, 정지, 중지 | 필수",
    "NUGU.INTENT.play | 틀어줘, 들려줘, 재생, 플레이 | 필수",
    "NUGU.INTENT.pause | 일시정지, 잠깐 멈춰 | 필수",
    "NUGU.INTENT.resume | 계속 틀어줘, 이어서 틀어줘, 일시정지 해제, 일시정지 풀어줘 | 필수",
    "NUGU.INTENT.next | 다음, 넘겨, 넥스트, 다음 것 |  ",
    "NUGU.INTENT.previous | 이전, 이전 것 |  ",
    "NUGU.INTENT.forward | 앞으로 |  ",
    "NUGU.INTENT.backward | 뒤로 |  ",
    "NUGU.INTENT.random | 셔플, 랜덤, 무작위 |  ",
    "NUGU.INTENT.cancel.random | 셔플해제, 랜덤 해제, 무작위 취소 |  ",
    "NUGU.INTENT.repeat | 반복해줘, 반복, 무한 반복, 계속 반복, 반복 켜줘, 반복해서 들려줘 |  ",
    "NUGU.INTENT.cancel.repeat | 반복 해제, 반복 취소, 반복 종료, 반복 꺼줘, 반복 그만 |  ",
    "NUGU.INTENT.rewind | 다시, 다시 틀어줘, 다시 들려줘, 다시 시작, 처음으로, 처음부터 |  ",
    "NUGU.INTENT.ask.content.info | 이거 뭐야, 뭔지 알려줘 |  ",
    "NUGU.INTENT.another | 다른 것, 이거 말고, 그거 말고, 그거 말고 다른 거, 딴거, 다른거 틀어줘 |  ",
    "이 Control Intent는 Custom Action을 정의할 때 Trigger로 사용할 수 있으며, play, pause, resume은 필수로 Action을 정의해야 합니다.",
    "Universal Intent는 Control Intent에도 속해 있으며 다음과 같은 특성이 있습니다."
  ]
},
    {
  "title": "Built-in Intent > NUGU.INTENT.stop",
  "hash": "#nuguintentstop",
  "sentences": [
    "NUGU.INTENT.stop",
    "NUGU.INTENT.stop은 항상 Play를 종료시킵니다. 따라서 Custom Action으로 다르게 정의하더라도 동작하지 않습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface",
  "order": 149,
  "indexes": [
    {
  "title": "Capability Interface",
  "hash": "",
  "sentences": [
    "Capability Interface"
  ]
},
    {
  "title": "Capability Interface > Capability Interface",
  "hash": "#capability-interface",
  "sentences": [
    "Capability Interface",
    "Capability Interface 는 Play 에서 디바이스의 기능을 제어하기 위한 규격으로 Event, Directive, Context 등으로 구성되어 있으며, Play 에서 제공하려는 기능에 따라 여러개의 Capability Interface 를 조합하여 디바이스로 전달할 수 있습니다."
  ]
},
    {
  "title": "Capability Interface > 공통 파라미터",
  "hash": "#공통-파라미터",
  "sentences": [
    "공통 파라미터",
    "Capability Interface 규격에서 공통적으로 사용되는 파라미터입니다.",
    "namespace: Capability Interface 의 이름입니다.",
    "name: Directive 또는 Event 의 이름입니다.",
    "messageId: 하나의 Directive 또는 Event 를 구분하기 위한 id 입니다.",
    "dialogRequestId: Event 와 Directive 를 mapping 하기 위한 id 입니다. 하나의 요청(Event) 과 응답(Directive) 은 동일한 dialogRequestId 를 가집니다.",
    "playServiceId: Play 의 고유 id 값입니다. Directive 또는 Event 에 포함되어 있습니다.",
    "version: Capability Interface 의 버전입니다."
  ]
},
    {
  "title": "Capability Interface > Capability Agent",
  "hash": "#capability-agent",
  "sentences": [
    "Capability Agent",
    "Capability Interface 의 규격에서 정의하는 기능을 제공하기 위해 Capability Interface 와 1:1 로 매핑되는 Capability Agent 가 구현되어 있습니다.",
    "Capability Agent 에서 미디어 재생과 같은 기능은 직접 실행하지만, UI 구성과 같이 직접 실행할 수 없는 기능을 Application 에 위임합니다."
  ]
},
    {
  "title": "Capability Interface > Event",
  "hash": "#event",
  "sentences": [
    "Event",
    "디바이스에서 서버로 전달되는 JSON 형식의 데이터로 JSON 구조는 각 각의 Capability Interface 에 정의되어 있습니다."
  ]
},
    {
  "title": "Capability Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "서버에서 디바이스로 전달되는 JSON 형식의 데이터로 JSON 구조는 각 각의 Capability Interface 에 정의되어 있습니다.",
    "Event 요청에 대한 응답값으로 1개 이상의 Directive 가 전달됩니다."
  ]
},
    {
  "title": "Capability Interface > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "Capability Agent 의 현재 상태를 의미하는 데이터로 Event 와 함께 서버로 전달됩니다."
  ]
},
    {
  "title": "Capability Interface > 구조",
  "hash": "#구조",
  "sentences": [
    "구조",
    "{\n  \"supportedInterfaces\": {\n    \"{{STRING}}\": {}\n  },\n  \"client\": {\n    \"os\": \"{{STRING}}\",\n    \"wakeupWord\": \"{{STRING}}\",\n    \"playStack\": [\n      \"{{STRING}}\"\n    ]\n  }\n}",
    "supportedIntefacaces | map | Y | Capability interface 의 Context 정보",
    "supportedIntefacaces.key | string | N | Capability interface 의 이름",
    "supportedIntefacaces.value | Object | N | Capability interface 의 Context",
    "client | map | Y | 클라이언트의 컨텍스트 정보",
    "client.os | string | N | Android, iOS, Linux",
    "client.wakeupWord | string | N | 아리아, 팅커벨 클라이언트에 설정된 wakeup word",
    "client.playStack | array of string | N | 클라이언트에서 실행중인 playServiceId 목록"
  ]
},
    {
  "title": "Capability Interface > supportedInterfaces 전송 규칙",
  "hash": "#supportedinterfaces-전송-규칙",
  "sentences": [
    "supportedInterfaces 전송 규칙",
    "ASR.Recognize, Text.TextInput, System.SynchronizeState, Display.ElementSelected event\n    \n      전체 capability interface 의 context",
    "전체 capability interface 의 context",
    "그 외 event\n    \n      해당 capability interface 의 context\n      다른 capability interface 의 context 중 version 만 포함",
    "해당 capability interface 의 context",
    "다른 capability interface 의 context 중 version 만 포함"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/before-start/capability-interface",
  "order": 17,
  "indexes": [
    {
  "title": "Capability interface",
  "hash": "",
  "sentences": [
    "Capability interface",
    "디바이스의 여러 기능을 제어하기 위한 규격을 Capability Interface라 합니다. 응답을 재생하는 기능 외에 오디오 재생, 무드등 제어, 음량 조절 등 다양한 기능을 제어할 수 있습니다.",
    "현재는 디바이스에서 오디오 스트리밍을 통해 음악을 재생하기 위한 AudioPlayer Interface와  NUGU nemo, Btv, T전화 등 Display Device에서 Display template를 사용할 수 있는 Display Interface 지원됩니다. Play를 생성하는 시점에 Play에서 지원하고자 하는 Capability Interface를 선택하면 사용할 수 있습니다.",
    "각 Capability Interface는 다음의 세 요소로 구성되어 있습니다."
  ]
},
    {
  "title": "Capability interface > Built-in Intent",
  "hash": "#built-in-intent",
  "sentences": [
    "Built-in Intent",
    "기능을 제어하기 위해 기본으로 제공하는 Intent입니다. 사용자가 직접 정의하지 않아도 사용할 수 있습니다."
  ]
},
    {
  "title": "Capability interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "디바이스의 기능을 제어하기 위해 Play에서 디바이스로 전달하는 명령어입니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/use-backend-proxy/capability-interfaces",
  "order": 46,
  "indexes": [
    {
  "title": "Capability Interfaces",
  "hash": "",
  "sentences": [
    "Capability Interfaces",
    "Capability Interface는 디바이스의 기능을 제어하기 위한 규격을 의미합니다. 예를 들어 스트리밍을 통한 음악을 재생하는 Play는 AudioPlayer Interface를 사용하면 필요한 기능을 구현할 수 있습니다.",
    "특정 기능을 위한 명령어들을 같은 이름 공간(namespace) 내에 정의하며, Play가 지원하는 기능에 따라 필요한 Capability Interface를 포함하여 구현할 수 있습니다. Capability Interface는 외부 연동 서버(Backend proxy)에 구현이 되어 있어야 Play에서 활용할 수 있습니다.",
    "Play에서 Capability Interface를 활용하는 방법에 대한 자세한 내용은 AudioPlayer Interface 지원하는 Play 만들기를 참고하세요.",
    "Capability Interface는 다음의 세 요소로 구성되어 있습니다.",
    "Built-in Intent",
    "Built-in Intent는 자주 사용될 것으로 예상되거나 꼭 정의해야 하는 발화들을 미리 훈련시켜 제공하는 Intent입니다.",
    "별도로 학습 문장을 등록하지 않아도 되도록 기본으로 제공되는 Intent이며, Action 정의(기능 정의) 시에 바로 사용할 수 있습니다.",
    "Directive",
    "Play가 디바이스의 특정 기능을 제어하기 위한 명령어입니다.",
    "Event",
    "디바이스에서 특정 기능을 실행시키는 과정에서 디바이스의 상태가 변했을 때 Play로 전송됩니다.",
    "Built-in Intent, Directive, Event는 스피커와 Play 사이에서 다음과 같은 방향으로 전달됩니다."
  ]
},
    {
  "title": "Capability Interfaces > Built-in Intent",
  "hash": "#built-in-intent",
  "sentences": [
    "Built-in Intent",
    "Built-in Intent는 해당 디바이스 기능을 사용자가 발화를 통해 제어하려고 할때 예상되는 발화를 미리 학습시켜둔 Intent입니다. Built-in Intent는 Capability Interface별로 다르며 Built-in Intent를 갖지 않는 Interface가 있을 수 있습니다.",
    "Capability Interface를 선택할 때마다 사용할 수 있는 Built-in Intent들이 확장됩니다.",
    "Built-in Intent에 대한 자세한 내용은 Built-in Intent를 참고하세요."
  ]
},
    {
  "title": "Capability Interfaces > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "Directive는 Action에 정의된 Response로 사용됩니다. Directive를 응답으로 정의한 Action이 Built-in Intent, Custom Intent 등 Trigger로 인해 활성화되면, Play는 Backend proxy에 정의된 Directive를 요청하게 됩니다.",
    "Play는 Backend proxy로부터 Directive를 넘겨받아 디바이스로 전달하게 됩니다. 따라서, Backend proxy에서는 각 Directive를 생성해서 요청이 올 때마다 전달을 해야 합니다.",
    "Directive 구현에 대한 자세한 내용은 은",
    "Backend proxy API Reference",
    "를 참고해 주세요.",
    "Directive가 정의된 Play를 사용하기 위해서 일반적으로 사용자는 “아리아 AA뮤직에서 최신 음악 틀어줘”와 같이 Play의 호출 이름(Invocation name)을 함께 발화해야 합니다.",
    "그러나, 다음의 경우에는 Play의 호출 이름(Invocation name)을 함께 말하지 않아도 자동으로 AudioPlayer를 사용하는 Play로 전달(Routing)됩니다.",
    "Play Directive를 전송하여 오디오가 재생 중인 경우",
    "일시 정지(Pause) 상태인 경우, 일시 정지 시점부터 1시간 이내",
    "오디오가 종료된 후 17초 이내"
  ]
},
    {
  "title": "Capability Interfaces > Event",
  "hash": "#event",
  "sentences": [
    "Event",
    "Event는 디바이스의 기능이 동작하면서 Play가 제어를 하기 위해 알아야 하는 상태 변화가 있을 때마다 전달됩니다.Directive를 사용하기 위해서는 Event에 대한 이해가 필수적이며, Capability Interface별로 전달되는 Event는 다르기 때문에 사용할 Interface별 Event 스펙을 확인해야 합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/chargecontrol-interface",
  "order": 84,
  "indexes": [
    {
  "title": "ChargeControl Interface",
  "hash": "",
  "sentences": [
    "ChargeControl Interface",
    "NUGU스마트홈 ChargeControl Interface는 NUGU스마트홈에 등록된 SmartHomeDevice의 충전관련 기능들에 대한 설명입니다. 충전 기능이 있는 모든 SmartHomeDevice를 지원합니다."
  ]
},
    {
  "title": "ChargeControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "ChargeControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "ChargeControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"id\": \"12345\",\n  \"deviceTypeCode\": \"ROBOT_CLEANER\",\n  \"friendlyNameSuggestion\": \"거실\",\n  \"deviceTypeName\": \"로봇청소기\",\n  \"deviceModelName\": \"example_model_name\",\n  \"customData\": {\n    \"foo\": \"bar\"\n  },\n  \"supportedCapabilities\": {\n    \"powerControl\": {},\n    \"chargeControl\": {} // 이 프로퍼티가 있어야 \"충전시작\" 등 ChargeControl 을 사용하는 발화 지원가능.\n  }\n}",
    "ChargeControl Capability 는 별도의 파라미터를 가지지 않습니다. 그러나 NUGU SmartHome Platform 에게 디바이스가 ChargeControl 을 지원한다는 것을 알리기 위해 충전기능을 지원하는 디바이스는 (e.g. 로봇청소기) supportedCapabilities 로 chargeControl 에 해당하는 빈 객체를 응답에 포함시켜야 합니다.",
    "SmartHomeDevice Attribute Parameters",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "ChargeControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU스마트홈 ChargeControl Capability는 충전을 요청하는 StartCharging과 충전중지를 요청하는 StopCharging, 잔여 배터리량을 조회하는 CheckRemainingBattery Directive를 지원합니다."
  ]
},
    {
  "title": "ChargeControl Interface > StartCharging",
  "hash": "#startcharging",
  "sentences": [
    "StartCharging",
    "Directive 정보",
    "SmartHomeDevice의 충전을 시작한다.",
    "Capability : ChargeControl",
    "Directive : StartCharging",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 충전 시작해줘",
    "아리아, {FriendlyName} 충전해줘",
    "아리아, {DeviceType} 충전 시작."
  ]
},
    {
  "title": "ChargeControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/ChargeControl/directives/StartCharging)",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019093020a1e59d2c95f74908a06c7473f6676783\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"ChargeControl\",\n      \"smartHomeDirective\": \"StartCharging\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"12345\",\n        \"deviceTypeCode\": \"ROBOT_CLEANER\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"로봇청소기\",\n        \"deviceModelName\": \"example_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"chargeControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "ChargeControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019093020a1e59d2c95f74908a06c7473f6676783\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "ChargeControl Interface > StopCharging",
  "hash": "#stopcharging",
  "sentences": [
    "StopCharging",
    "Directive 정보",
    "SmartHomeDevice의 충전을 중단한다.",
    "Capability : ChargeControl",
    "Directive : StopCharging",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 충전 중지해줘",
    "아리아, {FriendlyName} 충전 멈춰줘",
    "아리아, {DeviceType} 충전 그만."
  ]
},
    {
  "title": "ChargeControl Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/ChargeControl/directives/StopCharging)",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019093020a1e59d2c95f74908a06c7473f6676783\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"ChargeControl\",\n      \"smartHomeDirective\": \"StartCharging\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"12345\",\n        \"deviceTypeCode\": \"ROBOT_CLEANER\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"로봇청소기\",\n        \"deviceModelName\": \"example_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"chargeControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "ChargeControl Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019093020a1e59d2c95f74908a06c7473f6676783\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "ChargeControl Interface > CheckRemainingBattery",
  "hash": "#checkremainingbattery",
  "sentences": [
    "CheckRemainingBattery",
    "Directive 정보",
    "SmartHomeDevice의 잔여배터리량을 조회한다.",
    "Capability : ChargeControl",
    "Directive : CheckRemainingBattery",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 잔여 배터리량 조회해줘",
    "아리아, {FriendlyName} 남은 배터리량 알려줘",
    "아리아, {DeviceType} 배터리량 조회"
  ]
},
    {
  "title": "ChargeControl Interface > Sample Request",
  "hash": "#sample-request-2",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/ChargeControl/directives/CheckRemainingBattery)",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019093020a1e59d2c95f74908a06c7473f6676783\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"ChargeControl\",\n      \"smartHomeDirective\": \"CheckRemainingBattery\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"12345\",\n        \"deviceTypeCode\": \"ROBOT_CLEANER\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"로봇청소기\",\n        \"deviceModelName\": \"example_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"chargeControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "ChargeControl Interface > Sample Response",
  "hash": "#sample-response-2",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019093020a1e59d2c95f74908a06c7473f6676783\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"remainingBattery\": \"80\" // 잔여 배터리 량 (단위: 퍼센트(%), 단위 기호 생략.)\n      }\n    }\n  ]\n}",
    "CheckRemainingBattery Directive Response parameter details",
    "remainingBattery | SmartHomdeDevice의 잔여배터리량.%를 기준으로 응답해야 합니다. | integer"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/chips",
  "order": 166,
  "indexes": [
    {
  "title": "Chips",
  "hash": "",
  "sentences": [
    "Chips",
    "보이스 크롬에 노출되는 발화 가이드를 제공하기 위한 규격"
  ]
},
    {
  "title": "Chips > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.2 입니다.",
    "1.0 | 2020.07.02 | 규격 추가",
    "1.1 | 2020.10.26 | Render directive 의 chips 에 token 필드 추가",
    "1.2 | 2021.05.31 | Render directive 의 chips.type 에 NUDGE 추가Render directive 의 target 에 LISTEN, SPEAKING 추가"
  ]
},
    {
  "title": "Chips > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Chips > ChipsAgent 사용",
  "hash": "#chipsagent-사용",
  "sentences": [
    "ChipsAgent 사용",
    "Chips interface 규격에 따른 디바이스의 동작 제어는 ChipsAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 ChipsAgent instance 에 접근할 수 있습니다.",
    "val chipsAgent = nuguAndroidClient.getAgent(ChipsAgent.NAMESPACE)",
    "보이스 크롬 UI 구성을 위해 TTS interface, ASR interface, Chips interface, Session interface 를 병합해주는 DialogUXStateAggregator 를 제공합니다.",
    "NuguClient instance 를 통해 ChipsAgent instance 에 접근할 수 있습니다.",
    "let chipsAgent = nuguClient.chipsAgent",
    "보이스 크롬 UI 구성을 위해 TTS interface, ASR interface, Chips interface, Session interface 를 병합해주는 DisplayAggregatorInterface 를 제공합니다.",
    "NuguClient instance 를 통해 DialogStateAggregator instance 에 접근할 수 있습니다.",
    "let dialogStateAggregator = nuguClient.dialogStateAggregator",
    "CapabilityFactory::makeCapability 함수로 ChipsAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto chips_handler(std::shared_ptr<IChipsHandler>(\n        CapabilityFactory::makeCapability<ChipsAgent, IChipsHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(chips_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "Chips > UI 구성",
  "hash": "#ui-구성",
  "sentences": [
    "UI 구성",
    "보이스 크롬에 노출하기 위한 데이터는 Render directive 에 포함되어 전달됩니다.",
    "Android",
    "iOS",
    "Linux",
    "DialogUXStateAggregatorInterface.Listener 를 추가합니다.",
    "val listener = object: DialogUXStateAggregatorInterface.Listener {\n    override fun onDialogUXStateChanged(newState: DialogUXState, dialogMode: Boolean, chips: RenderDirective.Payload?, sessionActivated: Boolean) {\n        ...\n    }\n}\nnuguAndroidClient.addDialogUXStateListener(listener)",
    "DialogStateDelegate 를 추가합니다.",
    "class MyDialogStateDelegate: DialogStateDelegate {\n    func dialogStateDidChange(_ state: DialogState, isMultiturn: Bool, chips: [ChipsAgentItem.Chip]?, sessionActivated: Bool) {\n        ...\n    }\n}\ndialogStateAggregator.add(delegate: MyDialogStateDelegate())",
    "IChipsListener를 추가합니다.",
    "class ChipsListener : public IChipsListener {\npublic:\n    ...\n\n    void onReceiveRender(ChipsInfo&& chips_info) override\n    {\n        ...\n    }\n};\nauto chips_listener(std::make_shared<IChipsListener>());\nCapabilityFactory::makeCapability<ChipsAgent, IChipsHandler>(chips_listener.get());"
  ]
},
    {
  "title": "Chips > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Chips\": {\n    \"version\": \"1.2\"\n  }\n}"
  ]
},
    {
  "title": "Chips > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/colorcontrol-interface",
  "order": 85,
  "indexes": [
    {
  "title": "ColorControl Interface",
  "hash": "",
  "sentences": [
    "ColorControl Interface",
    "NUGU 스마트홈 ColorControl Capability Interface는 NUGU 스마트홈에 등록된 SmartHomeDevice의 설정된 색 제어방식에 대한 설명입니다. 스마트 조명 등의 색상 변경을 지원합니다."
  ]
},
    {
  "title": "ColorControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "ColorControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "ColorControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"12345\",\n      \"deviceTypeCode\": \"LIGHT\",\n      \"friendlyNameSuggestion\": \"거실\",\n      \"deviceTypeName\": \"조명\",\n      \"deviceModelName\": \"example_device_model_name\",\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"supportedCapabilities\": {\n        \"powerControl\": {},\n        \"colorControl\": {\n          \"supportedColorTypes\": [\n            \"BLUE\",\n            \"GREEN\",\n            \"CYAN\",\n            \"MINT\",\n            \"SKYBLUE\",\n            \"PURPLE\",\n            \"LAVENDER\",\n            \"COOL_WHITE\",\n            \"SALMON\",\n            \"GOLD\",\n            \"RED\",\n            \"MAGENTA\",\n            \"CRIMSON\",\n            \"WARM_WHITE\",\n            \"ORANGE\",\n            \"SOFTWHITE\",\n            \"PINK\",\n            \"WHITE\",\n            \"DAY_LIGHT\",\n            \"YELLOW\",\n            \"TURQUOISE\",\n            \"LIGHT_PURPLE\"\n          ] // 지원 가능한 ColorType 타입 참고.\n        }, // 이 property 를 포함하고 있어야 \"조명 노란색으로 설정해줘\" 와 같은 발화를 지원할 수 있습니다.\n        \"brightnessControl\": {}\n      }\n    }\n  ]\n}",
    "SmartHomeDevice Attribute Parameters",
    "supportedColorTypes | 해당 SmartHomeDevice가 지원하는 ColorType의 명칭입니다.Discovery시의 ColorType은 지원한는 Color의 영문명을 사용하고, 지원하는 ColorTypes는 각 Device별로 Array 형태로 복수개 전달할 수 있습니다.",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "ColorControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU SmartHome ColorControl Capability는 SmartHomeDevice의 색상변경을 제어하는 ChangeColor Directive를 지원합니다."
  ]
},
    {
  "title": "ColorControl Interface > ChangeColor",
  "hash": "#changecolor",
  "sentences": [
    "ChangeColor",
    "Directive 정보",
    "SmartHomeDevice의 색상을 사용자가 발화한 색상으로 설정한다.",
    "Capability : ColorControl",
    "Directive : ChangeColor",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 색상 빨간색으로 설정해줘.",
    "아리아, {FriendlyName} 색깔 파랗게 바꿔줘.",
    "아리아, {DeviceType} 노란색으로 설정해줘."
  ]
},
    {
  "title": "ColorControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/ColorControl/directives/ChangeColor)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190930213631c172b5214d4abfdbeb5804d8d80d\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"ColorControl\",\n      \"smartHomeDirective\": \"ChangeColor\",\n      \"parameters\": {\n        \"colorType\": \"#ffff00\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"12345\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"deviceModelName\": \"example_device_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"colorControl\": {},\n          \"brightnessControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "ChangeColor Directive Request parameter details",
    "colorType | 사용자가 SmartHomeDevice에 설정하고자 하는 색상 정보입니다.RGB값으로 구성됩니다. e.g) 노란색: #ffff00 | string"
  ]
},
    {
  "title": "ColorControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190930213631c172b5214d4abfdbeb5804d8d80d\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"colorType\": \"#ff0000\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "ChangeColor Directive Response parameter details",
    "colorType | SmartHomeDevice를 설정한 이후의 색상정보입니다. 제어를 마친 이후의 색상을 기준으로 응답해야 합니다. | string"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/linux/component",
  "order": 198,
  "indexes": [
    {
  "title": "구성요소",
  "hash": "",
  "sentences": [
    "구성요소"
  ]
},
    {
  "title": "구성요소 > 구성요소 목록",
  "hash": "#구성요소-목록",
  "sentences": [
    "구성요소 목록",
    "NUGU Component (Common)\n    \n      \nNuguClientKit: NUGU 서비스를 쉽게 개발할 수 있도록 도와주는 기능을 제공합니다.\n      \nNuguCapability: Capability를 쉽게 제어할 수 있는 API를 제공합니다.\n      \nNuguCore: NUGU 서비스 개발에 필요한 구성요소들을 제공합니다.",
    "NuguClientKit: NUGU 서비스를 쉽게 개발할 수 있도록 도와주는 기능을 제공합니다.",
    "NuguCapability: Capability를 쉽게 제어할 수 있는 API를 제공합니다.",
    "NuguCore: NUGU 서비스 개발에 필요한 구성요소들을 제공합니다.",
    "NUGU Component (Depends on platform)\n    \n      Plug-in: 디바이스 특성에 맞게 미디어 드라이버를 구현할 수 있는 API를 제공합니다.\n      \ngstreamer: plug-in에서 제공하는 player_driver를 이용해서 gstreamer를 통한 미디어 재생 기능을 제공합니다.\n      \nportaudio: plug-in에서 제공하는 recorder_driver, pcm_driver를 이용해서 portaudio를 통한 음성 데이터 입/출력 기능을 제공합니다.\n      \nopus: plug-in에서 제공하는 decoder_deriver를 이용해서 opus 코덱을 디코딩 합니다.",
    "Plug-in: 디바이스 특성에 맞게 미디어 드라이버를 구현할 수 있는 API를 제공합니다.",
    "gstreamer: plug-in에서 제공하는 player_driver를 이용해서 gstreamer를 통한 미디어 재생 기능을 제공합니다.",
    "portaudio: plug-in에서 제공하는 recorder_driver, pcm_driver를 이용해서 portaudio를 통한 음성 데이터 입/출력 기능을 제공합니다.",
    "opus: plug-in에서 제공하는 decoder_deriver를 이용해서 opus 코덱을 디코딩 합니다.",
    "Vendor Component\n    \n      \nlibnugu-kwd: NUGU의 키워드를 감지하는 기능을 제공합니다.\n      \nlibnugu-epd: 발화의 시작과 끝을 감지하는 기능을 제공합니다.",
    "libnugu-kwd: NUGU의 키워드를 감지하는 기능을 제공합니다.",
    "libnugu-epd: 발화의 시작과 끝을 감지하는 기능을 제공합니다."
  ]
},
    {
  "title": "구성요소 > Github",
  "hash": "#github",
  "sentences": [
    "Github"
  ]
},
    {
  "title": "구성요소 > NUGU",
  "hash": "#nugu",
  "sentences": [
    "NUGU",
    "nugu-linux | https://github.com/nugu-developers/nugu-linux"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/ios/component",
  "order": 176,
  "indexes": [
    {
  "title": "구성요소",
  "hash": "",
  "sentences": [
    "구성요소"
  ]
},
    {
  "title": "구성요소 > 구성요소 목록",
  "hash": "#구성요소-목록",
  "sentences": [
    "구성요소 목록",
    "NUGU SDK for iOS 를 통한 개발을 위해서는 NuguCore, NuguAgents Framework를 필수로 포함해야 합니다.",
    "NUGU Component (Common)\n    \n      \nNuguCore: NUGU 서비스 이용에 필요한 구성요소들의 기본 구현을 제공합니다.\n      \nNuguAgents: NUGU SDK를 구성할 때 필요한 capability agent를 제공합니다.\n      \nNuguUtils : NUGU SDK 내의 공통 기능들을 묶어 사용하고 있습니다.\n      \nJadeMarble: 발화의 시작과 끝을 감지하는 기능을 제공합니다.\n      \nSilverTray: Encoding 된 Data stream 을 재생하기 위한 Player 를 제공합니다.",
    "NuguCore: NUGU 서비스 이용에 필요한 구성요소들의 기본 구현을 제공합니다.",
    "NuguAgents: NUGU SDK를 구성할 때 필요한 capability agent를 제공합니다.",
    "NuguUtils : NUGU SDK 내의 공통 기능들을 묶어 사용하고 있습니다.",
    "JadeMarble: 발화의 시작과 끝을 감지하는 기능을 제공합니다.",
    "SilverTray: Encoding 된 Data stream 을 재생하기 위한 Player 를 제공합니다.",
    "NUGU Component (Depends on platform or user choice)\n    \n      \nNuguClientKit: NUGU 서비스를 쉽게 개발할 수 있도록 도와주는 기능을 제공합니다. (SpeechRecognizerAggregator 포함)\n      \nNuguLoginKit: NUGU 서비스 이용을 위한 OAuth 인증을 도와주는 기능을 제공합니다.\n      \nNuguServiceKit: NUGU 서비스의 Play 설정을 위한 WebView 를 제공합니다.\n      \nNuguUIKit: NUGU 서비스 사용에 필요한 UI Components (VoiceChrome, Button, DisplayWebView 등) 를 제공합니다.\n      \nKeenSense: NUGU의 키워드를 감지하는 기능을 제공합니다.",
    "NuguClientKit: NUGU 서비스를 쉽게 개발할 수 있도록 도와주는 기능을 제공합니다. (SpeechRecognizerAggregator 포함)",
    "NuguLoginKit: NUGU 서비스 이용을 위한 OAuth 인증을 도와주는 기능을 제공합니다.",
    "NuguServiceKit: NUGU 서비스의 Play 설정을 위한 WebView 를 제공합니다.",
    "NuguUIKit: NUGU 서비스 사용에 필요한 UI Components (VoiceChrome, Button, DisplayWebView 등) 를 제공합니다.",
    "KeenSense: NUGU의 키워드를 감지하는 기능을 제공합니다.",
    "Vendor Component\n    \n      \nNattyLog: 디버깅을 위한 로그를 출력을 도와주는 기능을 제공합니다. (iOS Application 또는 Framework에서 직접 참조 및 사용이 가능합니다.)",
    "NattyLog: 디버깅을 위한 로그를 출력을 도와주는 기능을 제공합니다. (iOS Application 또는 Framework에서 직접 참조 및 사용이 가능합니다.)",
    "External Framework\n    \n      \nRxSwift: NUGU SDK는 내부적으로 비동기처리 등을 위해 사용하고 있습니다. (NUGU SDK for iOS의 모든 인터페이스는 RxSwift와 관계없이 제공됩니다.)\n      \nLottie-iOS : NuguUIKit 내부의 애니메이션을 위해 사용하고 있습니다.",
    "RxSwift: NUGU SDK는 내부적으로 비동기처리 등을 위해 사용하고 있습니다. (NUGU SDK for iOS의 모든 인터페이스는 RxSwift와 관계없이 제공됩니다.)",
    "Lottie-iOS : NuguUIKit 내부의 애니메이션을 위해 사용하고 있습니다."
  ]
},
    {
  "title": "구성요소 > Github",
  "hash": "#github",
  "sentences": [
    "Github"
  ]
},
    {
  "title": "구성요소 > NUGU & Vendor Components",
  "hash": "#nugu--vendor-components",
  "sentences": [
    "NUGU & Vendor Components",
    "NuguCoreNuguAgentsNuguUtilsNuguClientKitNuguLoginKitNuguServiceKitNuguUIKitKeenSenseJadeMarbleSilverTrayOpusSDKTycheSDKNuguObjcUtils | https://github.com/nugu-developers/nugu-ios",
    "NattyLog | https://github.com/nugu-developers/natty-log-ios"
  ]
},
    {
  "title": "구성요소 > External",
  "hash": "#external",
  "sentences": [
    "External",
    "RxSwift | https://github.com/ReactiveX/RxSwift",
    "Lottie-iOS | https://github.com/airbnb/lottie-ios"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-parameters/configurable-parameter",
  "order": 29,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/support-tools/corpus-inspection-1",
  "order": 54,
  "indexes": [
    {
  "title": "훈련 데이터 검증",
  "hash": "",
  "sentences": [
    "훈련 데이터 검증",
    "User Utterance Model은 Play가 사용자의 말을 이해할 수 있도록 훈련된 모델입니다. Play 별로 생성되는 이 모델은",
    "User Utterance Model",
    ">",
    "Intent",
    "에서 입력한 예상 발화와 해당 발화에 태깅한 Entity 정보에 의해 훈련됩니다. 이 훈련 데이터가 잘못 구성된 경우 Play는 엉뚱한 응답을 하거나, 사용자의 발화를 처리하지 못하게 됩니다.",
    "훈련 데이터 검증",
    "은 훈련 데이터를 입력하면서 발생할 수 있는 중의성을 찾아주는 보조 도구이며, 2가지 도구를 제공합니다.",
    "중복 태깅 찾기 | 동일한 문장이 다른 방식으로 태깅된 경우를 찾아냅니다.",
    "훈련/결과 불일치 문장 찾기 | 훈련 문장이 실제로 입력되었을 때, 요청한 대로 분석되는지 검사합니다.",
    "훈련 데이터 검증",
    "은 훈련 데이터(예상 발화) 구성의 최소 규칙을 통과했는지를 체크하는 것으로, 훈련과 함께 자동 수행됩니다. 수정이 필요한 문장이 발견되는 경우 해당 문장을 결과 목록에 보여주며, 훈련 데이터에서 이상을 발견하지 못한 경우, 검증 결과가 나타나지 않습니다.",
    "훈련 데이터 검증 분석 결과가 없는 경우, 훈련 데이터가 서로 간섭을 주지 않도록 구성되었다고 볼 수 있습니다."
  ]
},
    {
  "title": "훈련 데이터 검증 > 중복 태깅 찾기",
  "hash": "#중복-태깅-찾기-",
  "sentences": [
    "중복 태깅 찾기",
    "이 도구는 완전히 같은 텍스트로 구성되었지만 다른 방식으로 Entity가 태깅된 문장들을 찾아냅니다. 동일한 문장이 다른 방식으로 태깅되면, NLU엔진 또한 복수로 분석하게 되어 명확한 동작 수행을 할 수 없습니다. 이 도구에서 발견되는 문장은 하나의 방식으로 태깅해야 합니다. 아래의 예는 잘못 태깅한 문장을 나타냅니다.",
    "훈련 데이터를 구성할 때 이와 같이 동일한 문장을 다르게 Entity 태깅한 경우,",
    "중복 태깅 찾기",
    "도구는 아래와 같이 분석을 하게 됩니다. 이 경우에는, 두 문장 중 하나를 삭제해야만 정상적인 결과를 얻을 수 있습니다.",
    "아래의 예와 같이 같은 문장이 서로 다른 Intent에서 다른 Entity 태깅이 된 경우도 중복태깅으로 간주하여",
    "중복 태깅 찾기",
    "도구는 해당 문장을 찾아내게 됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/create-a-play-using-backend-proxy",
  "order": 37,
  "indexes": [
    {
  "title": "외부 연동 서버 (Backend proxy) 연결하기",
  "hash": "",
  "sentences": [
    "외부 연동 서버 (Backend proxy) 연결하기"
  ]
},
    {
  "title": "외부 연동 서버 (Backend proxy) 연결하기 > 개요",
  "hash": "#개요",
  "sentences": [
    "개요",
    "Backend proxy는 응답을 생성하기 위해 필요한 정보를 외부로부터 가져와야 하는 경우 사용하는 서버입니다.",
    "개발에 대한 자세한 내용은 외부 연동 서버(Backend proxy)를 참고하세요.",
    "Backend proxy는 위 그림과 같이 다음의 경우에 사용합니다.",
    "Action의 응답을 정의할 때, 외부 서버로부터 정보를 가져와야 하는 경우",
    "날씨 상태, 지하철 도착 예정 시간, 특정 POI의 전화번호 등",
    "특정 Entity에 대하여 서버의 판단이 필요할 때",
    "사용자가 말한 날짜가 무슨 요일인지 판단",
    "사용자로부터 2개의 Entity를 받아서 처리해야 할 때, 2개의 Entity의 정합성을 체크하는 경우(2월 31일의 날씨 알려줘, 일본의 뉴욕 시간 알려줘)",
    "서버에서 연산하여 결과를 제공할 수 있는 경우",
    "현재 시간: 2 + 3의 결과",
    "Directive를 사용하여 디바이스의 기능을 동작시켜야 하는 경우",
    "오디오 재생, 멈춤",
    "예외 상황에 대한 판단이 필요할 때",
    "콘텐츠 서버의 장애",
    "사용자가 지원하지 않는 범위의 정보를 요청했을 때, Intent는 유지하면서 Entity만 다시 받아 처리하고 싶은 경우",
    "Backend Parameter, 예외 상황 관리, Capability Interface(Directive)와 관련한 자세한 내용은 다음 링크 페이지를 참고하세요.",
    "Parameter: Parameter 사용하기",
    "Capability Interface(Directive): AudioPlayer Interface 지원하는 Play 만들기",
    "예외 상황: 예외 상황 관리"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/create-a-play-with-audioplayer",
  "order": 40,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/hello-aria/create-a-play",
  "order": 9,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/hello-aria/create-an-action-and-an-answer",
  "order": 11,
  "indexes": [
    {
  "title": "3) Action 만들고 응답 등록하기",
  "hash": "",
  "sentences": [
    "3) Action 만들고 응답 등록하기",
    "이제",
    "Intent 만들고 예상 발화 등록하기",
    "에서 만든 2개의 Intent(ask.weather, ask.microdust)에 대한 응답을 입력하는 방법을 살펴보겠습니다.",
    "NUGU에서는 하나의 Intent를 처리하는 최소 응답 단위를 Action이라고 부릅니다.",
    "‘응답 등록’, ‘Action 등록’이라는 말은 동일한 의미이며, 사용자가 목적 달성을 위해 Play에 발화한 것에 대한 응답을 미리 지정해 두는 것을 말합니다.",
    "일반적으로 하나의 Intent에 대하여 하나의 Action을 정의하게 됩니다.",
    "Action은 Play 개발자(제작사)가 사용자의 예상 발화에 대해 응답을 직접 등록하는 Custom Action과 NUGU play kit에서 제공하는 Built-in Action으로 구분할 수 있습니다.",
    "여기서는 Custom Actions를 등록하는 방법에 대해서 설명합니다.",
    "이제 “날씨”, “미세 먼지”와 관련하여 정의한 Intent인 ask.weather, ask.microdust에 대한 응답(Action)을 등록해 보도록 하겠습니다."
  ]
},
    {
  "title": "3) Action 만들고 응답 등록하기 > 날씨 관련 Action 추가",
  "hash": "#날씨-관련-action-추가",
  "sentences": [
    "날씨 관련 Action 추가",
    "Play Builder 홈 화면에서 Action를 추가할 Play를 클릭하여 선택한 후 Actions > Custom Actions > Action 추가 버튼을 클릭합니다.\n\n    \n\n    \n      영자, 숫자, 특수문자인 마침표(.), 언더바(_), 하이픈(-)만 사용할 수 있습니다.\n      Action명은 Intent에 대한 응답이라는 것을 쉽게 알 수 있도록 작성하는 것이 좋습니다.\n      NUGU에서는 이런 경우에 일반적으로 “answer.weather”와 같이 작성합니다.",
    "영자, 숫자, 특수문자인 마침표(.), 언더바(_), 하이픈(-)만 사용할 수 있습니다.",
    "Action명은 Intent에 대한 응답이라는 것을 쉽게 알 수 있도록 작성하는 것이 좋습니다.",
    "NUGU에서는 이런 경우에 일반적으로 “answer.weather”와 같이 작성합니다.",
    "Trigger 선택 영역에서 Trigger 유형을 Intent로 선택한 후 이전에 만들었던 2개의 Intent 중 이 Action이 처리할 날씨 관련 Intent(예: ask.weather)를 선택해 줍니다.",
    "Output 정의 영역의 Prompt list 내에 위치한 입력 필드에 응답을 입력하고 Enter 키를 누르거나 마우스를 입력 필드 외 영역을 클릭하여 Action을 등록합니다.",
    "Prompt List 내에 작성된 Prompt는 응답 하나를 의미하며, 여러 개를 입력하면 그 중 하나가 스피커로 랜덤 재생됩니다.",
    "입력한 응답을 삭제하려면 Prompt list에서 각 응답마다 표시된 휴지통() 아이콘을 누릅니다.",
    "Play Builder 우측 상단에 있는 Play 저장을 누르면 Intent(ask.weather)와 Action(answer.weather)이 연결되어 해당 Play에 저장됩니다.",
    "사용자 발화가 이전 단계에서 학습된 NLU 모델에 의해 ask.weather라는 Intent로 분석되면, Play의 answer.weather Action이 활성화 되고 Action에서 정의된 대로 동작하게 됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/hello-aria/create-an-intent-and-custom-utterances",
  "order": 10,
  "indexes": [
    {
  "title": "2) Intent 만들고 예상 발화 등록하기",
  "hash": "",
  "sentences": [
    "2) Intent 만들고 예상 발화 등록하기",
    "Play를 생성한 이후에는 사용자가 어떻게 발화할 것인지 예측한 후 이 예상 발화의 Intent를 Play에 정의해야 합니다. Play는 특정 기능을 동작시키려는 사용자의 발화를 Intent 단위로 묶어서 기능과 연결짓게 됩니다.",
    "Play Builder를 이용하여 ‘날씨와 미세 먼지 정보를 제공하는 Play’의 Intent를 만들어 보도록 하겠습니다."
  ]
},
    {
  "title": "2) Intent 만들고 예상 발화 등록하기 > 날씨 관련 Intent 추가",
  "hash": "#날씨-관련-intent-추가",
  "sentences": [
    "날씨 관련 Intent 추가",
    "Play Builder 홈 화면에서 Intent를 추가할 Play를 클릭하여 선택한 후, User Utterance Model > Custom Intent > Intent 추가 버튼을 클릭합니다.",
    "Intent Name 필드에 “날씨”와 관련한 Intent명을 입력하고, 그 Intent 내용에 맞는 사용자 예상 발화를 입력한 후 등록 버튼을 클릭합니다.",
    "Intent Name 필드\n\n    \n      영자, 숫자, 특수문자인 마침표(.), 언더바(_), 하이픈(-)만 사용할 수 있습니다.\n      Intent명은 “날씨를 물어봐야겠다”라는 의도를 쉽게 알 수 있는 영문자로 작성하는 것이 좋습니다.\n      NUGU에서는 이런 경우에 일반적으로 “ask.weather”와 같이 작성합니다.",
    "영자, 숫자, 특수문자인 마침표(.), 언더바(_), 하이픈(-)만 사용할 수 있습니다.",
    "Intent명은 “날씨를 물어봐야겠다”라는 의도를 쉽게 알 수 있는 영문자로 작성하는 것이 좋습니다.",
    "NUGU에서는 이런 경우에 일반적으로 “ask.weather”와 같이 작성합니다.",
    "예상 발화 필드\n\n    \n      입력한 Intent에 해당하는 예상 발화들을 입력합니다.\n      실제 예: “날씨 알려줘”, “날씨 알려주세요”, “날씨 어때?”\n      같은 의도라도 다양한 표현이 존재할 수 있으므로 예상 발화를 많이 입력할수록 사용자 의도 파악에 도움이 됩니다.",
    "입력한 Intent에 해당하는 예상 발화들을 입력합니다.",
    "실제 예: “날씨 알려줘”, “날씨 알려주세요”, “날씨 어때?”",
    "같은 의도라도 다양한 표현이 존재할 수 있으므로 예상 발화를 많이 입력할수록 사용자 의도 파악에 도움이 됩니다.",
    "입력한 발화를 삭제하려면 Expression 리스트에서 각 발화마다 표시된 휴지통() 아이콘을 누릅니다.",
    "Intent에 예상 발화를 등록한 후 Play 저장 버튼을 클릭하여 Intent 등록 작업을 완료합니다.",
    "Play 저장 버튼 대신 목록 버튼을 클릭하면 Play에 Intent를 추가하지 않고 Custom Intents 페이지로 이동합니다.",
    "Intent를 Play에 저장하면, NLU 엔진은 등록된 예상 발화를 자동으로 학습해서 해당 Play의 NLU 모델을 생성하게 됩니다. 이 NLU 모델은 사용자의 발화를 이해하여 Intent/Entity를 분석하는 역할을 합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder",
  "order": 7,
  "indexes": [
    {
  "title": "Play Builder로 Play 만들기",
  "hash": "",
  "sentences": [
    "Play Builder로 Play 만들기",
    "Play를 만드는 과정은 크게 다음과 같습니다.",
    "Play가 제공할 기능을 기획합니다.",
    "이 기능을 이용하기 위해 사용자가 어떻게 말할지를 예측합니다.",
    "사용자의 예상 발화에 대해 Play가 어떻게 응답할지를 정의합니다.",
    "위 내용을 ‘날씨를 알려주는 Play’를 만드는 과정을 예로 살펴 보면 다음과 같습니다.(이하 ‘날씨 Play’)"
  ]
},
    {
  "title": "Play Builder로 Play 만들기 > 1. Play가 제공할 기능을 기획합니다.",
  "hash": "#1-play가-제공할-기능을-기획합니다",
  "sentences": [
    "1. Play가 제공할 기능을 기획합니다.",
    "우리가 만들 ‘날씨 Play’에서는 ‘날씨 정보와 미세 먼지 정보’ 두 가지만 알려줄 수 있다고 가정합니다.",
    "따라서 ‘날씨 Play’가 제공할 기능은 ‘날씨 정보 알림’과 ‘미세 먼지 정보 알림’ 두 가지 기능입니다."
  ]
},
    {
  "title": "Play Builder로 Play 만들기 > 2. 이 기능을 이용하기 위해 사용자가 어떻게 말할지를 예측합니다.",
  "hash": "#2-이-기능을-이용하기-위해-사용자가-어떻게-말할지를-예측합니다",
  "sentences": [
    "2. 이 기능을 이용하기 위해 사용자가 어떻게 말할지를 예측합니다.",
    "정의된 문장들을 기반으로 Play Builder가 NLU 엔진을 학습시키며, NLU 엔진은 실제 사용자의 발화를 분석하여 어떤 의도가 있는지를 판단합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/customize-a-play",
  "order": 18,
  "indexes": [
    {
  "title": "Play 설정하기",
  "hash": "",
  "sentences": [
    "Play 설정하기",
    "Play를 처음 생성한 뒤 좌측의",
    "General",
    "의 하위 메뉴에서 Play와 관련된 설정을 할 수 있습니다. 이 설정은 Play를 만드는 데 있어 필수 사항은 아닙니다."
  ]
},
    {
  "title": "Play 설정하기 > 기본 정보(General > 기본 정보)",
  "hash": "#기본-정보general--기본-정보-",
  "sentences": [
    "기본 정보(General > 기본 정보)",
    "① Play 이름",
    "Play를 생성할 때 등록한 것으로서, Play Builder 내에서 ID 역할을 하며, 중복과 변경이 허용되지 않습니다.",
    "② Play 별칭",
    "Play Builder 내에서 사용되는 것으로 여러 버전의 Play를 만들고 관리할 때, 식별을 쉽게 하기 위한 용도로 활용 가능합니다. 별칭은 중복이 허용되며, 별도로 정의하지 않으면 Play 이름이 그대로 지정됩니다. 홈 화면의 Play List에서는 Play 별칭을 보여줍니다.",
    "③ Capability Interface",
    "NUGU에서 제공하는 Capability Interface를 사용하여 Play를 만들 경우, 사용할 Interface를 체크하면 사용이 가능하며 여러 개의 Interface 간 중복해서 사용할 수 있습니다. 단, Capability Interface를 사용하기 위해서는 Backend proxy와 필수적으로 연동되어 있어야 합니다.",
    "현재는 AudioPlayer Interface와, Display Interface를 지원합니다.  자세한 내용은",
    "AudioPlayer Interface 지원하는 Play 만들기",
    "Display Interface",
    "를 참고하세요.",
    "④ 합성음 목소리",
    "기본으로 제공하는 합성음은",
    "아리아",
    "이며 추가로",
    "벨",
    "이라는 목소리를 제공합니다. 원하는 목소리를 선택하여 Play를 만들 수 있습니다. 하나의 Play는 하나의 목소리만 가질 수 있습니다.",
    "합성음 목소리는 다음과 같은 특성을 가지고 있습니다. (* 20문장 합성음 측정 결과)",
    "스타일 | 대화체 | 낭독체",
    "톤 | 높음 (평균 223㎐*) | 보통 (평균 208㎐*)",
    "톤 변화도 | 많음 (평균 46㎐*) | 적음 (평균 39㎐*)",
    "발화 속도 | 보통 (4.65음절/초*) | 빠름 (5.01음절/초*)",
    "음색 | 밝음, 명랑, 부드러움, 여성적 | 차분, 명확, 안정적, 중성적",
    "용도 | 대화, 안내 | 정보 전달",
    "⑤ Prompt 발화 옵션",
    "음성 합성의 속성을 조절하는 옵션입니다. 발화 속도, 음의 높낮이, 문장 간 묵음의 길이, 끊어 읽을 때의 묵음 길이를 각각 설정할 수 있습니다. 이 페이지에서의 설정은 이 Play 내에 모든 prompt 발화 옵션을 일괄 조정하는 옵션입니다.",
    "발화 옵션 적용하기",
    "버튼을 클릭한 이후에 만들어진 prompt부터 옵션이 적용되며, 각 문장 우측의 버튼을 통해 확인이 가능합니다.",
    "발화 옵션에 대한 자세한 내용은 발화 옵션 사용하기를 참고하세요."
  ]
},
    {
  "title": "Play 설정하기 > 외부 연동 서버 설정 및 예외 상황 관리(General > 외부 서버 연결 정보)",
  "hash": "#외부-연동-서버-설정-및-예외-상황-관리general--외부-서버-연결-정보-",
  "sentences": [
    "외부 연동 서버 설정 및 예외 상황 관리(General > 외부 서버 연결 정보)",
    "⑥ Web URL",
    "외부 연동 서버(Backend proxy)의 Web URL을 입력합니다.",
    "http:// 또는 https://를 함께 입력해주세요. 1 글자 이상 입력하면 추가 메뉴가 노출됩니다.",
    "외부 연동 서버(Backend proxy)는 80, 443, 8080, 8443 포트만 지원합니다.",
    "⑦ 연결 실패 시 Prompt",
    "외부 연동 서버(Backend proxy)와의 연결에 실패한 경우에 제시되는 에러 메시지입니다.",
    "‘Web URL’ 항목을 입력하면 해당 항목이 나타납니다.",
    "⑧ Initial Parameter",
    "Play가 최초 동작하는 시점부터 Parameter가 필요한 경우, 이곳에서 정의하고 Backend proxy를 통해 가져올 수 있습니다. ‘Web URL’ 항목을 입력하면 해당 항목이 나타납니다.",
    "⑨ Global Backend Parameter 정의하기",
    "Parameter는 Utterance Parameter와 Backend Parameter 두 가지로 구분됩니다. Utterance Parameter는 사용자의 발화에서 부가 정보를 담는 Parameter이며, Backend Parameter는 Backend Proxy에서 받은 데이터를 담는 Parameter입니다.",
    "Parameter는 액션 내에서 정의하여 사용하는 것이 일반적이지만, Global Backend Parameter는 미리 정의한 뒤 Play 내에서 공통으로 사용할 수 있습니다. 이 곳에 추가된 Parameter는 Play 내의 모든 Action에 상속됩니다.",
    "⑩ 예외 상황 관리(모든 Action 공통)",
    "Play에서 정상적인 응답을 못하는 경우(예: 콘텐츠 서버의 무응답, 지원하지 않는 범위의 요청 등)를 Exception Code로 추가하고, 이 때 제시될 Prompt를 정의합니다.",
    "모든 Action에 공통으로 적용됩니다.",
    "예외 처리에 대한 자세한 내용은 예외 상황 관리를 참고하세요."
  ]
},
    {
  "title": "Play 설정하기 > Play 구조(General > Play 구조)",
  "hash": "#play-구조general--play-구조",
  "sentences": [
    "Play 구조(General > Play 구조)",
    "Intent(혹은 precondition)와 Action과의 관계 및 Action Tree를 보여줍니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/dark-mode",
  "order": 194,
  "indexes": [
    {
  "title": "Dark Mode 지원",
  "hash": "",
  "sentences": [
    "Dark Mode 지원",
    "어두운 테마",
    "NUGU의 UI component는 어두운 테마를 지원합니다.",
    "아래 가이드를 따라 테마를 변경하면",
    "Template",
    ",",
    "ChromeWindow",
    "에 어두운 테마를 적용 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/ios/dark-mode",
  "order": 181,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-parameters/define-a-parameter",
  "order": 25,
  "indexes": [
    {
  "title": "Parameter 정의하기",
  "hash": "",
  "sentences": [
    "Parameter 정의하기",
    "Parameter의 사용 방법을 알아보기 위해, 다음과 같이 사용자에게 특정 날짜나 특정 장소에 대한 날씨 값을 제공해주는 Play를 만든다고 가정을 해보겠습니다.",
    "여기서, “오늘”과 “명동”이라는 정보는 사용자의 발화(“오늘 명동 날씨 알려줘.”)에서 알 수 있는 정보(Entity)입니다.",
    "이렇게 사용자의 발화에서 얻을 수 있는 정보는 Utterance Parameter를 만들어서 이곳에 담기도록 지정을 하여 Play의 응답에 이를 사용할 수 있습니다.",
    "그리고, ‘흐리다’, ‘맑다’와 같은 기상 정보는 기상청과 같이 외부의 서버를 통해 받아오는 정보입니다. 이러한 정보는 Backend Parameter를 생성하고 이곳에 담기도록 지정을 하면, 이 역시 Play 응답에 사용할 수 있습니다."
  ]
},
    {
  "title": "Parameter 정의하기 > Utterance Parameter 등록하기",
  "hash": "#utterance-parameter-등록하기",
  "sentences": [
    "Utterance Parameter 등록하기",
    "Action 만들고 응답 등록하기",
    "에서 만들어 보았던 ‘answer.weather’라는 Action에서 Parameter를 만드는 법을 설명하도록 하겠습니다.",
    "우선, User Utterance Model > Custom Intents 페이지에서 다음과 같이 예상 발화를 입력하고 Entity를 지정해줍니다.",
    "시간, 날짜 표현은 Built-in Entity Type에서 선택합니다.",
    "동 이름은 Custom Entity Type으로 추가합니다.",
    "Play Builder 홈 화면에서 Parameter를 추가할 Play를 클릭하여 선택한 후, Custom Actions 버튼을 클릭합니다.",
    "Action List에서 ‘answer.weather’라는 Action을 선택합니다.",
    "응답에 필요한 정보 가져오기 영역의 Utterance Parameter 입력 필드에 Parameter명을 입력하고 Enter 키를 누르거나 입력 필드 이외 영역에 마우스 왼쪽 버튼을 클릭합니다.",
    "영자, 숫자, 특수문자인 언더바(_), 하이픈(-)만 사용하여 40자 이내에서 작성할 수 있으며, Play 내에서 같은 이름을 중복해서 등록할 수 없습니다.",
    "이번 예에서는 ‘오늘’과 같이 특정일을 담을 Parameter와 ‘면목동’과 같이 지역을 담을 Parameter를 담을 2개의 Utterance Parameter를 만듭니다.",
    "Parameter명을 각각 ‘day’와 ‘location’으로 지정합니다.",
    "추가한 Parameter 우측 Mapping 항목의 Entity mapping을 위해 이곳을 클릭하세요. 버튼을 클릭한 후 Entity mapping 창에서 ‘day’ Parameter에는 ‘오늘’이 담겨 있는 ‘BID_DT_DAY’를, ‘location’ Parameter에는 ‘LOC_DONG’ Entity Type를 각각 매핑합니다.",
    "각 Parameter 우측 Mapping 항목에 매핑된 Entity Type:Entity Role이 표시됩니다.",
    "Utterance Parameter 2개가 정의되었으며, 응답에 이 Parameter를 사용할 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action",
  "order": 22,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-response-filters",
  "order": 38,
  "indexes": [
    {
  "title": "Response Filter 사용하기",
  "hash": "",
  "sentences": [
    "Response Filter 사용하기",
    "Response Filter는 Parameter에 담긴 값 또는 형식을 변환시킬 수 있으며, Prompt에서 사용할 수 있습니다. Response Filter는 크게 세 가지가 있습니다. 이들은 각각 다음과 같은 특성을 가지고 있습니다.",
    "NLG Translator | 정해진 규칙에 의해 값을 변환해 줍니다.1이 들어오면 ‘a’로, 2가 들어오면 ‘b’로 변환시킬 수 있습니다. | >",
    "NLG Normalizer | 정해진 규칙에 의해 값을 변환해 줍니다.한번에 여러 가지 값을 일괄 변경할 수 있습니다.1,2,3이 들어오면 ‘a’로, 3,4,5,6,7이 들어오면 ‘b’로 변환할 수 있습니다. | =",
    "NLG Function | 정해진 규칙에 맞게 형식값을 변환합니다. | \\:"
  ]
},
    {
  "title": "Response Filter 사용하기 > NLG Translator",
  "hash": "#nlg-translator",
  "sentences": [
    "NLG Translator",
    "날씨를 안내할 때, “오늘 날씨는",
    "{{status}}",
    "” 같이, 외부(기상 정보 제공 서버)에서 날씨 상태값을 체크한 뒤, 외부 연동 서버(Backend proxy)에서 “맑겠습니다.”, “눈이 올 예정입니다”와 같이 Prompt의 일부를 처리하는 것도 가능합니다.",
    "그러나 이렇게 Play를 만들 경우, 최종적으로 나갈 Prompt의 내용을 Play Builder에서 모두 확인하기 어렵고, Backend proxy에서도 별도로 관리를 해야 합니다. 즉, 문장 하나를 수정 하려고 해도 외부 연동 서버 개발자가 함께 Prompt 수정해야 하기 때문에 수시로 응답을 바꿔가며 Play를 운영하기가 어려워집니다.",
    "이럴 때, Parameter",
    "{{status}}",
    "에는 날씨 상태를 나타내는 코드를 담고, 이 Paraemeter에 NLG Translator를 사용하여 각 코드 별 응답을 입력하여 처리하면, 조금 더 유연한 대응이 가능해집니다.",
    "NLG Translator를 입력하는 방법은 다음과 같습니다.",
    "Play Builder 홈 화면에서 NLG Translator를 추가할 Play를 클릭하여 선택한 후 Response Filters > NLG Translator > +NLG Translator 추가를 클릭합니다.",
    "Translator의 Filter명을 입력하고, 변경 전의 값을 Source에, 바뀔 값을 Target에 각각 입력한 후 Enter 키를 누르거나 입력 필드 이외 영역에 마우스 왼쪽 버튼을 클릭합니다.",
    "이렇게 Translator가 적용된 `` Parameter에 “01”이라는 값이 들어오면 Translator가 “맑겠습니다.”라는 텍스트로 변환시키게 됩니다.",
    "Parameter에 담긴 값이 Filter의 Source와 정확히 일치할 때만 동작합니다. 위의 예에서 status에 1 혹은 001이라는 값이 들어오면 동작하지 않습니다.",
    "Play Builder는 Response Filter를 쉽게 입력할 수 있도록 자동완성 기능을 지원합니다.",
    "Parameter 의 끝의 기호",
    "}}",
    "뒤에 특수기호 >를 입력하면 앞서 정의한 NLG Translator의 리스트가 표시되며, 원하는 Filter를 선택합니다."
  ]
},
    {
  "title": "Response Filter 사용하기 > NLG Normalizer",
  "hash": "#nlg-normalizer",
  "sentences": [
    "NLG Normalizer",
    "NLG Normalizer는 Translator와 기능이 유사하지만, 가장 큰 차이점은 여러 개의 Source를 하나의 Target으로 변경해 준다는 점입니다.",
    "Play Builder 홈 화면에서 NLG Normalizer를 추가할 Play를 클릭하여 선택한 후 Response Filters > NLG Normalizer > +NLG Normalizer 추가를 클릭합니다.",
    "Normalizer의 Filter명을 입력하고, 변경 전의 값을 Source에, 바뀔 값을 Target에 각각 입력한 후 Enter 키를 누르거나 입력 필드 이외 영역에 마우스 왼쪽 버튼을 클릭합니다.",
    "NLG Normalizer의 자동 완성 기능으로 적용하기 위한 기호는 = 이며, 사용 방법은 NLG Translator와 같습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-user-utterance-model",
  "order": 19,
  "indexes": [
    {
  "title": "User Utterance Model 정의하기 (Intent & Entity)",
  "hash": "",
  "sentences": [
    "User Utterance Model 정의하기 (Intent & Entity)"
  ]
},
    {
  "title": "User Utterance Model 정의하기 (Intent & Entity) > Intent",
  "hash": "#intent",
  "sentences": [
    "Intent",
    "Intent를 만들고 수정하는 것은 좌측 메뉴의",
    "User Utterance Model",
    ">",
    "Custom Intents",
    "와",
    "Built-in Intents",
    "메뉴에서 할 수 있습니다. Custom Intent는 Play 내에서 정의된 Intent를 의미하고, Built-in Intent는 NUGU play kit에서 제공하는 Intent로서 여러 분야에서 공통적으로 사용될 것으로 예상되어 미리 학습시켜 둔 Intent입니다."
  ]
},
    {
  "title": "User Utterance Model 정의하기 (Intent & Entity) > Custom Intent 생성하기",
  "hash": "#custom-intent-생성하기-",
  "sentences": [
    "Custom Intent 생성하기",
    "먼저 Custom Intent를 추가하는 방법에 대해 알아보도록 하겠습니다.",
    "1) Play Builder 홈 화면에서 Intent를 추가할 Play를 클릭하여 선택한 후,",
    "User Utterance Model",
    ">",
    "Custom Intent",
    ">",
    "Intent 추가",
    "버튼을 클릭합니다.",
    "2) Intent Name 필드에 “날씨”와 관련한 Intent명을 먼저 정의합니다.",
    "Intent name은 영자, 숫자와 특수 문자인 마침표(.), 언더바(_), 하이픈(-)만 사용할 수 있습니다.",
    "NUGU 플랫폼에서는 ‘ask.weather’와 같은 네이밍 규칙으로 작성하고 있습니다.",
    "Intent Name 앞에는 NUGU를 사용할 수 없으며, 중복은 허용하지 않습니다.",
    "3) 사용자 예상 발화를 Sentence 필드에 입력합니다.",
    "발화 문장을 입력한 후 Enter 키를 누르거나 입력 필드 이외 영역을 마우스 왼쪽 버튼으로 클릭하면 문장이 추가됩니다.",
    "날씨를 알고 싶어하는 사용자가 발화할 것으로 예상하는 문장을 차례로 입력합니다.",
    "Entity로 지정할 단어도 섞어가면서 예상 발화를 작성합니다.",
    "예상 발화 작성에 대한 자세한 내용은 예상 발화 작성 가이드라인 및 예상 발화 작성 가이드를 참고하세요.",
    "위 1) ~ 3)의 과정을 연속 이미지로 보면 다음과 같습니다.",
    "4) 예상 발화 문장 중 Entity로 지정할 단어가 있다면 마우스로 해당 텍스트를 선택합니다. 텍스트가 선택되면 Entity Type을 지정할 수 있는 팝업창이 표시됩니다.",
    "5) 이 팝업에서 적절한 Type을 클릭하면 자동으로 지정됩니다.",
    "그러나 현재는 ‘명동’이라는 Entity에 적합한 Type이 없으므로, 새로 만들어 보겠습니다.",
    "6) 하단의",
    "이 텍스트를 새로운 Type으로 추가하기",
    "버튼을 클릭한 후, 다음과 같이 입력합니다.",
    "발화 문장을 입력한 후 Enter 키를 누르거나 입력 필드 이외 영역을 마우스 왼쪽 버튼으로 클릭하면 문장이 추가됩니다.",
    "이제 위의 Entity Type 목록에 ‘LOCATION’이 추가된 것을 볼 수 있습니다.",
    "7) 이 Type을 클릭하여 선택하면 다음과 같이 Entity Type이 연결됩니다.",
    "8) 같은 방법으로 예상 발화 문장을 입력하고 Entity Type을 연결한 후",
    "Play 저장",
    "버튼을 클릭하면 Custom Intent의 생성이 완료됩니다.",
    "위 4) ~ 8)의 과정을 연속 이미지로 보면 다음과 같습니다.",
    "그러나 아직은 ‘LOCATION’에 하나의 Entity만 있으므로 Entity를 더 추가하거나 다른 Type으로 변경해야 합니다.",
    "이에 대한 자세한 내용은 아래의",
    "Custom Entity Type에 Entity 추가하기",
    "에서 더 알아보도록 하겠습니다.",
    "‘문장 내 역할’은 이 Entity가 문장 내에서 하게 되는 역할(Entity Role)을 의미합니다.",
    "한 문장 내에서 동일한 Type이 사용될 것으로 예상될 때 Role을 구분하여 Entity를 연결시킬 수 있습니다.",
    "예를 들면, ‘서울에서 부산 가자’ 에서 ‘서울’과 ‘부산’은 모두 ‘도시’라는 동일한 Type을 가지지만 서울은 ‘FROM(출발지)’, 부산은 ‘TO(목적지)’ 등과 같이 Role을 구분하여 정의할 수 있습니다.",
    "Role을 사용할 필요가 없는 경우에는 Role을 별도로 지정하지 않아도 되며, 지정되지 않으면 default로 Type 값이 Role로 지정됩니다.",
    "Intent를 더 추가하고 싶다면 계속 추가가 가능하며, 추가 가능한 Intent와 예상 발화의 최대 개수에는 제한이 없습니다.",
    "훈련 데이터에 다양한 문형의 문장이 많을수록 분석 커버리지가 높아지기 때문에 가급적 다양한 문형의 문장을 Intent당 20개 이상 등록하는 것이 좋습니다.",
    "다음의 내용을 참고하세요.",
    "예상 발화 작성 가이드를 참고하세요.",
    "Play Builder에서는 예상 발화를 파일로 업로드할 수 있도록 지원하고 있습니다.\n예상 발화 및 Entity 업로드 가이드와 Built-in Intent에 대한 자세한 내용은 Built-in Intent를 참고하세요."
  ]
},
    {
  "title": "User Utterance Model 정의하기 (Intent & Entity) > Entity",
  "hash": "#entity",
  "sentences": [
    "Entity",
    "Entity는 Type을 기준으로 생성하고 정의하며 Entity Type은 Custom과 Built-in Entity Type으로 구성됩니다. Custom Entity Type은 Play Builder를 통해 직접 등록하는 Entity Type이며, Built-in Entity Type은 시간, 개수, 지명과 같이 여러 분야에서 공통으로 사용될 것으로 예상되어 NUGU play kit이 제공해 주는 Entity Type입니다."
  ]
},
    {
  "title": "User Utterance Model 정의하기 (Intent & Entity) > Custom Entity Type에 Entity 추가하기",
  "hash": "#custom-entity-type에-entity-추가하기-",
  "sentences": [
    "Custom Entity Type에 Entity 추가하기",
    "Custom Intent 생성하기",
    "에서 ‘LOCATION’이라는 Entity Type을 생성하고, ‘명동’이라는 Entity를 추가하였습니다. 이 Entity Type에 ‘명동’이라는 Entity 외 다른 Entity를 추가 등록하는 방법에 대해 알아보겠습니다.",
    "1) Play Builder 홈 화면에서 Entity를 추가할 Play를 클릭하여 선택한 후,",
    "User Utterance Model",
    ">",
    "Custom Entity Types",
    "을 클릭합니다.",
    "2) Entity Type List에서 ‘LOCATION’이라는 Entity Type을 선택합니다.",
    "3) 화면에 표시한 ‘대표값’에 있는 인풋박스를 통해 ‘교동’, ‘역삼동’, ‘면목동’을 입력합니다.",
    "텍스트를 입력한 후 Enter 키를 누르거나 입력 필드 이외 영역을 마우스 왼쪽 버튼으로 클릭하면 Entity가 등록됩니다."
  ]
},
    {
  "title": "User Utterance Model 정의하기 (Intent & Entity) > 동의어 Entity 추가하기 (Entity 정규화)",
  "hash": "#동의어-entity-추가하기-entity-정규화",
  "sentences": [
    "동의어 Entity 추가하기 (Entity 정규화)",
    "하나의 Entity를 지칭하는 단어가 여러 개 존재할 때, 동의어를 추가하여 정규화할 수 있습니다.",
    "프로야구 경기 결과를 안내하는 Play를 예로 들어보도록 하겠습니다. 이 Play에서는 각 구단명을 Entity로 등록해야 합니다. 그러나, 구단 이름은 흔히 ‘에스케이와이번스’, ‘에스케이’, ‘SK’, ‘SK와이번스’와 같이 여러 가지 방식으로 불리므로 이 단어들이 같은 대상을 지칭한다는 관계를 설정해 줘야 합니다.",
    "1)",
    "User Utterance Model",
    ">",
    "Custom Entity Types",
    ">",
    "Entity 추가",
    "버튼을 클릭합니다.",
    "2) Entity Type Name 항목에 Entity Type명(예: CLUBNAME)을 입력한 후 화면에 표시한 ‘대표값’에 있는 인풋박스에 구단명을 입력합니다.",
    "텍스트를 입력한 후 Enter 키를 누르거나 입력 필드 이외 영역을 마우스 왼쪽 버튼으로 클릭하면 Entity가 등록됩니다.",
    "3) 동의어 영역을 클릭하여 커서를 옮긴 뒤 동의어를 입력합니다.",
    "‘에스케이’는 실제 구단명이 아니지만 흔히 불리는 이름이므로 추가를 하는 것이 좋습니다.",
    "또한 애칭, 약어, 영문 이름 혹은 정확하지는 않지만 불릴 가능성이 있는 이름이 있다면 함께 Entity로 추가해 주는 것도 좋습니다.",
    "4) Entity 입력을 완료한 후",
    "Play 저장",
    "버튼을 클릭하면 ‘CLUBNAME’ Custom Entity Type의 생성이 완료됩니다.",
    "이렇게 Entity Type을 정의해 두면, 사용자가 ‘에스케이와이번스’, ‘에스케이와이번즈’, ‘SK와이번스’, ‘SK와이번즈’, ‘SK’, ‘에스케이’, ‘스크’ 중 하나를 발화했다고 분석되었을 때, Play Builder가 ‘에스케이와이번스’라는 정규화 처리된 대표값을 전달하게 됩니다. 이러한 정규화 과정은 Play를 만들 때 많은 수고를 덜어주게 됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/describebiz",
  "order": 110,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/describetrial",
  "order": 143,
  "indexes": [
    {
  "title": "체험판과 정식판",
  "hash": "",
  "sentences": [
    "체험판과 정식판",
    "많은 개발자 및 제휴사들께 NUGU SDK를 좀더 많이 접해보실 수 있게 하기 위해 ‘NUGU SDK 체험판’을 제공하고 있습니다. 체험판은 별도의 제휴나 계약의 절차 없이 간단한 신청서 작성만으로 NUGU SDK\n정식판의 기능을 일부 체험해볼 수 있습니다. 체험판은 무료로 일정기간 (3개월) 동안 NUGU 가 제공하는 일부 기본 Play 들을 사용해보실 수 있습니다. 제휴를 통해 정식판으로 업그레이드 하게 되면 별도의 협의를\n통해 제휴사에 필요한 NUGU 의 모든 서비스들을 사용해보실 수 있으며 제휴사 서비스에 적합한 특화 Play 개발 및 NUGU SDK 사용에 필요한 다양한 관리기능 등 모든 기능을 제한없이 사용할 수 있습니다.",
    "가격 | 무료 | 제휴 문의",
    "사용 기간 | 3개월 | 제휴 기간",
    "계정 사용 방식 | NUGU 계정 미사용 방식 | NUGU 계정 미사용 방식 및 NUGU 계정 연동 방식",
    "제공 서비스 | 기본 지원 Play (날짜/시간, 감성대화, NUGU백과, 날씨) | 전체 서비스 (세부 항목은 협의 필요)",
    "특화 Play | - | 제작 가능",
    "추가 기능 | - | 사용자 통계 및 관리툴, NUGU play 설정 기능"
  ]
},
    {
  "title": "체험판과 정식판 > 계정 연동 방식",
  "hash": "#계정-연동-방식",
  "sentences": [
    "계정 연동 방식",
    "NUGU SDK 를 연동하는 방식은 ‘NUGU 계정 미사용 방식’과 ‘NUGU 계정 연동 방식’ 두가지를 제공합니다. 체험판의 경우에는 ‘NUGU 계정 미사용 방식’만 지원하지만 정식판에서는 두가지 방식 모두\n제공합니다. ‘NUGU 계정 연동 방식’은 사용자의 T아이디를 기반으로 하고 있으며 사용자가 음악 서비스의 개인 계정을 연동하거나, 생년월일 기반의 운세 서비스를 제공하는 등 사용자 개인화된 서비스 경험을 제공할 수\n있습니다."
  ]
},
    {
  "title": "체험판과 정식판 > 체험판 제공 서비스",
  "hash": "#체험판-제공-서비스",
  "sentences": [
    "체험판 제공 서비스",
    "체험판에서 사용할 수 있는 기본 지원 Play 와 각각의 대표 발화 아래와 같습니다.",
    "날짜/시간 | 날짜와 시간을 확인할 수 있는 Play | “아리아, 오늘 며칠이야?”“아리아, 오늘 무슨 요일이야?”“아리아, 광복절은 무슨 요일이야?”“아리아, 지금 몇시야?”",
    "감성대화 | 인사부터 말동무까지 대화할 수 있는 Play | “아리아, 안녕?” “아리아, 잘자”“아리아, 좋은 아침!”“아리아, 농담해봐”“아리아, 힘들어”",
    "NUGU 백과 | 시사상식, 사자성어, 유행어 등 다양한 정보를 찾아볼 수 있는 Play | “아리아, 인공지능이 뭐야?”“아리아, 중앙대 연극영화과 전공 배우는 누가 있어?”“아리아, 세계에는 몇 개의 나라가 있어?”“아리아, 각주구검이 뭐야?”“아리아, 소확행이 무슨 뜻이야?”",
    "날씨 | 궁금한 지역의 날씨와 미세먼지 정보를 알려주는 Play | “아리아, 오늘/내일/이번주/다음 날씨 알려줘”“아리아, 내일 제주도 날씨 어때?”“아리아, 오늘 대전 미세먼지 어때?”“아리아, 오늘 세차할까?”",
    "정식판으로 업그레이드 하게 되면 더 많은 NUGU play 를 사용해보실 수 있습니다. NUGU play 에 대해 더 자세히 알고싶다면",
    "https://www.nugu.co.kr/static/service/",
    "를 참고해주세요."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/nugu-ux/design-a-dialog-flow",
  "order": 5,
  "indexes": [
    {
  "title": "대화 흐름 디자인",
  "hash": "",
  "sentences": [
    "대화 흐름 디자인",
    "사용자와 NUGU간 대화의 유형은 크게 ‘Single-turn 대화’와 ‘Multi-turn 대화’로 구분할 수 있습니다.",
    "Single-turn 대화\n\n    사용자가 발화한 요청에 대해 NUGU가 답변하여 대화가 종료되는 대화 유형",
    "Multi-turn 대화\n\n    사용자와 NUGU가 대화를 2회 이상 주고받는 대화 유형"
  ]
},
    {
  "title": "대화 흐름 디자인 > Single-turn 대화 유형 살펴보기",
  "hash": "#single-turn-대화-유형-살펴보기",
  "sentences": [
    "Single-turn 대화 유형 살펴보기"
  ]
},
    {
  "title": "대화 흐름 디자인 > 명령 실행",
  "hash": "#명령-실행",
  "sentences": [
    "명령 실행",
    "사용자의 의도에 맞춰 서비스를 지원할 수 있는 경우입니다.",
    "사용자: 핫한 음악 틀어줘.\nNUGU: 멜론 Top 100을 들려드릴게요. (음악 재생)",
    "명령 실행 시 실행의 결과가 사용자에게 명확하게 인지될 수 있고, 답변이 오히려 번거로울 수 있는 경우 Prompt 없이 해당 동작만 실행할 수도 있습니다.",
    "사용자: (음악 재생 중) 음악 그만\nNUGU: (음악 재생 종료)",
    "음성으로 응답하는 것을 Prompt 응답, 동작을 실행하는 것을 Directive 응답이라고 합니다.\n자세한 내용은 Response 사용하기를 참고하세요."
  ]
},
    {
  "title": "대화 흐름 디자인 > 명령의 대안 실행",
  "hash": "#명령의-대안-실행",
  "sentences": [
    "명령의 대안 실행",
    "사용자의 의도에 100% 부합하는 결과를 낼 수는 없지만 요청을 받아들일 수 있는 대안이 준비된 경우입니다.",
    "사용자: 아이유 재즈 음악 들려줘.\nNUGU: 재즈 음악을 들려드릴게요.",
    "다음 경우는 입력된 Entity 간의 우선 순위 정책을 미리 설계해야 합니다.",
    "한 번에 여러 Entity가 입력된 경우 복합 검색을 지원하지 않는 경우",
    "모든 Entity에 부합하는 검색 결과를 찾지 못한 경우",
    "예) “어제 본 영화 틀어줘” 명령에 대하여 어제 본 영화가 없는 경우 “영화 틀어줘”와 동일한 동작을 수행"
  ]
},
    {
  "title": "대화 흐름 디자인 > 미지원 안내",
  "hash": "#미지원-안내",
  "sentences": [
    "미지원 안내",
    "사용자의 의도는 파악되었으나 서비스의 지원 범위에 벗어난 경우를 말합니다.",
    "서비스 지원 여부를 인지하지 못한 사용자는 지원되지 않는 기능에 대한 시도를 계속할 수 있으므로 지원할 수 없는 서비스에 대해 명확히 안내합니다.",
    "사용자: 어제 날씨 알려줘.\nNUGU: 저는 오늘 이전의 날씨 정보는 가지고 있지 않아요.",
    "지원 가능한 다른 기능에 대해 추가적으로 안내하는 것도 좋습니다.",
    "사용자: 코끼리가 중국어로 뭐야?\nNUGU: 지금은 한영사전만 찾아보실 수 있어요. 영어 단어를 찾아보시려면, “팅커벨, 영어로 코끼리가 뭐야?”라고 말씀해보세요.",
    "서비스 지원 범위를 벗어나는 요청에 대한 응답을 많이 설계할수록 개발 범위가 넓어지므로 유의해야 합니다."
  ]
},
    {
  "title": "대화 흐름 디자인 > 연결오류 안내",
  "hash": "#연결오류-안내",
  "sentences": [
    "연결오류 안내",
    "네트워크의 연결 상태나 서버에 문제가 발생한 경우입니다.",
    "오류(Error) 상황에 대해 지나치게 자세히 설명할 필요는 없으나 원인에 대해 안내를 하는 것이 좋으며, 응답 없이 상황을 종료하거나 거짓으로 안내해서는 안 됩니다.",
    "간결하고 직관적으로 오류에 대해 안내하도록 하며, 가능하다면 사용자가 시도할 수 있는 다음 단계를 안내하는 것이 좋습니다.",
    "사용자: 날씨 알려줘\nNUGU: (날씨 서버 연결 오류 상태) 지금 날씨 정보를 가져올 수 없어요. 잠시 후 다시 말씀해주세요.",
    "사용자: 멜론 틀어줘\nNUGU: (멜론 서버 연결 오류 상태) 지금 멜론 서비스에서 음악을 가져올 수 없어요. 잠시 후 다시 말씀해주세요."
  ]
},
    {
  "title": "대화 흐름 디자인 > 서비스 도움말",
  "hash": "#서비스-도움말",
  "sentences": [
    "서비스 도움말",
    "사용자는 Play 안에 다른 어떤 기능들이 있는지 알기가 어렵습니다.",
    "사용자가 다양한 기능을 활용할 수 있도록, “도움말” 이나 “사용방법 알려줘”와 같은 발화에 대하여 서비스 도움말을 제공할 수 있습니다.",
    "도움말로 제공할 안내가 많을 경우, 한번에 모든 정보를 제공하기 보다는 주요 기능별로 분리하여 제공하는 것이 좋습니다.",
    "또한 사용자가 도움말을 직접 요청하지 않더라도, 필요에 따라 자연스러운 흐름을 방해하지 않는 선에서 첫 진입 시 혹은 응답 중에 필요한 도움말(예: 다른 기능을 소개)을 제공하는 것도 고려해 볼 수 있습니다.",
    "예를 들어, 로그인이 필요한 서비스에서 로그인하지 않고 해당 서비스 명령을 한 경우, 로그인이 필요하다는 안내와 함께 로그인 방법에 대한 가이드를 제공하는 것이 좋습니다."
  ]
},
    {
  "title": "대화 흐름 디자인 > Multi-turn 대화 유형 살펴보기",
  "hash": "#multi-turn-대화-유형-살펴보기",
  "sentences": [
    "Multi-turn 대화 유형 살펴보기"
  ]
},
    {
  "title": "대화 흐름 디자인 > Slot-filling",
  "hash": "#slot-filling",
  "sentences": [
    "Slot-filling",
    "사용자의 의도는 파악하였으나 추가 정보가 필요해 다시 묻는 경우입니다.",
    "요청 이행을 위한 Entity가 누락되었을 경우에는 사용자에게 부족한 Entity 정보를 더 얻은 후 서비스를 제공합니다.",
    "사용자: 알람 설정해줘.\nNUGU: 몇 시로 설정할까요? ← Slot-filling\n사용자: 7시.\nNUGU: 내일 오전 7시로 알람을 설정했어요.",
    "“언제로 할까요?” 보다는 “몇 시로 설정할까요?”가 더 명확합니다.",
    "Slot-filling 시에는 누락된 Entity에 해당하는 사용자 발화만 받아들이며, 그 외 발화에 대해서는 잘못된 명령임을 안내합니다.",
    "2회 연속 잘못된 명령이 입력되거나, 미발화 상태가 7초 간 유지될 경우 대화가 종료(play 종료)됩니다.",
    "사용자: 아리아, 알람 맞춰줘\nNUGU: 몇 시로 맞춰드릴까요? ← Slot-filling\n사용자: 몹시 흥분\nNUGU: 원하는 시는 알람 시간을 이해하지 못했습니다. 시간을 다시 말씀해주세요. ← 필요한 Entity로 인식을 1회 실패\n사용자: 서울시\nNUGU: 원하는 시는 알람 시간을 이해하지 못했습니다. ‘아리아, 오전 또는 오후 몇시 알람 설정해줘’ 라고 말씀해주세요. ← 필요한 Entity 인식을 2회 실패, Slot-filling 더 시도하지 않고 Idle 상태가 됨",
    "Slot-filling 문장 작성 시에는 아래의 항목들을 고려해야 합니다.",
    "사용자가 질문을 확실히 인지할 수 있도록 문장을 구성합니다.",
    "실행 가능한 기능에 대해서만 질문합니다.",
    "사용자에게서 얻고자 하는 답변이 ‘예/아니오’인지, 추가 정보인지에 따라 질문을 구성합니다.",
    "부족한 필수 Entity(Required Entity)에 대해서만 Slot-filling하며, 선택적인 Entity(Optional Entity)에 대해서는 기본값으로 설정하여 Slot-filling의 횟수를 최소화하도록 합니다.",
    "Slot-filling 구현에 대한 자세한 내용은 필수 Entity 정의하기(Slot-Filling Prompt)를 참고하세요"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/devicetemperaturecontrol-interface",
  "order": 86,
  "indexes": [
    {
  "title": "DeviceTemperatureControl Interface",
  "hash": "",
  "sentences": [
    "DeviceTemperatureControl Interface",
    "NUGU스마트홈 DeviceTemperatureControl Capability Interface는 NUGU스마트홈에 등록된 SmartHomeDevice 자체의 온도제어방식에 대한 설명입니다. TemperatureControl Interface가 주변 온도에 대한 제어 명령이라면 DeviceTemperatureControl Interface는 해당 SmartHomeDevice 자체의 온도 설정에 대한 명령으로 구성되어 있습니다."
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"userIdentifier\": \"t6Pv9PLAEmYZilNiloUUnZbVDjXgvUCzwpWY1tPq\", // (optional, e.g. hue whitelist identifier),\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"12345\",\n      \"type\": \"OVEN\",\n      \"modelName\": \"example oven\",\n      \"friendlyNameSuggestion\": \"조리실\",\n      \"manufacturer\": \"example manufacturer\",\n      \"supportedCapabilities\": {\n        \"deviceTemperatureControl\": {\n          \"minTemperature\": \"100\",\n          \"maxTemperature\": \"300\"\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "SmartHomeDevice Attribute Parameters",
    "minTemperature | 해당 SmartHomeDevice가 지원하는 최저 자체 설정 온도입니다.",
    "maxTemperature | 해당 SmartHomeDevice가 지원하는 최고 자체 설정 온도입니다.",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU스마트홈 DeviceTemperatureControl Capability는 SmartHomeDevice의 자체 설정 온도를 조회하는 AskDeviceTemperature와 SmartHomeDevice 자체 온도를 설정하는 SetDeviceTemperature 등의 Directive를 지원합니다."
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > AskDeviceTemperature",
  "hash": "#askdevicetemperature",
  "sentences": [
    "AskDeviceTemperature",
    "Directive 정보",
    "SmartHomeDevice에 설정된 자체 온도를 조회한다.",
    "Capability : DeviceTemperatureControl",
    "Directive : AskDeviceTemperature",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 온도 알려줘.",
    "아리아, {FriendlyName} 온도 어떻게 설정되어 있어?",
    "아리아, {DeviceType} 온도 조회해줘"
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/{Capability}/directives/{Directive})",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"DeviceTemperatureControl\",\n      \"smartHomeDirective\": \"AskDeviceTemperature\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"12345678\",\n        \"deviceTypeCode\": \"OVEN\",\n        \"deviceModelName\": \"example oven\",\n        \"friendlyName\": \"조리실\",\n        \"deviceTypeName\": \"오븐\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"temperatureLevel\": 120.0 // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "AskDeviceTemperature Directive Response parameter details",
    "temperatureLevel | SmartHomeDevice에 설정된 자체설정온도입니다.사용자에게 설정온도로 안내됩니다. | double"
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > SetDeviceTemperature",
  "hash": "#setdevicetemperature",
  "sentences": [
    "SetDeviceTemperature",
    "Directive 정보",
    "SmartHomeDevice의 자체설정온도를 사용자가 발화한 특정 온도로 설정한다.",
    "Capability : DeviceTemperatureControl",
    "Directive : SetDeviceTemperature",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 온도 25도로 설정해줘.",
    "아리아, {FriendlyName} 온도 30.5도로 설정해줘.",
    "아리아, {DeviceType} 온도 19도로 설정해줘."
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"DeviceTemperatureControl\",\n      \"smartHomeDirective\": \"SetDeviceTemperature\",\n      \"parameters\": {\n        \"temperatureLevel\": \"120.0\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"12345678\",\n        \"deviceTypeCode\": \"OVEN\",\n        \"deviceModelName\": \"example oven\",\n        \"friendlyName\": \"조리실\",\n        \"deviceTypeName\": \"오븐\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "SetDeviceTemperature Directive Request parameter details",
    "temperatureLevel | 사용자가 SmartHomeDevice에 설정하고자 하는 자체설정온도의 발화정보입니다. | double"
  ]
},
    {
  "title": "DeviceTemperatureControl Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"temperatureLevel\": \"120.0\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "SetDeviceTemperature Directive Response parameter details",
    "temperatureLevel | SmartHomeDevice를 설정한 이후의 자체설정온도입니다.제어를 마친 이후의 온도로 응답해야 합니다. | double"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/display/display-directive",
  "order": 152,
  "indexes": [
    {
  "title": "Display-Directive",
  "hash": "",
  "sentences": [
    "Display-Directive"
  ]
},
    {
  "title": "Display-Directive > Close",
  "hash": "#close",
  "sentences": [
    "Close",
    "화면 종료 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Close\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Display-Directive > ControlFocus",
  "hash": "#controlfocus",
  "sentences": [
    "ControlFocus",
    "List item 의 포커스 이동 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"ControlFocus\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\"\n  }\n}",
    "direction | string | Y | PREVIOUS, NEXT"
  ]
},
    {
  "title": "Display-Directive > ControlScroll",
  "hash": "#controlscroll",
  "sentences": [
    "ControlScroll",
    "List 의 스크롤 이동 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"ControlScroll\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\"\n  }\n}",
    "direction | string | Y | PREVIOUS, NEXT"
  ]
},
    {
  "title": "Display-Directive > Update",
  "hash": "#update",
  "sentences": [
    "Update",
    "화면 갱신 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Update\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    ...\n  }\n}",
    "token | string | Y | 변경된 template 의 token",
    "- | - | Y | template payload 중 변경된 부분"
  ]
},
    {
  "title": "Display-Directive > Directive - Template",
  "hash": "#directive---template-",
  "sentences": [
    "Directive - Template"
  ]
},
    {
  "title": "Display-Directive > FullText1/2/3, ImageText1/2/3/4",
  "hash": "#fulltext123-imagetext1234",
  "sentences": [
    "FullText1/2/3, ImageText1/2/3/4",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"FullText1\" | \"FullText2\" | \"FullText2\" | \"FullText3\" | \"ImageText1\" | \"ImageText2\" | \"ImageText3\" | \"ImageText4\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"content\": {\n      \"image\": ImageObject,\n      \"imageAlign\": \"{{STRING}}\"\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"footer\": TextObject\n    },\n    \"grammarGuide\": GrammarGuide,\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "content | object | Y | -",
    "content.image | ImageObject | N | -",
    "content.imageAlign | string | N | LEFT, RIGHT",
    "content.header | TextObject | N | 본문 제목- 줄바꿈 가능 (‘\\n’)",
    "content.body | TextObject | N | 본문 내용- 줄바꿈 가능 (‘\\n’)- Scrollable",
    "content.footer | TextObject | N | 보조 설명",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | bool | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | bool | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > TextList1/2, ImageList1/2/3",
  "hash": "#textlist12-imagelist123",
  "sentences": [
    "TextList1/2, ImageList1/2/3",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"TextList1\" | \"TextList2\" | \"ImageList1\" | \"ImageList2\" | \"ImageList3\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"badgeNumber\": {{BOOLEAN}},\n    \"badgeNumberMode\": \"{{STRING}}\",\n    \"focusable\": {{BOOLEAN}},\n    \"anchorItemToken\": \"{{STRING}}\",\n    \"listItems\": [\n      {\n        \"token\": \"{{STRING}}\",\n        \"image\": ImageObject,\n        \"icon\": ImageObject,\n        \"header\": TextObject,\n        \"body\": TextObject,\n        \"footer\": TextObject,\n        \"type\": \"{{STRING}}\",\n        \"toggle\": ToggleButtonObject,\n        \"eventType\": \"{{STRING}}\",\n        \"textInput\": {\n          \"text\": \"{{STRING}}\",\n          \"playServiceId\": \"{{STRING}}\"\n        }\n      }\n    ]\n    \"grammarGuide\": GrammarGuide,\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부(true - 표시함, false - 표시하지 않음)default - false",
    "badgeNumberMode | string | N | badge 숫자를 설정하는 방법IMMUTABILITY : item의 위치가 변경되어도 badge 숫자는 유지됨PAGE : item의 위치가 변경되었을 때 첫 번째 보여지는 item의 badge 숫자가 1부터 시작됨default - IMMUTABILITY",
    "focusable | bool | N | List Template의 item들이 focus 가능한지 여부default - true",
    "anchorItemToken | string | N | display 될 때 첫 번째로 보여지는 아이템의 토큰",
    "listItems | array | Y | Scrollable",
    "listItems.token | string | Y | 클릭은 한 item 전체에서 가능",
    "listItems.image | ImageObject | N | -",
    "listItems.icon | ImageObject | N | -",
    "listItems.header | TextObject | N | 본문 제목 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.body | TextObject | N | 본문 내용 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.footer | TextObject | N | 보조설명 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.type | string | N | list item의 type을 의미하며, 정의하지 않으면 위의 예시와 같은 일반형을 의미함.“SEPARATOR”로 정의할 경우에는 아래와 같은 header만이 유효한 구분용 타이틀 항목이 표시됨.",
    "listItems.toggle | ToggleButtonObject | N | 리스트아이템의 우측에 표시되는 토글 버튼",
    "listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected-  default (eventType 값이 없는 경우 기본값)- Text.TextInput -  default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | Y | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | bool | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | bool | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > TextList3/4",
  "hash": "#textlist34",
  "sentences": [
    "TextList3/4",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"TextList3\" | \"TextList4\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"badgeNumber\": {{BOOLEAN}},\n    \"badgeNumberMode\": \"{{STRING}}\",\n    \"focusable\": {{BOOLEAN}},\n    \"anchorItemToken\": \"{{STRING}}\",\n    \"listItems\": [\n      {\n        \"token\": \"{{STRING}}\",\n        \"image\": ImageObject,\n        \"icon\": ImageObject,\n        \"header\": TextObject,\n        \"body\": [TextObject],\n        \"footer\": TextObject,\n        \"button\": ToggleButtonObject,\n        \"eventType\": \"{{STRING}}\",\n        \"textInput\": {\n          \"text\": \"{{STRING}}\",\n          \"playServiceId\": \"{{STRING}}\"\n        }\n      }\n    ]\n    \"caption\": TextObject,\n    \"grammarGuide\": GrammarGuide,\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부(true - 표시함, false - 표시하지 않음)default - false",
    "badgeNumberMode | string | N | badge 숫자를 설정하는 방법IMMUTABILITY : item의 위치가 변경되어도 badge 숫자는 유지됨PAGE : item의 위치가 변경되었을 때 첫 번째 보여지는 item의 badge 숫자가 1부터 시작됨default - IMMUTABILITY",
    "focusable | bool | N | List Template의 item들이 focus 가능한지 여부 default - true",
    "anchorItemToken | string | N | display 될 때 첫 번째로 보여지는 아이템의 토큰",
    "listItems | array | Y | Scrollable",
    "listItems.token | string | Y | 클릭은 한 item 전체에서 가능",
    "listItems.image | ImageObject | N | -",
    "listItems.icon | ImageObject | N | -",
    "listItems.header | TextObject | N | 본문 제목 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.body | array of TextObject | N | 본문 내용 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.footer | TextObject | N | 보조설명 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.button | ButtonObject | N | List 아이템의 버튼 body가 2줄인 경우에 최적화 되어 있음.",
    "listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected :  default (eventType 값이 없는 경우 기본값)- Text.TextInput :  default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | Y | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "caption | TextObject | N | 전체 리스트 아이템들에 대한 보조설명 텍스트 길이 : 최대 2줄(단말에 따라 1줄)",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | bool | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | bool | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Weather1/2",
  "hash": "#weather12",
  "sentences": [
    "Weather1/2",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Weather1\" | \"Weather2\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"content\": {\n      \"header\": TextObject,\n      \"image\": ImageObject,\n      \"temperature\": {\n        \"current\": TextObject,\n        \"max\": TextObject,\n        \"min\": TextObject\n      },\n      \"body\": TextObject,\n      \"footer\": TextObject,\n      \"listItems\": [\n        {\n          \"header\": TextObject,\n          \"image\": ImageObject,\n          \"body\": TextObject,\n          \"footer\": TextObject\n        }\n      ]\n    },\n    \"grammarGuide\": GrammarGuide,\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "content.header | TextObject | N | 날씨정보를 나타내는 헤더 문자열",
    "content.image | TextObject | N | 날씨정보를 나타내는 이미지",
    "content.temperature.current | TextObject | N | 현재 온도",
    "content.temperature.max | TextObject | N | 최고 온도",
    "content.temperature.min | TextObject | N | 최저 온도",
    "content.body | TextObject | N | 미세먼지, 오전, 건조주의보 등의 날씨에 대한 설명 HTML 표현 가능",
    "content.footer | TextObject | N | body 아래 표현되는 텍스트(html 가능)",
    "content.listItems | list | N | 시간별 날씨 정보 표현을 위한 리스트",
    "content.listItems.header | TextObject | N | -",
    "content.listItems.image | ImageObject | N | -",
    "content.listItems.body | TextObject | N | -",
    "content.listItems.footer | TextObject | N | -",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | bool | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | bool | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Weather3/4",
  "hash": "#weather34",
  "sentences": [
    "Weather3/4",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Weather3\" | \"Weather4\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n      \"playServiceId\": \"{{STRING}}\",\n      \"token\": \"{{STRING}}\",\n      \"contextLayer\": \"{{STRING}}\",\n      \"duration\": \"{{STRING}}\",\n      \"title\": TextObject,\n      \"background\": BackgroundObject,\n      \"content\": {\n        \"listItems\": [\n          {\n            \"header\": TextObject,\n            \"body\": TextObject,\n            \"image\": ImageObject,\n            \"temperature\": {\n              \"max\": TextObject,\n              \"min\": TextObject\n            },\n            \"footer\": TextObject,\n            \"focus\": {{Boolean}}\n          }\n        ]\n      },\n    \"grammarGuide\": GrammarGuide,\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "listItems | list | N | 현재는 최대 2개의 아이템을 보여주고 있음",
    "listItems.header | TextObject | N | item의 최상위 텍스트",
    "listItems.body | TextObject | N | item의 주요내용 텍스트",
    "listItems.image | ImageObject | N | item의 주 이미지",
    "listItems.temperature.max | TextObject | N | 최대 온도",
    "listItems.temperature.min | TextObject | N | 최저 온도",
    "listItems.footer | TextObject | N | 기타정보를 위한 텍스트",
    "listItems.focus | boolean | N | focus 여부(bold 처리)",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | bool | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | bool | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Weather5",
  "hash": "#weather5",
  "sentences": [
    "Weather5",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Weather5\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"content\": {\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"footer\": TextObject,\n      \"progress\": {{LONG}},\n      \"min\": TextObject,\n      \"max\": TextObject,\n      \"icon\": ImageObject\n    },\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "content. header | TextObject | N | 헤더 문자열",
    "content. body | TextObject | N | 게이지 중앙의 문자열",
    "content. footer | TextObject | N | 게이지 중앙 하단의 부연 문자열",
    "content. progress | long | N | 게이지 진행도(0에서 1사이의 값)",
    "content. progressColor | String | N | 게이지의 색(default는 red)",
    "content. min | TextObject | N | 게이지 최저값",
    "content. max | TextObject | N | 게이지 최고값",
    "content. icon | ImageObject | N | 게이지 아이콘 이미지",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > FullImage",
  "hash": "#fullimage",
  "sentences": [
    "FullImage",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"FullImage\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"content\": {\n      \"image\": ImageObject\n    },\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "content.image | ImageObject | Y | -",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Score1",
  "hash": "#score1",
  "sentences": [
    "Score1",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Score1\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"content\": {\n      \"schedule\": TextObject,\n      \"status\": TextObject,\n      \"match\": [\n        {\n          \"header\": TextObject,\n          \"body\": TextObject,\n          \"footer\": TextObject,\n          \"image\": ImageObject,\n          \"score\": TextObject\n        }\n      ]\n    },\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "content.schedule | TextObject | N | 경기 스케줄 정보",
    "content.status | TextObject | Y | 경기 상태",
    "content.match | list | Y | 팀정보를 노출하기 위한 리스트",
    "content.match.header | TextObject | Y | 본문 제목(1줄)",
    "content.match.body | TextObject | N | 본문 내용(1줄)",
    "content.match.footer | TextObject | N | 보조 설명(2줄)",
    "content.match.image | ImageObject | Y | 팀로고",
    "content.match.score | TextObject | Y | 스코어",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Score2",
  "hash": "#score2",
  "sentences": [
    "Score2",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Score2\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"listItems\": [\n      {\n        \"token\": \"{{STRING}}\",\n        \"eventType\": \"{{STRING}}\",\n        \"textInput\": {\n          \"text\": \"{{STRING}}\",\n          \"playServiceId\": \"{{STRING}}\"\n        },\n        \"schedule\": TextObject,\n        \"status\": TextObject,\n        \"match\": [\n          {\n            \"header\": TextObject,\n            \"body\": TextObject,\n            \"footer\": TextObject,\n            \"image\": ImageObject,\n            \"score\": TextObject\n          }\n        ]\n      }\n    ],\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "listItems | list | Y | -",
    "listItems.token | string | Y | -",
    "listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected : default (eventType 값이 없는 경우 기본값)- Text.TextInput :  default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | Y | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "listItems.schedule | TextObject | N | 경기 스케줄 정보",
    "listItems.status | TextObject | Y | 경기 상태",
    "listItems.match | list | Y | 팀정보",
    "listItems.match.header | TextObject | Y | 본문 제목(1줄)",
    "listItems.match.body | TextObject | N | 본문 내용(2줄)",
    "listItems.match.image | ImageObject | Y | 팀로고",
    "listItems.match.score | TextObject | Y | 스코어",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > SearchList1",
  "hash": "#searchlist1",
  "sentences": [
    "SearchList1",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"SearchList1\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"badgeNumber\": {{Boolean}},\n    \"badgeNumberMode\": \"{{STRING}}\",\n    \"listItems\": [\n      {\n        \"token\": \"{{STRING}}\",\n        \"eventType\": \"{{STRING}}\",\n        \"textInput\": {\n          \"text\": \"{{STRING}}\",\n          \"playServiceId\": \"{{STRING}}\"\n        },\n        \"title\": TextObject,\n        \"subtitle\": TextObject,\n        \"description\": TextObject,\n        \"image\": ImageObject,\n        \"category\": \"{{String}}\",\n        \"badge\": TextObject,\n        \"subBadge\": TextObject,\n        \"subIcon\": ImageObject\n      }\n    ],\n    \"grammarGuide\": [],\n    \"metadata\": {},\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부(true - 표시함, false - 표시하지 않음) default : false",
    "badgeNumberMode | string | N | badge 숫자를 설정하는 방법IMMUTABILITY : item의 위치가 변경되어도 badge 숫자는 유지됨PAGE : item의 위치가 변경되었을 때 첫 번째 보여지는 item의 badge 숫자가 1부터 시작됨default - IMMUTABILITY",
    "listItems.token | string | Y | -",
    "listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected : default (eventType 값이 없는 경우 기본값)- Text.TextInput : default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | Y | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "listItems.title | TextObject | Y | item의 제목 텍스트",
    "listItems.subtitle | TextObject | N | category가 people, epg인 경우에만 표시됨.",
    "listItems.description | TextObject | N | category가 people인 경우에만 표시됨.",
    "listItems.image | ImageObject | N | item의 배경 이미지 vod, epg인 경우는 필수.",
    "listItems.category | TextObject | Y | item의 종류. vod, epg, people 중 한가지 값을 가져야 함.",
    "listItems.badge | TextObject | N | 아이템 우상단에 표시되는 뱃지",
    "listItems.subBadge | TextObject | N | 아이템 좌상단에 표시되는 뱃지",
    "listItems.subIcon | ImageObject | N | epg category인 경우, subtitle 좌측에 표시되는 icon",
    "grammarGuide | GrammarGuide | N | -",
    "metadata | jsonObject | N | display에 대한 임의의 부가정보",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > SearchList2",
  "hash": "#searchlist2",
  "sentences": [
    "SearchList2",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"SearchList2\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"content\": {\n      \"body\": TextObject,\n      \"footer\": TextObject,\n      \"listItems\": [\n        {\n          \"token\": \"{{STRING}}\",\n          \"eventType\": \"{{STRING}}\",\n          \"textInput\": {\n            \"text\": \"{{STRING}}\",\n            \"playServiceId\": \"{{STRING}}\"\n          },\n          \"header\": TextObject\n        }\n      ]\n    },\n    \"grammarGuide\": [],\n    \"metadata\": {},\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "content.body | TextObject | Y | 본문 텍스트",
    "content.footer | TextObject | Y | -",
    "content.listItems | list | N | -",
    "content.listItems.token | string | Y | -",
    "content.listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected : default (eventType 값이 없는 경우 기본값)- Text.TextInput : default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | Y | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "content.listItems.header | TextObject | Y | -",
    "grammarGuide | GrammarGuide | N | -",
    "metadata | jsonObject | N | display에 대한 임의의 부가정보",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > UnifiedSearch1",
  "hash": "#unifiedsearch1",
  "sentences": [
    "UnifiedSearch1",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"UnifiedSearch1\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"badgeNumber\": {{Boolean}},\n    \"badgeNumberMode\": \"{{STRING}}\",\n    \"listItems\": [\n      {\n        \"type\": \"{{STRING}}\",\n        \"token\": \"{{STRING}}\",\n        \"eventType\": \"{{STRING}}\",\n        \"textInput\": {\n          \"text\": \"{{STRING}}\",\n          \"playServiceId\": \"{{STRING}}\"\n        },\n        \"title\": TextObject,\n        \"titleIcon\": ImageObject,\n        \"subtitle\": TextObject,\n        \"description\": TextObject,\n        \"image\": ImageObject\n      }\n    ],\n    \"grammarGuide\": [],\n    \"metadata\": {},\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "titltIcon | TextObject | N | -",
    "background | BackgroundObject | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부(true - 표시함, false - 표시하지 않음) default : false",
    "badgeNumberMode | string | N | badge 숫자를 설정하는 방법IMMUTABILITY : item의 위치가 변경되어도 badge 숫자는 유지됨PAGE : item의 위치가 변경되었을 때 첫 번째 보여지는 item의 badge 숫자가 1부터 시작됨default - IMMUTABILITY",
    "listItems | object | Y | -",
    "listItems.type | string | Y | 아이템의 타입- MAIN : 현재 처리 중인 도메인의 아이템 (ex. 비디오)- TOPIC : 다른 리스트 아임템과 동일하게 스크롤- SEPARATOR : 리스트 아이템간의 구분자 (클릭할 수 없음)- ETC : 다른 도메인에서 처리하기 위한 아이템 (ex. 음악)",
    "listItems.token | string | N | MAIN : mandatory- TOPIC : optional (포함되는 경우 해당 항목을 클릭할 수 있음)- token을 포함하지 않으면 클릭할 수 없고, focus도 이동하지 않으며, context의 visibleTokenList에도 포함되지 않음- SEPARATOR : 포함하면 안됨 - ETC : mandatory",
    "listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected : default (eventType 값이 없는 경우 기본값)- Text.TextInput : default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | N | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "listItems.title | TextObject | Y | item의 제목 텍스트",
    "listItems.subtitle | TextObject | N | category가 people, epg인 경우에만 표시됨.",
    "listItems.description | TextObject | N | category가 people인 경우에만 표시됨.",
    "listItems.image | ImageObject | N | item의 배경 이미지 vod, epg인 경우는 필수.",
    "listItems.category | TextObject | N (listItems.type == MAIN이면 Y) | type이 MAIN인 경우는 꼭 포함해야 함 item의 종류.vod, epg, people 중 한가지 값을 가져야 함.",
    "listItems.subIcon | ImageObject | N | epg category인 경우, subtitle 좌측에 표시되는 icon",
    "listItems.progress | long | N | epg category인 경우, image 아래에 표시되는 프로그레스바- 0~100의 값을 가지며 %를 의미",
    "listItems.topLeft | BadgeObject | N | 아이템 좌상단에 표시되는 뱃지",
    "listItems.topRight | BadgeObject | N | 아이템 우상단에 표시되는 뱃지",
    "listItems.bottomLeft | BadgeObject | N | 아이템 좌하단에 표시되는 뱃지",
    "listItems.bottomRight | BadgeObject | N | 아이템 우하단에 표시되는 뱃지",
    "grammarGuide | GrammarGuide | N | -",
    "metadata | jsonObject | N | display에 대한 임의의 부가정보",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > CommerceList",
  "hash": "#commercelist",
  "sentences": [
    "CommerceList",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"CommerceList\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"badgeNumber\": {{Boolean}},\n    \"badgeNumberMode\": \"{{STRING}}\",\n    \"focusable\": {{Boolean}},\n    \"anchorItemToken\": \"{{STRING}}\",\n    \"listItems\": [\n      {\n        \"token\": \"{{STRING}}\",\n        \"eventType\": \"{{STRING}}\",\n        \"textInput\": {\n          \"text\": \"{{STRING}}\",\n          \"playServiceId\": \"{{STRING}}\"\n        },\n        \"image\": ImageObject,\n        \"header\": TextObject,\n        \"body\": TextObject,\n        \"footer\": TextObject,\n        \"detail\": TextObject,\n        \"price\": TextObject,\n        \"priceDesc\": TextObject\n      }\n    ],\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부(true - 표시함, false - 표시하지 않음) default : false",
    "badgeNumberMode | string | N | badge 숫자를 설정하는 방법IMMUTABILITY : item의 위치가 변경되어도 badge 숫자는 유지됨PAGE : item의 위치가 변경되었을 때 첫 번째 보여지는 item의 badge 숫자가 1부터 시작됨default - IMMUTABILITY",
    "focusable | bool | N | List Template의 item들이 focus 가능한지 여부 default - true",
    "anchorItemToken | string | N | display 될 때 첫 번째로 보여지는 아이템의 토큰",
    "listItems | list | Y | -",
    "listItems.token | string | Y | -",
    "listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected : default (eventType 값이 없는 경우 기본값)- Text.TextInput : default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | Y | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "listItems.image | ImageObject | Y | 상품 이미지",
    "listItems.header | TextObject | Y | 제목 (상품명-최대 2줄 노출)",
    "listItems.body | TextObject | N | 본문 내용 (옵션/상세 설명-최대 1줄)",
    "listItems.footer | TextObject | N | 보조 설명1 (최상단에 노출)",
    "listItems.detail | TextObject | N | 보조 설명2",
    "listItems.price | TextObject | Y | 가격 정보1",
    "listItems.priceDesc | TextObject | N | 가격 정보2",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > CommerceOption",
  "hash": "#commerceoption",
  "sentences": [
    "CommerceOption",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"CommerceOption\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"badgeNumber\": {{Boolean}},\n    \"badgeNumberMode\": \"{{STRING}}\",\n    \"focusable\": {{Boolean}},\n    \"anchorItemToken\": \"{{STRING}}\",\n    \"content\": {\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"price\": TextObject,\n      \"priceDesc\": TextObject,\n      \"listItems\": [\n        {\n          \"token\": \"{{STRING}}\",\n          \"eventType\": \"{{STRING}}\",\n          \"textInput\": {\n            \"text\": \"{{STRING}}\",\n            \"playServiceId\": \"{{STRING}}\"\n          },\n          \"header\": TextObject\n        }\n      ]\n    },\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부(true - 표시함, false - 표시하지 않음) default : false",
    "badgeNumberMode | string | N | badge 숫자를 설정하는 방법IMMUTABILITY : item의 위치가 변경되어도 badge 숫자는 유지됨PAGE : item의 위치가 변경되었을 때 첫 번째 보여지는 item의 badge 숫자가 1부터 시작됨default - IMMUTABILITY",
    "focusable | bool | N | List Template의 item들이 focus 가능한지 여부default : true",
    "anchorItemToken | string | N | display 될 때 첫 번째로 보여지는 아이템의 토큰",
    "content.image | ImageObject | Y | 상품 이미지",
    "content.header | TextObject | Y | 제목 (상품명-최대 2줄 노출)",
    "content.body | TextObject | N | 본문 내용 (상품 옵션/상세 설명-최대 2줄 노출)",
    "content.price | TextObject | Y | 가격 정보1",
    "content.priceDesc | TextObject | N | 가격 정보2",
    "content.listItems | list | Y | 옵션 정보",
    "listItems.token | string | Y | 옵션 토큰",
    "listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected : default (eventType 값이 없는 경우 기본값)- Text.TextInput : default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | Y | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "listItems.header | TextObject | Y | 보조설명(옵션명-최대 4줄)",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > CommercePrice",
  "hash": "#commerceprice",
  "sentences": [
    "CommercePrice",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"CommercePrice\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"content\": {\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"price\": TextObject,\n      \"priceDesc\": TextObject,\n      \"icon\": ImageObject,\n      \"subText\": TextObject,\n      \"totalPrice\": TextObject,\n      \"totalPriceDesc\": TextObject,\n      \"confirm\": ButtonObject,\n      \"cancel\": ButtonObject,\n      \"next\": ButtonObject,\n      \"prev\": ButtonObject\n    },\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "content.image | ImageObject | Y | 상품 이미지",
    "content.header | TextObject | Y | 제목 (상품명-최대 2줄)",
    "content.body | TextObject | N | 본문 내용 (상품 옵션/상세 설명-최대 2줄)",
    "content.price | TextObject | Y | 가격 정보1",
    "content.priceDesc | TextObject | N | 가격 정보2",
    "content.icon | ImageObject | N | 결제 정보 아이콘 (ex. sk pay 이미지)",
    "content.subText | TextObject | N | 보조 설명",
    "content.totalPrice | TextObject | Y | 가격정보3 (최종 결제 금액)",
    "content.totalPriceDesc | TextObject | N | 가격정보4 (최종 결제 금액 설명)",
    "content.confirm | ButtonObject | Y | 확인(결제) 버튼",
    "content.cancel | ButtonObject | N | 취소 버튼",
    "content.prev | ButtonObject | N | 이전 페이지 이동(포커스 이동은 안되며 리모콘 ‘<’ 키로만 호출 가능)",
    "content.next | ButtonObject | N | 다음 페이지 이동(포커스 이동은 안되며 리모콘 ‘>’ 키로만 호출 가능)",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > CommerceInfo",
  "hash": "#commerceinfo",
  "sentences": [
    "CommerceInfo",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"CommerceInfo\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"content\": {\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"price\": TextObject,\n      \"priceDesc\": TextObject,\n      \"subText1\": TextObject,\n      \"subText2\": TextObject,\n      \"subText3\": TextObject,\n      \"button\": ButtonObject,\n      \"prev\": ButtonObject,\n      \"next\": ButtonObject\n    },\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "content.image | ImageObject | Y | 상품 이미지",
    "content.header | TextObject | Y | 제목 (상품명-최대 1줄)",
    "content.body | TextObject | N | 본문 내용 (상품 옵션/상세 설명-최대 1줄)",
    "content.price | TextObject | Y | 가격 정보1",
    "content.priceDesc | TextObject | N | 가격 정보2",
    "content.subText1 | TextObject | N | 우측 보조설명1 (최대 2줄)",
    "content.subText2 | TextObject | N | 우측 보조설명2 (최대 2줄)",
    "content.subText3 | TextObject | N | 우측 보조설명3 (최대 2줄)",
    "content.button | ButtonObject | N | -",
    "content.prev | ButtonObject | N | 이전 페이지 이동(포커스 이동은 안되며 리모콘 ‘<’ 키 이벤트만 적용)",
    "content.next | ButtonObject | N | 다음 페이지 이동(포커스 이동은 안되며 리모콘 ‘>’ 키 이벤트만 적용)",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Call1",
  "hash": "#call1",
  "sentences": [
    "Call1",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Call1\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"badgeNumber\": {{Boolean}},\n    \"badgeNumberMode\": \"{{STRING}}\",\n    \"listItems\": [\n      {\n        \"token\": \"{{String}}\",\n        \"eventType\": \"{{STRING}}\",\n        \"textInput\": {\n          \"text\": \"{{STRING}}\",\n          \"playServiceId\": \"{{STRING}}\"\n        },\n        \"image\": ImageObject,\n        \"title\": TextObject,\n        \"subtitle\": TextObject,\n        \"newBadge\": {{Boolean}},\n        \"icon\": ImageObject,\n        \"inactive\": {{Boolean}}\n      }\n    ],\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "listItems.token | string | Y | -",
    "listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected : default (eventType 값이 없는 경우 기본값)- Text.TextInput : default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | Y | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "listItems.image | ImageObject | Y | 프로필 이미지",
    "listItems.title | TextObject | N | -",
    "listItems.subtitle | TextObject | N | -",
    "listItems.newBadge | bool | N | 좌측 상단 붉은 점 표시 여부",
    "listItems.icon | ImageObject | N | 이미지 후측하단의 아이콘 이미지",
    "listItems.inactive | bool | N | dimmed 및 focus 이동시 무시 여부",
    "grammarGuide | GrammarGuide | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부(true - 표시함, false - 표시하지 않음) default : false",
    "badgeNumberMode | string | N | badge 숫자를 설정하는 방법IMMUTABILITY : item의 위치가 변경되어도 badge 숫자는 유지됨PAGE : item의 위치가 변경되었을 때 첫 번째 보여지는 item의 badge 숫자가 1부터 시작됨default - IMMUTABILITY",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Call2",
  "hash": "#call2",
  "sentences": [
    "Call2",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Call2\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"content\": {\n      \"image\": ImageObject,\n      \"icon\": ImageObject,\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"footer\": TextObject,\n      \"description\": TextObject,\n      \"headerIcon\": ImageObject,\n      \"footerIcon\": ImageObject,\n      \"rightArea\": {\n        \"button\": {\n          \"icon\": ImageObject,\n          \"text\": TextObject,\n          \"token\": \"{{String}}\"\n        },\n        \"headerIcon\": ImageObject,\n        \"header\": TextObject,\n        \"body\": TextObject\n      },\n      \"prevButton\": {\n        \"token\": \"{{String}}\"\n      },\n      \"nextButton\": {\n        \"token\": \"{{String}}\"\n      }\n    },\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | Y | -",
    "content.image | ImageObject | Y | 프로필 이미지",
    "content.icon | ImageObject | N | 뱃지 이미지",
    "content.header | TextObject | N | 이름 영역",
    "content.body | TextObject | N | 전화변호 영역",
    "content.footer | TextObject | N | 주소 영역",
    "content.description | TextObject | N | 부연설명 영역",
    "content.headerIcon | ImageObject | N | header 우측 아이콘",
    "content.footerIcon | ImageObject | N | footer 좌측 아이콘",
    "content.rightArea | - | N | 우측 부가정보 영역",
    "content.rightArea.button | - | N | 우측 부가정보 영역 내의 버튼",
    "content.rightArea.button. icon | ImageObject | N | 버튼 아이콘 이미지",
    "content.rightArea.button. text | TextObject | N | 버튼 텍스트",
    "content.rightArea.button. token | string | Y | button 객체를 정의한 경우에는 필수",
    "content.rightArea.headerIcon | ImageObject | N | header 좌측 아이콘 이미지",
    "content.rightArea.header | TextObject | N | header text",
    "content.rightArea.body | TextObject | N | body text",
    "content.nextButton.token | string | Y | nextButton 객체는 선택이지만, nextButton 객체가 정의된다면 필수.",
    "content.prevButton.token | string | Y | prevButton 객체는 선택이지만, prevButton객체가 정의된다면 필수.",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Call3",
  "hash": "#call3",
  "sentences": [
    "Call3",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Call3\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.2\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"profileImageUrl\": \"{{STRING}}\",\n    \"mdn\": \"{{STRING}}\",\n    \"name\": \"{{STRING}}\",\n    \"nameImageUrl\": \"{{STRING}}\",\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "contextLayer | ContextLayer | N | -",
    "profileImageUrl | string | Y | 다른 사람과 통화일때 상대방의 profile image url(Device일 경우는 Device image URL)",
    "nameImageUrl | string | N | 상대방의 display name 우측에 표시되는 이미지URL (T114 일경우 이미지 아이콘 URL)",
    "name | string | Y | 상대방의 display name",
    "mdn | string | N | 상대방의 display mdn",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Timer",
  "hash": "#timer",
  "sentences": [
    "Timer",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Timer\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"alertType\": \"{{STRING}}\",\n    \"scheduledTime\": \"{{STRING}}\",\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}}\n  }\n}",
    "token | string | Y | timer 관련 token",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "alertType | string | Y | alert의 종류 (TIMER, SLEEP)",
    "scheduledTime | string | Y | alert이 동작하는 시간 정보(ISO 8601 포맷, ex. 2019-11-25T20:20:30)",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부"
  ]
},
    {
  "title": "Display-Directive > Dummy",
  "hash": "#dummy",
  "sentences": [
    "Dummy",
    "Display Interface에서 제공하는 화면은 완성된 데이터를 클라이언트로 전송하여 Webview 또는 클라이언트에서 직접 화면을 그리기 위해 사용됨",
    "이와 달리 Dummy는 리스트의 일부 데이터만 전달하고, 클라이언트에서 부족한 데이터를 직접 추가해서 그리기 위해 정의함\n    \n      클라이언트에서 정보 보안 이슈로 서버로 올릴 수 없는 데이터는 DummyTemplate을 받아 필요한 데이터를 채운 뒤에 Display할 수 있음",
    "클라이언트에서 정보 보안 이슈로 서버로 올릴 수 없는 데이터는 DummyTemplate을 받아 필요한 데이터를 채운 뒤에 Display할 수 있음",
    "Dummy는 데이터만을 전달하기 때문에 적절한 타입으로 변환하여 Webview를 호출해도 되고, 클라이언트에서 임의의 형식으로 그려도 관계없음",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"Dummy\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.5\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"subType\": \"{{STRING}}\",\n    \"contextLayer\": \"{{STRING}}\",\n    \"duration\": \"{{STRING}}\",\n    \"title\": TitleObject,\n    \"background\": BackgroundObject,\n    \"badgeNumber\": {{Boolean}},\n    \"badgeNumberMode\": \"{{STRING}}\",\n    \"focusable\": {{Boolean}},\n    \"anchorItemToken\": \"{{STRING}}\",\n    \"listItems\": [\n      {\n        \"token\": \"{{STRING}}\",\n        \"eventType\": \"{{STRING}}\",\n        \"textInput\": {\n          \"text\": \"{{STRING}}\",\n          \"playServiceId\": \"{{STRING}}\"\n        },\n        \"image\": ImageObject,\n        \"header\": TextObject,\n        \"body\": TextObject,\n        \"footer\": TextObject,\n        \"data\": {},\n        \"postback\": {}\n      }\n    ],\n    \"buttonList\": [],\n    \"grammarGuide\": [],\n    \"supportFocusedItemToken\": {{Boolean}},\n    \"supportVisibleTokenList\": {{Boolean}},\n    \"data\": {}\n  }\n}",
    "token | string | Y | template을 식별하기 위한 unique identifier",
    "subType | string | N | 클라이언트에서 자체적으로 정의한 subType을 통해 Dummy를 어떻게 디스플레이해야 할지 식별 Dummy는 다양한 형태로 디스플레이될 수 있기 때문에 정의했으며, 임의의 값을 사용할 수 있음",
    "contextLayer | ContextLayer | N | -",
    "duration | Duration | N | -",
    "title | TitleObject | N | -",
    "background | BackgroundObject | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부(true - 표시함, false - 표시하지 않음)default : false",
    "badgeNumberMode | string | N | badge 숫자를 설정하는 방법IMMUTABILITY : item의 위치가 변경되어도 badge 숫자는 유지됨PAGE : item의 위치가 변경되었을 때 첫 번째 보여지는 item의 badge 숫자가 1부터 시작됨default - IMMUTABILITY",
    "focusable | bool | N | List Template의 item들이 focus 가능한지 여부 default : true",
    "anchorItemToken | string | N | display 될 때 첫 번째로 보여지는 아이템의 토큰",
    "listItems | list | N | Scrollable (스크롤이 불가능한 디바이스에서는 짤림)",
    "listItems.token | string | N | 클릭은 한 item 전체에서 가능",
    "listItems.eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected : default (eventType 값이 없는 경우 기본값)- Text.TextInput : default (eventType 값이 없는 경우 기본값)",
    "listItems.textInput | object | N | eventType == TextTextInput인 경우 필수",
    "listItems.textInput.text | string | Y | 전달할 텍스트",
    "listItems.textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "listItems.image | ImageObject | N | -",
    "listItems.header | TextObject | N | 본문 제목 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.body | TextObject | N | 본문 내용 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.footer | TextObject | N | 보조설명 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.type | string | N | list item의 type을 의미하며, 정의하지 않으면 위의 예시와 같은 일반형을 의미함. “SEPARATOR”로 정의할 경우에는 아래와 같은 header만이 유효한 구분용 타이틀 항목이 표시됨.",
    "listItem.toggle | ToggleButtonObject | N | 리스트아이템의 우측에 표시되는 토글 버튼 ToggleButtonObject 참조",
    "listItem.data | Object | N | 각 item 별로 추가로 필요한 데이터를 JSON 포맷으로 추가 가능",
    "listItem.postback | Object | N | 클릭 시 전달되는 임의의 Object  - 버튼 클릭 시 동작을 위해 필요한 정보를 임의의 JSON 포맷으로 추가 가능  - 기존에 token을 이 용도로 활용하는 경우가 많았는데, token은 identifier 역할을 하도록 하기 위해 추가",
    "buttonList | list of ButtonObject | N | Template 하단의 선택 버튼(ex> “취소”, “확인”)",
    "grammarGuide | GrammarGuide | N | -",
    "supportFocusedItemToken | boolean | N | Context에 있는 focusedItemToken이 지원되어야 하는지 여부",
    "supportVisibleTokenList | boolean | N | Context에 있는 visibleTokenList가 지원되어야 하는지 여부",
    "data | Object | N | 서비스에서 필요한 데이터를 JSON 포맷으로 추가 가능"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/display/display-event",
  "order": 153,
  "indexes": [
    {
  "title": "Display-Event",
  "hash": "",
  "sentences": [
    "Display-Event"
  ]
},
    {
  "title": "Display-Event > ElementSelected",
  "hash": "#elementselected",
  "sentences": [
    "ElementSelected",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"ElementSelected\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y |  "
  ]
},
    {
  "title": "Display-Event > CloseSucceeded",
  "hash": "#closesucceeded",
  "sentences": [
    "CloseSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"CloseSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Display-Event > CloseFailed",
  "hash": "#closefailed",
  "sentences": [
    "CloseFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"CloseFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Display-Event > ControlFocusSucceeded",
  "hash": "#controlfocussucceeded",
  "sentences": [
    "ControlFocusSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"ControlFocusSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\"\n  }\n}",
    "direction | string | N | PREVIOUS, NEXT"
  ]
},
    {
  "title": "Display-Event > ControlFocusFailed",
  "hash": "#controlfocusfailed",
  "sentences": [
    "ControlFocusFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"ControlFocusFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\"\n  }\n}",
    "direction | string | N | PREVIOUS, NEXT"
  ]
},
    {
  "title": "Display-Event > ControlScrollSucceeded",
  "hash": "#controlscrollsucceeded",
  "sentences": [
    "ControlScrollSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"ControlScrollSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\"\n  }\n}",
    "direction | string | N | PREVIOUS, NEXT"
  ]
},
    {
  "title": "Display-Event > ControlScrollFailed",
  "hash": "#controlscrollfailed",
  "sentences": [
    "ControlScrollFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Display\",\n    \"name\": \"ControlScrollFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.4\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\"\n  }\n}",
    "direction | string | N | PREVIOUS, NEXT"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/use-backend-proxy/capability-interfaces/display-interface",
  "order": 49,
  "indexes": [
    {
  "title": "Display Interface",
  "hash": "",
  "sentences": [
    "Display Interface",
    "Display Interface를 사용하면 화면을 가진 디바이스에서 화면에 필요한 정보를 보여줄 수 있습니다. Display Interface 사용하여 Play는 Display Template을 구성하여 화면을 제어할 수 있습니다. 디바이스와 관계없이 하나의 Template이 여러 디스플레이 대응하게 됩니다.",
    "Display Interface를 사용하기 위해서는 우선",
    "General",
    ">",
    "기본 정보",
    "페이지의 Capability Interface에서",
    "Display 제어",
    "항목을",
    "ON",
    "으로 설정해야 합니다.",
    "Display Interface는 AudioPlayer를 위한 Display와 중첩하여 사용하지 않는 것을 권장합니다. 불가피한 경우, Display Interface의 우선순위를 높여서 사용하는 것을 권장합니다."
  ]
},
    {
  "title": "Display Interface > 지원 디바이스 및 해상도",
  "hash": "#지원-디바이스-및-해상도",
  "sentences": [
    "지원 디바이스 및 해상도",
    "현재 Display Interface를 지원하는 디바이스와 해상는 다음과 같습니다.",
    "NU300 | 1280 x 800 | Landscape",
    "Btv | 1920 x 1080 | Landscape"
  ]
},
    {
  "title": "Display Interface > Template Types",
  "hash": "#template-types",
  "sentences": [
    "Template Types",
    "다음과 같은 유형의 화면 Template을 지원합니다.",
    "FullText1 |  | ",
    "FullText2 |  | ",
    "ImageText1 |  | ",
    "ImageText2 |  | ",
    "ImageText3 |  | ",
    "ImageText4 |  | ",
    "TextList1 |  | ",
    "TextList2 |  | ",
    "TextList3 |  | ",
    "TextList4 |  | ",
    "ImageList1 |  | ",
    "ImageList2 |  | ",
    "ImageList3 |  | "
  ]
},
    {
  "title": "Display Interface > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "화면이 나타나는 동안 해당 화면의 token 값을 전달됩니다. Event가 발생하는 경우는 template display되는 상황이기 때문에 context는 함께 전달됩니다.",
    "{\n  \"Display\": {\n    \"version\": \"1.0\",\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "version | string | Y | 인터페이스 버전",
    "playServiceId | string | N | template을 전송한 Play의 play service id",
    "token | string | N | 클릭하는 template을 식별하기 위한 unique identifier"
  ]
},
    {
  "title": "Display Interface > 화면 구성 요소",
  "hash": "#화면-구성-요소",
  "sentences": [
    "화면 구성 요소",
    "Template 유형 별로 알아보기 전, 화면 구성 요소에 대해 알아보겠습니다."
  ]
},
    {
  "title": "Display Interface > TTS",
  "hash": "#tts",
  "sentences": [
    "TTS",
    "String type의 필드에 “",
    "{{TTS}}",
    "“라고 입력하면, Play가 응답으로 내보낸 발화 텍스트를 해당 필드에 채워서 보냅니다.",
    "{\n  \"type\": \"Display.ImageText2\",\n  \"version\": \"1.0\",\n  \"token\": \"TTS Test\",\n  \"title\": {\n    \"logo\": {\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"TTS Test logo\"\n    }\n  },\n  \"content\": {\n    \"imageAlign\": \"LEFT\",\n    \"header\": {\n      \"text\": \"TTS Test header\"\n    },\n    \"image\": {\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"body\": {\n      \"color\": null,\n      \"text\": \"{{$TTS}}\"\n    }\n  }\n}"
  ]
},
    {
  "title": "Display Interface > TitleObject",
  "hash": "#titleobject",
  "sentences": [
    "TitleObject",
    "화면 상단의 타이틀 영역에 들어갈 요소입니다. NU300 화면 상단 왼쪽의 홈 버튼은 기본으로 제공되는 버튼으로 TitleObject와는 무관합니다.",
    "{\n  \"logo\": ImageObject,\n  \"text\": TextObject,\n  \"subtext\": TextObject,\n  \"subicon\": ImageObject,\n  \"button\": TextObject\n}",
    "logo | ImageObject | Y | 투명 배경의 이미지로 제공해야 함(PNG) | 50x50 가로 Size Flexible | STB2부터 적용 예정 사이즈 미정",
    "text | TextObject | Y | 제목 | 42sp, #FFFFFF | 36sp, #1A1A1A",
    "subtext | TextObject | N | 부제목 | 공백 포함 20자 | -",
    "subicon | ImageObject | N | subText 왼쪽에 노출될 서브아이콘 | 위치 : subText 왼쪽 size : 36 x 36dp | 위치 : subText 왼쪽 size : 30 x 30dp",
    "button | TextObject | N | 우측에 위치하는 버튼 (버튼 안의 Text만 정의가능) | - | -"
  ]
},
    {
  "title": "Display Interface > ImageObject",
  "hash": "#imageobject",
  "sentences": [
    "ImageObject",
    "{\n  \"contentDescription\": \"{{STRING}}\",\n  \"sources\": [\n    {\n      \"url\": \"{{STRING}}\",\n      \"size\": \"{{STRING}}\",\n      \"widthPixels\": 1920,\n      \"heightPixels\": 1080\n    },\n    {\n      \"url\": \"{{STRING}}\",\n      \"size\": \"{{STRING}}\",\n      \"widthPixels\": 480,\n      \"heightPixels\": 320\n    },\n    {...}\n  ]\n}",
    "contentDescription | string | N | -",
    "heightPixels | long | N | -",
    "size | string | N | X_SMALL, SMALL, MEDIUM, LARGE, X_LARGE화면 크기별 최적화를 위해 size 정보를 넣는 것을 권장합니다.",
    "sources | list | Y | -",
    "url | string | Y | -",
    "widthPixels | long | N | -",
    "heightPixels | long | N | -",
    "Size 별 권장 사이즈는 아래의 표를 참고하세요.",
    "X_SMALL | 480 x 320",
    "SMALL | 720 x 480",
    "MEDIUM | 960 x 640",
    "LARGE | 1280 x 800",
    "X_LARGE | 1920 x 1080"
  ]
},
    {
  "title": "Display Interface > BackgroundObject",
  "hash": "#backgroundobject",
  "sentences": [
    "BackgroundObject",
    "{\n  \"image\": ImageObject,\n  \"color\": \"{{STRING}}\"\n}",
    "image와 color가 동시에 존재하면 image의 우선순위가 높습니다.",
    "image | ImageObject | N | -",
    "color | string | N | hex color codedefault : #000000",
    "opacity | number | N | NU300에만 유효default : 0.7"
  ]
},
    {
  "title": "Display Interface > TextObject",
  "hash": "#textobject",
  "sentences": [
    "TextObject",
    "{\n  \"text\": \"{{STRING}}\",\n  \"color\": \"{{STRING}}\"\n}",
    "color | string | N | hex color code",
    "style | json | N | 기본적으로는 상위 스타일(directive 등)을 따르며, FullText1, 2의 body text에만 적용 가능.CSS 속성은 모두 가능하며, 다음의 값들을 가질 수 있다.text-align : left, center, rightopacity : 0 ~ 1display : block, inline, nonemargin : 10px예) { \"text-align\":\"center\", \"display\": \"block\"}",
    "text | string | Y | -",
    "TextObject는 Scrollable이 명시된 경우만 스크롤이 가능합니다."
  ]
},
    {
  "title": "Display Interface > ButtonObject",
  "hash": "#buttonobject",
  "sentences": [
    "ButtonObject",
    "{\n  \"text\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\"\n}",
    "text | string | Y | 버튼 텍스트",
    "token | string | Y | 클릭 시 전달될 토큰 값"
  ]
},
    {
  "title": "Display Interface > Template 별 directive",
  "hash": "#template-별-directive",
  "sentences": [
    "Template 별 directive",
    "Display Interface에서는 크게 4종류의 Template을 제공하며, 화면을 닫을 때는 close directive를 사용해야 합니다.",
    "FullText : 텍스트로 화면을 구성할 때 사용합니다.",
    "ImageText : 이미지와 텍스트를 함께 구성할 때 사용합니다.",
    "TextList : 텍스트를 중심으로 리스트를 표현할 때 사용합니다.",
    "ImageList : 이미지를 중심으로 리스트를 표현할 때 사용합니다.",
    "Close : Display Template을 명시적으로 닫을 때 사용합니다."
  ]
},
    {
  "title": "Display Interface > FullText1",
  "hash": "#fulltext1",
  "sentences": [
    "FullText1",
    "형식",
    "{\n  \"type\": \"Display.FullText1\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"content\": {\n    \"header\": TextObject,\n    \"body\": TextObject,\n    \"footer\": TextObject\n  }\n}",
    "type | string | Y | Display.FullText1",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y | -",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "content.header | TextObject | N | 본문 제목- 줄바꿈 가능 (‘\\n’)",
    "content.body | TextObject | Y | 본문 내용- 줄바꿈 가능 (‘\\n’)- Scrollable (스크롤이 불가능한 디바이스[일부 Btv]에서는 최대 4줄까지만 표현)",
    "content.footer | TextObject | N | 보조 설명",
    "Sample Code",
    "{\n  \"type\": \"Display.FullText1\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"NUGU 백과\"\n    }\n  },\n  \"background\": {\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\",\n          \"size\": \"LARGE\"\n        }\n      ]\n    },\n    \"color\": \"\"\n  },\n  \"content\": {\n    \"header\": {\n      \"text\": \"독도\"\n    },\n    \"body\": {\n      \"text\": \"‘독도’는 동해의 남서부인 울릉도와 오키 제도 사이에 있는 섬으로, 동도와 서도를 포함하고 총 91개의 섬들로 이루어져 있습니다.\"\n    },\n    \"footer\": {\n      \"text\": \"출처 : 위키피디아\"\n    }\n  }\n}"
  ]
},
    {
  "title": "Display Interface > 샘플 이미지",
  "hash": "#샘플-이미지",
  "sentences": [
    "샘플 이미지"
  ]
},
    {
  "title": "Display Interface > FullText2",
  "hash": "#fulltext2",
  "sentences": [
    "FullText2",
    "형식",
    "{\n  \"type\": \"Display.FullText2\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"content\": {\n    \"body\": TextObject,\n    \"footer\": TextObject\n  }\n}",
    "type | string | Y | Display.FullText2",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y | -",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "content.body | TextObject | Y | 본문 내용- 줄바꿈 가능 (‘\\n’)- 최대 4줄까지 표현 (넘는 문자는 … 처리)",
    "content.footer | TextObject | N | 보조 설명",
    "Sample Code",
    "{\n  \"type\": \"Display.FullText2\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"날짜/시간\"\n    }\n  },\n  \"background\": {\n    \"color\": \"#465865\"\n  },\n  \"content\": {\n    \"body\": {\n      \"text\": \"오늘은 12월 24일 수요일입니다.\\n오늘 미세먼지는 매우나쁨이네요.\\n그냥 집에만 있어야겠어요.\"\n    },\n    \"footer\": {\n      \"text\": \"오후 6:03\"\n    }\n  }\n}"
  ]
},
    {
  "title": "Display Interface > ImageText1",
  "hash": "#imagetext1",
  "sentences": [
    "ImageText1",
    "형식",
    "{\n  \"type\": \"Display.ImageText1\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"content\": {\n    \"image\": ImageObject,\n    \"imageAlign\": \"{{STRING}}\",\n    \"header\": TextObject,\n    \"body\": TextObject,\n    \"footer\": TextObject\n  }\n}",
    "type | string | Y | Display.ImageText1",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y |  ",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y |  ",
    "background | BackgroundObject | N |  ",
    "content.image | ImageObject | Y |  ",
    "content.imageAlign | string | Y | LEFT, RIGHT",
    "content.header | TextObject | Y | 본문 제목- 줄바꿈 가능 (‘\\n’)- 최대 3줄까지 표현 (넘는 문자는 … 처리)",
    "content.body | TextObject | N | 본문 내용",
    "content.footer | TextObject | N | 보조 설명- 줄바꿈 가능 (‘\\n’)- 최대 2줄까지 표현 (넘는 문자는 … 처리)",
    "Sample Code",
    "{\n  \"type\": \"Display.ImageText1\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"추천 영화\"\n    }\n  },\n  \"background\": {\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\",\n          \"size\": \"LARGE\"\n        }\n      ]\n    }\n  },\n  \"content\": {\n    \"header\": {\n      \"text\": \"알라딘\"\n    },\n    \"body\": {\n      \"text\": \"모험, 가족, 판타지\"\n    },\n    \"footer\": {\n      \"text\": \"머나먼 사막 속 신비의 아그라바 왕국의 시대. 좀도둑 ‘알라딘’은 마법사 ‘자파’의 의뢰로 마법...\"\n    },\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    }\n  }\n}"
  ]
},
    {
  "title": "Display Interface > ImageText2",
  "hash": "#imagetext2",
  "sentences": [
    "ImageText2",
    "형식",
    "{\n  \"type\": \"Display.ImageText2\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"content\": {\n    \"image\": ImageObject,\n    \"imageAlign\": \"{{STRING}}\",\n    \"header\": TextObject,\n    \"body\": TextObject\n  }\n}",
    "type | string | Y | Display.ImageText2",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y |  ",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y |  ",
    "background | BackgroundObject | N |  ",
    "content.image | ImageObject | Y |  ",
    "content.imageAlign | string | Y | LEFT, RIGHT",
    "content.header | TextObject | N | 본문 제목 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "content.body | TextObject | Y | 본문 내용- 줄바꿈 가능 (‘\\n’)- 최대 6줄까지 표현 (넘는 문자는 … 처리)",
    "content.footer | TextObject | N | 보조 설명- 줄바꿈 가능 (‘\\n’)- 최대 2줄까지 표현 (넘는 문자는 … 처리)",
    "Sample Code",
    "{\n  \"type\": \"Display.ImageText2\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"추천 영화\"\n    }\n  },\n  \"background\": {\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\",\n          \"size\": \"LARGE\"\n        }\n      ]\n    }\n  },\n  \"content\": {\n    \"header\": {\n      \"text\": \"알라딘\"\n    },\n    \"body\": {\n      \"text\": \"머나먼 사막 속 신비의 아그라바 왕국의 시대. 좀도둑 ‘알라딘’은 마법사 ‘자파’의 의뢰로 마법 램프를 찾아 나섰다가 주인에게 세 가지 소원을 들어주는 지니를 만나게 되고...\"\n    },\n    \"footer\": {\n      \"text\": \"모험, 가족, 판타지\"\n    },\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    }\n  }\n}"
  ]
},
    {
  "title": "Display Interface > ImageText3",
  "hash": "#imagetext3",
  "sentences": [
    "ImageText3",
    "형식",
    "{\n  \"type\": \"Display.ImageText3\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"content\": {\n    \"image\": ImageObject,\n    \"header\": TextObject,\n    \"body\": TextObject,\n    \"footer\": TextObject\n  }\n}",
    "type | string | Y | Display.ImageText3",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y |  ",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y |  ",
    "background | BackgroundObject | N |  ",
    "content.image | ImageObject | Y |  ",
    "content.header | TextObject | Y | 본문 제목 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "content.body | TextObject | N | 본문 내용- 줄바꿈 가능 (‘\\n’)- Scrollable (스크롤이 불가능한 디바이스[일부 Btv]에서는 최대 4줄까지만 표현)",
    "content.footer | TextObject | N | 보조설명- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "Sample Code",
    "{\n  \"type\": \"Display.ImageText3\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"추천 영화\"\n    }\n  },\n  \"background\": {\n    \"color\": \"#0F336C\"\n  },\n  \"content\": {\n    \"header\": {\n      \"text\": \"알라딘\"\n    },\n    \"body\": {\n      \"text\": \"머나먼 사막 속 신비의 아그라바 왕국의 시대. 좀도둑 ‘알라딘’은 마법사 ‘자파’의 의뢰로 마법 램프를 찾아 나섰다가 주인에게 세 가지 소원을 들어주는 지니를 만나게 되고...\"\n    },\n    \"footer\": {\n      \"text\": \"모험, 가족, 판타지\"\n    },\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    }\n  }\n}"
  ]
},
    {
  "title": "Display Interface > ImageText4",
  "hash": "#imagetext4",
  "sentences": [
    "ImageText4",
    "형식",
    "{\n  \"type\": \"Display.ImageText4\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"content\": {\n    \"image\": ImageObject,\n    \"header\": TextObject,\n    \"body\": TextObject,\n    \"footer\": TextObject\n  }\n}",
    "type | string | Y | Display.ImageText4",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y |  ",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y |  ",
    "background | BackgroundObject | N |  ",
    "content.image | ImageObject | Y |  ",
    "content.header | TextObject | Y | 본문 제목- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "content.body | TextObject | Y | 본문 내용- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "content.footer | TextObject | N | 보조설명- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "Sample Code",
    "{\n  \"type\": \"Display.ImageText4\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"추천 영화\"\n    }\n  },\n  \"background\": {\n    \"color\": \"#0F336C\"\n  },\n  \"content\": {\n    \"header\": {\n      \"text\": \"알라딘\"\n    },\n    \"body\": {\n      \"text\": \"2019.12.24 개봉\"\n    },\n    \"footer\": {\n      \"text\": \"모험, 가족, 판타지\"\n    },\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    }\n  }\n}"
  ]
},
    {
  "title": "Display Interface > TextList1",
  "hash": "#textlist1",
  "sentences": [
    "TextList1",
    "형식",
    "{\n  \"type\": \"Display.TextList1\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"badgeNumber\": true,\n  \"listItems\": [\n    {\n      \"token\": \"{{STRING}}\",\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"footer\": TextObject\n    },\n    {\n      \"token\": \"{{STRING}}\",\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"footer\": TextObject\n    }\n  ]\n}",
    "type | string | Y | Display.TextList1",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y |  ",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부 (true - 표시함, false - 표시하지 않음)default - false",
    "listItems | list | Y | Scrollable (스크롤이 불가능한 디바이스에서는 짤림)",
    "listItems.token | string | Y | 클릭은 한 item 전체에서 가능",
    "listItems.header | TextObject | Y | 본문 제목- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.body | TextObject | Y | 본문 내용- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.footer | TextObject | N | 보조설명- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "Sample Code",
    "{\n  \"type\": \"Display.TextList1\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"발라드 차트\"\n    }\n  },\n  \"background\": {\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\",\n          \"size\": \"LARGE\"\n        }\n      ]\n    }\n  },\n  \"listItems\": [\n    {\n      \"token\": \"{{111}}\",\n      \"header\": {\n        \"text\": \"1위\"\n      },\n      \"body\": {\n        \"text\": \"오늘도 빛나는 너에게\"\n      },\n      \"footer\": {\n        \"text\": \"마크툽(Maktub)\"\n      }\n    },\n    {\n      \"token\": \"{{222}}\",\n      \"header\": {\n        \"text\": \"2위\"\n      },\n      \"body\": {\n        \"text\": \"2002\"\n      },\n      \"footer\": {\n        \"text\": \"Anne-Marie\"\n      }\n    },\n    {\n      \"token\": \"{{333}}\",\n      \"header\": {\n        \"text\": \"3위\"\n      },\n      \"body\": {\n        \"text\": \"사계 (Four Seasons)\"\n      },\n      \"footer\": {\n        \"text\": \"태연(TAEYEON)\"\n      }\n    },\n    {\n      \"token\": \"{{444}}\",\n      \"header\": {\n        \"text\": \"4위\"\n      },\n      \"body\": {\n        \"text\": \"워커홀릭\"\n      },\n      \"footer\": {\n        \"text\": \"볼빨간 사춘기\"\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "Display Interface > TextList2",
  "hash": "#textlist2",
  "sentences": [
    "TextList2",
    "형식",
    "{\n  \"type\": \"Display.TextList2\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"badgeNumber\": true,\n  \"listItems\": [\n    {\n      \"token\": \"{{STRING}}\",\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"footer\": TextObject\n    },\n    {\n      \"token\": \"{{STRING}}\",\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"body\": TextObject,\n      \"footer\": TextObject\n    }\n  ]\n}",
    "type | string | Y | Display.TextList2",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y | -",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y |  ",
    "background | BackgroundObject | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부 (true - 표시함, false - 표시하지 않음)default - false",
    "listItems | list | Y | Scrollable (스크롤이 불가능한 디바이스에서는 짤림)",
    "listItems.token | string | Y | 클릭은 한 item 전체에서 가능",
    "listItems.image | ImageObject | Y | -",
    "listItems.header | TextObject | Y | 본문 제목- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.body | TextObject | Y | 본문 내용- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.footer | TextObject | N | 보조설명- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "Sample Code",
    "{\n  \"type\": \"Display.TextList2\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"발라드 차트\"\n    }\n  },\n  \"background\": {\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\",\n          \"size\": \"LARGE\"\n        }\n      ]\n    }\n  },\n  \"listItems\": [\n    {\n      \"token\": \"{{111}}\",\n      \"header\": {\n        \"text\": \"1\"\n      },\n      \"body\": {\n        \"text\": \"오늘도 빛나는 너에게\"\n      },\n      \"footer\": {\n        \"text\": \"마크툽(Maktub)\"\n      },\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      }\n    },\n    {\n      \"token\": \"{{222}}\",\n      \"header\": {\n        \"text\": \"2\"\n      },\n      \"body\": {\n        \"text\": \"2002\"\n      },\n      \"footer\": {\n        \"text\": \"Anne-Marie\"\n      },\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      }\n    },\n    {\n      \"token\": \"{{333}}\",\n      \"header\": {\n        \"text\": \"3\"\n      },\n      \"body\": {\n        \"text\": \"사계 (Four Seasons)\"\n      },\n      \"footer\": {\n        \"text\": \"태연(TAEYEON)\"\n      },\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      }\n    },\n    {\n      \"token\": \"{{444}}\",\n      \"header\": {\n        \"text\": \"4\"\n      },\n      \"body\": {\n        \"text\": \"워커홀릭\"\n      },\n      \"footer\": {\n        \"text\": \"볼빨간 사춘기\"\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "Display Interface > TextList3",
  "hash": "#textlist3",
  "sentences": [
    "TextList3",
    "형식",
    "{\n  \"type\": \"Display.TextList3\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"badgeNumber\": true,\n  \"listItems\": [\n    {\n      \"token\": \"{{STRING}}\",\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"body\": [\n        TextObjects\n      ],\n      \"footer\": TextObject\n    },\n    {\n      \"token\": \"{{STRING}}\",\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"body\": [\n        TextObjects\n      ],\n      \"footer\": TextObject\n    }\n  ],\n  \"caption\": TextObject\n}",
    "type | string | Y | Display.TextList3",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y |  ",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y |  ",
    "background | BackgroundObject | N |  ",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부 (true - 표시함, false - 표시하지 않음)default - false",
    "listItems | list | Y | Scrollable (스크롤이 불가능한 디바이스에서는 짤림)",
    "listItems.token | string | Y | 클릭은 한 item 전체에서 가능",
    "listItems.image | ImageObject | N |  ",
    "listItems.header | TextObject | Y | 본문 제목- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.body | array of TextObject | Y | 본문 내용- 줄바꿈 허용 / 최대 4줄 - footer 정의 시 3줄 제한 (footer객체는 빈객체({})로도 정의가 되어 있으면 3줄로 제한됨)",
    "listItems.footer | TextObject | N | 보조설명- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "caption | TextObject | N | 전체 리스트 아이템들에 대한 보조설명- 텍스트 길이 : 최대 2줄(단말에 따라 1줄)",
    "Sample Code",
    "{\n  \"type\": \"Display.TextList3\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"추천 영화\"\n    }\n  },\n  \"background\": {\n    \"color\": \"#0F336C\"\n  },\n  \"badgeNumber\": true,\n  \"listItems\": [\n    {\n      \"token\": \"{{111}}\",\n      \"header\": {\n        \"text\": \"알라딘\"\n      },\n      \"body\": [\n        {\n          \"text\": \"감독 : 가이 리치\"\n        },\n        {\n          \"text\": \"출연 : 윌 스미스, 메나 마수드, 나오미 누구지?\"\n        },\n        {\n          \"text\": \"개봉일자 : 2019.5.23\"\n        },\n        {\n          \"text\": \"전체 관람가\"\n        }\n      ],\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      }\n    },\n    {\n      \"token\": \"{{222}}\",\n      \"header\": {\n        \"text\": \"어벤저스 엔드게임\"\n      },\n      \"body\": [\n        {\n          \"text\": \"감독: 안소니 루소, 조 루소\"\n        }\n      ],\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "Display Interface > TextList4",
  "hash": "#textlist4",
  "sentences": [
    "TextList4",
    "형식",
    "{\n  \"type\": \"Display.TextList4\",\n  \"version\": \"1.0\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"listItems\": [\n    {\n      \"header\": TextObject,\n      \"body\": [\n        TextObjects\n      ],\n      \"button\": ButtonObject\n    }\n  ]\n}",
    "type | string | Y | Display.TextList4",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y | -",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "listItems | list | Y | Scrollable (스크롤이 불가능한 디바이스에서는 짤림)",
    "listItems.header | TextObject | Y | 본문 제목- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.body | array of TextObject | Y | List 아이템의 본문 내용- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.button | ButtonObject | N | List 아이템의 버튼- body가 2줄인 경우에 최적화 되어 있음",
    "Sample Code",
    "{\n  \"type\": \"Display.TextList4\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"추천 영화\"\n    }\n  },\n  \"background\": {\n    \"color\": \"#0F336C\"\n  },\n  \"listItems\": [\n    {\n      \"token\": \"{{111}}\",\n      \"header\": {\n        \"text\": \"알라딘\"\n      },\n      \"body\": [\n        {\n          \"text\": \"머나먼 사막 속 신비의 아그라바 왕국의 시대.\"\n        },\n        {\n          \"text\": \"좀도둑 ‘알라딘’은 마법사 ‘자파’의 의뢰로 마법 램프를 찾아 나섰다가 말았다가~\"\n        }\n      ],\n      \"button\": {\n        \"text\": \"상세보기\",\n        \"token\": \"{{button1}}\"\n      }\n    },\n    {\n      \"token\": \"{{222}}\",\n      \"header\": {\n        \"text\": \"알라딘\"\n      },\n      \"body\": [\n        {\n          \"text\": \"머나먼 사막 속 신비의 아그라바 왕국의 시대.\"\n        },\n        {\n          \"text\": \"좀도둑 ‘알라딘’은 마법사 ‘자파’의 의뢰로 마법 램프를 찾아 나섰다가 말았다가~\"\n        }\n      ],\n      \"button\": {\n        \"text\": \"상세보기\",\n        \"token\": \"{{button1}}\"\n      }\n    },\n    {\n      \"token\": \"{{333}}\",\n      \"header\": {\n        \"text\": \"알라딘\"\n      },\n      \"body\": [\n        {\n          \"text\": \"머나먼 사막 속 신비의 아그라바 왕국의 시대.\"\n        },\n        {\n          \"text\": \"좀도둑 ‘알라딘’은 마법사 ‘자파’의 의뢰로 마법 램프를 찾아 나섰다가 말았다가~\"\n        }\n      ],\n      \"button\": {\n        \"text\": \"상세보기\",\n        \"token\": \"{{button1}}\"\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "Display Interface > ImageList1",
  "hash": "#imagelist1",
  "sentences": [
    "ImageList1",
    "형식",
    "{\n  \"type\": \"Display.ImageList1\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"badgeNumber\": true,\n  \"listItems\": [\n    {\n      \"token\": \"{{STRING}}\",\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"footer\": TextObject\n    },\n    {\n      \"token\": \"{{STRING}}\",\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"footer\": TextObject\n    }\n  ]\n}",
    "type | string | Y | Display.ImageList1",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y | -",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부 (true - 표시함, false - 표시하지 않음)default - false",
    "badgeNumberStyle | json | N | 아래와 같은 Json으로 badge style 정의{\"background\": \"#f0f\", \"color\": \"red\", \"border-radius\": \"10px\"}- background : Container의 color- color : Badge font color- border-radius : radius",
    "listItems | list | Y | Scrollable (스크롤이 불가능한 디바이스에서는 짤림)",
    "listItems.token | string | Y | 클릭은 한 item 전체에서 가능",
    "listItems.image | ImageObject | Y | -",
    "listItems.header | TextObject | Y | 본문 제목- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.footer | TextObject | N | 보조설명- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "Sample Code",
    "{\n  \"type\": \"Display.ImageList1\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"내 플레이리스트\"\n    }\n  },\n  \"background\": {\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\",\n          \"size\": \"LARGE\"\n        }\n      ]\n    }\n  },\n  \"badgeNumber\": true,\n  \"listItems\": [\n    {\n      \"token\": \"{{111}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"감성 리메이크\"\n      },\n      \"footer\": {\n        \"text\": \"19곡\"\n      }\n    },\n    {\n      \"token\": \"{{222}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"Deep Plow\"\n      },\n      \"footer\": {\n        \"text\": \"29곡\"\n      }\n    },\n    {\n      \"token\": \"{{333}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"운동 할 때 무한 반복해도 절대 질리지 않는 트랙들!\"\n      },\n      \"footer\": {\n        \"text\": \"9곡\"\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "Display Interface > ImageList2",
  "hash": "#imagelist2",
  "sentences": [
    "ImageList2",
    "형식",
    "{\n  \"type\": \"Display.ImageList1\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"badgeNumber\": true,\n  \"badgeNumberStyle\": {\n    \"background\": \"#f0f\",\n    \"color\": \"red\",\n    \"border-radius\": \"10px\"\n  },\n  \"listItems\": [\n    {\n      \"token\": \"{{STRING}}\",\n      \"image\": ImageObject,\n      \"icon\": ImageObject,\n      \"header\": TextObject,\n      \"footer\": TextObject\n    },\n    {\n      \"token\": \"{{STRING}}\",\n      \"image\": ImageObject,\n      \"icon\": ImageObject,\n      \"header\": TextObject,\n      \"footer\": TextObject\n    }\n  ]\n}",
    "type | string | Y | Display.ImageList2",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y | -",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y | -",
    "background | BackgroundObject | N | -",
    "badgeNumber | bool | N | 사용자가 숫자(순서)를 발화하여 item을 선택하도록 badge를 표시할지 여부 (true - 표시함, false - 표시하지 않음)default - false",
    "badgeNumberStyle | json | N | 아래와 같은 Json으로 badge style 정의{\"background\": \"#f0f\", \"color\": \"red\", \"border-radius\": \"10px\"}- background : Container의 color- color : Badge font color- border-radius : radius",
    "listItems | list | Y | Scrollable (스크롤이 불가능한 디바이스에서는 짤림)",
    "listItems.token | string | Y | 클릭은 한 item 전체에서 가능",
    "listItems.image | ImageObject | Y | -",
    "listItems.icon | ImageObject | N | 상태 아이콘",
    "listItems.header | TextObject | Y | 본문 제목- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.footer | TextObject | N | 보조설명- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "Sample Code",
    "{\n  \"type\": \"Display.ImageList2\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"내 플레이리스트\"\n    }\n  },\n  \"background\": {\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\",\n          \"size\": \"LARGE\"\n        }\n      ]\n    }\n  },\n  \"listItems\": [\n    {\n      \"token\": \"{{111}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"감성 리메이크\"\n      },\n      \"footer\": {\n        \"text\": \"19곡\"\n      },\n      \"icon\": {\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"SMALL\"\n          }\n        ]\n      }\n    },\n    {\n      \"token\": \"{{222}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"Deep Plow\"\n      },\n      \"footer\": {\n        \"text\": \"1분 34초\"\n      },\n      \"icon\": {\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"SMALL\"\n          }\n        ]\n      }\n    },\n    {\n      \"token\": \"{{333}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"운동 할 때 무한 반복해도 절대 질리지 않는 트랙들!\"\n      },\n      \"footer\": {\n        \"text\": \"9곡\"\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "Display Interface > ImageList3",
  "hash": "#imagelist3",
  "sentences": [
    "ImageList3",
    "형식",
    "{\n  \"type\": \"Display.ImageList3\",\n  \"version\": \"1.0\",\n  \"token\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"title\": TitleObject,\n  \"background\": BackgroundObject,\n  \"listItems\": [\n    {\n      \"token\": \"{{STRING}}\",\n      \"image\": ImageObject,\n      \"header\": TextObject,\n      \"icon\": ImageObject\n    }\n  ]\n}",
    "type | string | Y | Display.ImageList3",
    "version | string | Y | 인터페이스 버전, 기본값은 1.0",
    "playServiceId | string | Y | 현재 template을 전송하는 play service id",
    "token | string | Y |  ",
    "duration | string | N | SHORT(default), MID, LONG, LONGEST- SHORT : 7sec- MID : 15sec- LONG : 30sec- LONGEST : 10min",
    "title | TitleObject | Y |  ",
    "background | BackgroundObject | N |  ",
    "listItems | list | Y | Scrollable (스크롤이 불가능한 디바이스에서는 짤림)",
    "listItems.token | string | Y | 클릭 시에 전달될 토큰",
    "listItems.header | TextObject | Y | List 제목- 최대 1줄까지 표현 (넘는 문자는 … 처리)",
    "listItems.image | ImageObject | Y | List 이미지- 리스트 제목 좌측에 위치하는 이미지",
    "listItems.icon | TextObject | N | icon 이미지- 리스트 제목 우측에 위치하는 new 등의 배지",
    "Sample Code",
    "{\n  \"type\": \"Display.ImageList3\",\n  \"version\": \"1.0\",\n  \"playServiceId\": \"{{playServiceId}}\",\n  \"token\": \"{{token}}\",\n  \"title\": {\n    \"logo\": {\n      \"contentDescription\": \"{{contentDescription}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\"\n        }\n      ]\n    },\n    \"text\": {\n      \"text\": \"내 플레이리스트\"\n    }\n  },\n  \"background\": {\n    \"image\": {\n      \"contentDescription\": \"{{STRING}}\",\n      \"sources\": [\n        {\n          \"url\": \"http://someurl.com/name.png\",\n          \"size\": \"LARGE\"\n        }\n      ]\n    }\n  },\n  \"listItems\": [\n    {\n      \"token\": \"{{111}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"감성 리메이크\"\n      },\n      \"icon\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"X_SMALL\"\n          }\n        ]\n      }\n    },\n    {\n      \"token\": \"{{222}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"Deep Plow\"\n      }\n    },\n    {\n      \"token\": \"{{333}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"운동 할 때 무한 반복해도 절대 질리지 않는 트랙들!\"\n      }\n    },\n    {\n      \"token\": \"{{111}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"감성 리메이크\"\n      }\n    },\n    {\n      \"token\": \"{{222}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"Deep Plow\"\n      }\n    },\n    {\n      \"token\": \"{{333}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"운동 할 때 무한 반복해도 절대 질리지 않는 트랙들!\"\n      }\n    },\n    {\n      \"token\": \"{{111}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\",\n            \"size\": \"LARGE\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"감성 리메이크\"\n      }\n    },\n    {\n      \"token\": \"{{222}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"Deep Plow\"\n      }\n    },\n    {\n      \"token\": \"{{333}}\",\n      \"image\": {\n        \"contentDescription\": \"{{STRING}}\",\n        \"sources\": [\n          {\n            \"url\": \"http://someurl.com/name.png\"\n          }\n        ]\n      },\n      \"header\": {\n        \"text\": \"운동 할 때 무한 반복해도 절대 질리지 않는 트랙들!\"\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "Display Interface > 기타 directive",
  "hash": "#기타-directive",
  "sentences": [
    "기타 directive"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/sdk-design-guide/display-template",
  "order": 205,
  "indexes": [
    {
  "title": "Display Template",
  "hash": "",
  "sentences": [
    "Display Template",
    "화면을 갖고 있는 디바이스 및 앱에서 NUGU SDK를 적용하는 경우, Display를 통해 정보를 표시할 수 있습니다. NUGU Display는 NUGU 플랫폼에서 제공하는 Display Template을 사용합니다. Display Template 사용을 위해서는 SK텔레콤 담당자와 협의가 필요합니다.",
    "SK텔레콤 담당자와 협의를 통해 Display Template 서버에서 추가 작업이 진행된 후 연동 개발을 할 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/display",
  "order": 151,
  "indexes": [
    {
  "title": "Display",
  "hash": "",
  "sentences": [
    "Display",
    "Play 에서 전달하는 UI 요소를 화면에 구성하기 규격"
  ]
},
    {
  "title": "Display > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.9 입니다.",
    "1.0 | 2019.11.17 | 규격 추가",
    "1.1 | 2019.12.09 | Close directive CloseSucceeded, CloseFailed event 추가Weather1/2/3/4/5, FullImage directive 추가",
    "1.2 | 2020.03.03 | Duration 추가 Score1/2 directive 추가ControlFocus, ControlScroll directive 추가ControlFocusSucceeded, ControlFocusFailed, ControlScrollSucceeded, ControlScrollFailed event 추가SearchList1/2 directive 추가Call1/2/3 directive 추가FullText3 directive 추가",
    "1.3 | 2020.04.29 | Timer directive 추가Template 에 supportFocusedItemToken, supportVisibleTokenList 필드 추가",
    "1.4 | 2020.06.22 | ButtonObject 에 postback, autoTrigger, closeTemplateAfter, disable 필드 추가ElementSelected event 에 postback 필드 추가Dummy directive 추가",
    "1.5 | 2020.09.02 | Template 에 eventType, textInput 필드 추가",
    "1.6 | 2020.10.16 | BadgeObject, UnifiedSearch1 추가",
    "1.7 | 2021.05.31 | StyleGrammarGuide, FloatingBannerObject 추가",
    "1.8 | 2021.07.08 | TabExtension 추가",
    "1.9 | 2021.09.17 | Button Object 변경"
  ]
},
    {
  "title": "Display > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Display > DisplayAgent 사용",
  "hash": "#displayagent-사용",
  "sentences": [
    "DisplayAgent 사용",
    "Display interface 규격에 따른 디바이스의 동작 제어는 DisplayAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 DisplayAgent instance 에 접근할 수 있습니다.",
    "val displayAgent = nuguAndroidClient.displayAgent",
    "AudioPlayer interface 와 Display interface 를 병합해주는 DisplayAggregatorInterface 를 제공합니다.",
    "val displayAggregator = nuguAndroidClient.getDisplay()",
    "NuguClient instance 를 통해 DisplayAgent instance 에 접근할 수 있습니다.",
    "let audioPlayerAgent = nuguClient.audioPlayerAgent",
    "CapabilityFactory::makeCapability 함수로 DisplayAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto display_handler(std::shared_ptr<IDisplayHandler>(\n        CapabilityFactory::makeCapability<DisplayAgent, IDisplayHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(display_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "Display > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "UI 제어",
    "기능을 사용하기 위해서는 template 화면의 상태 정보를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android",
    "iOS",
    "DisplayAggregatorInterface.Controller 를 추가합니다.",
    "val controller = object: DisplayAggregatorInterface.Controller {\n    override fun getFocusedItemToken(): String? {\n        ...\n    }\n\n    override fun getVisibleTokenList(): List<String>? {\n        ...\n    }\n\n    ...\n}\n\ndisplayAggregator.displayCardRendered(templateId, controller)",
    "DisplayAgentDelegate 를 추가합니다.",
    "class MyDisplayAgentDelegate: DisplayAgentDelegate {\n    func displayAgentRequestContext(templateId: String, completion: @escaping (DisplayContext?) -> Void) {\n        ...\n    }\n\n    ...\n}\ndisplayAgent.delegate = MyDisplayAgentDelegate()"
  ]
},
    {
  "title": "Display > UI 구성 및 제어",
  "hash": "#ui-구성-및-제어-",
  "sentences": [
    "UI 구성 및 제어",
    "Display 로 화면을 구성하기 위해 필요한 데이터는",
    "Template",
    "directive 에 포함되어 전달됩니다.",
    "Template 화면은",
    "Close",
    "directive 또는 SDK 내부 timer 등에 의해 종료될 수 있으며,",
    "Update",
    "directive 에 의해 변경될 수 있습니다.",
    "Template 의 focus 와 scroll 은",
    "사용자 발화",
    "에 따라",
    "ControlFocus",
    ",",
    "ControlScroll",
    "directive 로 제어될 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "DisplayAggregatorInterface.Renderer 를 추가합니다.",
    "val renderer = object: DisplayAggregatorInterface.Renderer {\n    override fun render(templateId: String, templateType: String, templateContent: String, dialogRequestId: String, displayType: Type): Boolean {\n        ...\n    }\n\n    ...\n}\ndisplayAggregator.setRenderer(renderer)",
    "UI 를 제어하려면 DisplayAggregatorInterface.Controller 를 추가합니다.",
    "val controller = object: DisplayAggregatorInterface.Controller {\n    override fun controlFocus(direction: Direction): Boolean {\n        ...\n    }\n\n    override fun controlScroll(direction: Direction): Boolean {\n        ...\n    }\n\n    ...\n}\ndisplayAggregator.displayCardRendered(templateId, controller)",
    "DisplayAgentDelegate 를 추가합니다.",
    "class MyDisplayAgentDelegate: DisplayAgentDelegate {\n    func displayAgentShouldRender(template: DisplayTemplate, completion: @escaping (AnyObject?) -> Void) {\n        ...\n    }\n\n    func displayAgentShouldMoveFocus(templateId: String, direction: DisplayControlPayload.Direction, completion: @escaping (Bool) -> Void) {\n        ...\n    }\n\n    func displayAgentShouldScroll(templateId: String, direction: DisplayControlPayload.Direction, completion: @escaping (Bool) -> Void) {\n        ...\n    }\n\n    ...\n}\ndisplayAgent.delegate = MyDisplayAgentDelegate()",
    "IDisplayListener 를 추가합니다.",
    "class MyDisplayListener : public IDisplayListener {\npublic:\n    ...\n\n    void renderDisplay(const std::string& id, const std::string& type, const std::string& json, const std::string& dialog_id) override\n    {\n        ...\n    }\n    \n    bool clearDisplay(const std::string& id, bool unconditionally, bool has_next) override\n    {\n        ...\n    }\n\n    ...\n};\nauto display_listener(std::make_shared<MyDisplayListener>());\nCapabilityFactory::makeCapability<DisplayAgent, IDisplayHandler>(display_listener.get());"
  ]
},
    {
  "title": "Display > 사용자 인터렉션 처리",
  "hash": "#사용자-인터렉션-처리",
  "sentences": [
    "사용자 인터렉션 처리",
    "Template 하위 항목 선택시",
    "ElementSelected",
    "event 가 전달됩니다.",
    "Android",
    "iOS",
    "Linux",
    "displayAggregator.setElementSelected(templateId, token, postback)",
    "displayAgent.elementDidSelect(templateId: displayTemplate.templateId, token: token, postback: postback)",
    "display_handler->elementSelected(id, item_token, postback)",
    "Template 에 화면에 대한 사용자 interaction 발생시 SDK 로 notify 해주어야 내부 timer(template 일정시간 노출 후 종료하기 위한) 가 갱신됩니다.",
    "Android",
    "iOS",
    "Linux",
    "displayAggregator.notifyUserInteraction(templateId)",
    "displayAgent.notifyUserInteraction()",
    "display_handler->refreshRenderingTimer(id)"
  ]
},
    {
  "title": "Display > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Display\": {\n    \"version\": \"1.7\",\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"focusedItemToken\": \"{{STRING}}\",\n    \"visibleTokenList\": [\n      \"{{STRING}}\"\n    ]\n  }\n}",
    "token | string | N | 클릭하는 template을 식별하기 위한 unique identifier",
    "focusedItemToken | string | N | 현재 화면에 List Template이 보여지고 있을 때, 포커스된 item을 식별하기 위한 unique identifierfocusable이 true인 List Template이 보여지고 있을 때는 반드시 focusedItemToken이 존재해야 함",
    "visibleTokenList | list | N | 현재 화면에 List Template이 보여지고 있을 때, 보여지고 있는 item들을 식별하기 위한 unique identifier 목록 ListTemplate이 보여지고 있을 때는 반드시 visibleTokenList이 존재해야 함"
  ]
},
    {
  "title": "Display > Common Objects",
  "hash": "#common-objects",
  "sentences": [
    "Common Objects",
    "Template 에 사용되는 공통 object 의 데이터 구조입니다."
  ]
},
    {
  "title": "Display > ImageObject",
  "hash": "#imageobject",
  "sentences": [
    "ImageObject",
    "{\n  \"contentDescription\": \"{{STRING}}\",\n  \"sources\": [\n    {\n      \"url\": \"{{STRING}}\",\n      \"size\": \"{{STRING}}\",\n      \"widthPixels\": {{LONG}},\n      \"heightPixels\": {{LONG}}\n    }\n  ]\n}",
    "contentDescription | string | N | -",
    "sources | list | Y | 리스트로 제공되며 클라이언트에서 화면 크기에 가장 적합한 이미지를 사용해야 함",
    "sources.url | string | Y | -",
    "sources.size | string | N | X_SMALL, SMALL, MEDIUM, LARGE, X_LARGE",
    "sources.widthPixels | long | N | -",
    "sources.heightPixels | long | N | -",
    "X_SMALL | 480 x 320",
    "SMALL | 720 x 480",
    "MEDIUM | 960 x 640",
    "LARGE | 1280 x 800",
    "X_LARGE | 1920 x 1080"
  ]
},
    {
  "title": "Display > TextObject",
  "hash": "#textobject",
  "sentences": [
    "TextObject",
    "{\n  \"text\": \"{{STRING}}\",\n  \"color\": \"{{STRING}}\",\n  \"style\": {}\n}",
    "text | string | Y | Text 중간에 강조 표현을 위한 마크업 사용 가능 스펙- 볼드 : <b>볼드</b>- 기울림 : <i>기울림</i>- 밑줄 : <u>밑줄</u> - 윗첨자 : <sup>윗첨자</sup>- 아래첨자 : <sub>아래첨자</sub>- 취소선 : <s>취소선</s>- 색상 : <font color=\"red\">빨강</font>위에 요소외 다른 마크업 사용 시 마크업 요소 사용 불가, 원본 표시",
    "color | string | N | color 형식 (RGB)default 값은 디바이스마다 다름",
    "style | object | N | 기본적으로는 상위 스타일(directive 등)을 따름.CSS 속성은 모두 가능하며, 다음의 값들을 가질 수 있다.- text-align : left, center, right- opacity : 0 ~ 1- display : block, inline, none- margin : 10px- 사용예.  { \"text-align\":\"center\", \"display\": \"block\" }"
  ]
},
    {
  "title": "Display > ButtonObject",
  "hash": "#buttonobject",
  "sentences": [
    "ButtonObject",
    "{\n  \"type\": \"{{STRING}}\",\n  \"text\": \"{{STRING}}\",\n  \"image\": ImageObject,\n  \"token\": \"{{STRING}}\",\n  \"eventType\": \"{{STRING}}\",\n  \"textInput\": {\n    \"text\": \"{{STRING}}\",\n    \"playServiceId\": \"{{STRING}}\"\n  },\n  \"event\": {\n    \"type\": \"{{STRING}}\",\n    \"data\": { # arbitrary JSON object for specific event }\n  },\n  \"url\": \"{{STRING}}\",\n  \"control\": {\n    \"type\": \"{{STRING}}\"\n  },\n  \"postback\": {},\n  \"autoTrigger\": {\n    \"delayInMilliseconds\": {{LONG}},\n    \"showTimer\": {{BOOL}}\n  },\n  \"closeTemplateAfter\": {{BOOL}},\n  \"style\": {},\n  \"disable\": {{BOOL}}\n}",
    "type | string | N | text(default), image 중 하나의 값을 가질 수 있습니다.",
    "image | ImageObject | N | 버튼 이미지- type이 image인 경우에 한해 필수이며, 해당 이미지를 이용해 버튼을 표현한다.",
    "text | string | N | 버튼 텍스트- type이 text인 경우에 한해 필수이며, 해당 텍스트를 이용해 버튼을 표현한다.",
    "token | string | Y | 클릭 시 전달될 토큰 값",
    "eventType | string | N | 클릭 시 플랫폼으로 전달하는 Event Type (Capability 명과 Event를 모두 명시해야 함)- Display.ElementSelected :  default (eventType 값이 없는 경우 기본값)- Text.TextInput- EVENT- CONTROL : Client를 Direct로 제어하기 위해 정의",
    "triggerChild | bool | N | 버튼을 클릭했을때 child template을 실행할 수 있는지 여부",
    "textInput | object | N | eventType == TextTextInput인 경우 필수",
    "textInput.text | string | Y | 전달할 텍스트",
    "textInput.playServiceId | string | N | 특정 Play로 지정하여 라우팅하는 경우 사용",
    "event | object | N | eventType == Extension.CommandIssued인 경우 필수 기존의 Display.ElementSelected, Text.TextInput 모두 EVENT 타입 사용 가능",
    "event.type | string | Y | Event의 타입Extension.CommandIssuedDisplay.TriggerChild",
    "event.data | object | Y | Event에 필요한 JSON object",
    "control | string | N | eventType == CONTROL인 경우 필수",
    "control.type | string | Y | TEMPLATE_PREVIOUS - history가 있는 경우 이전 template으로 이동TEMPLATE_CLOSEALL - history에 있는 모든 template(parent와 child)을 close",
    "postback | object | N | 클릭 시 전달되는 임의의 Object- 버튼 클릭 시 동작을 위해 필요한 정보를 임의의 JSON 포맷으로 추가 가능- 기존에 token을 이 용도로 활용하는 경우가 많았는데, token은 identifier 역할을 하도록 하기 위해 추가",
    "autoTrigger | object | N | 특정 시간이 지난 뒤 ElementSelected Event를 자동으로 발생시키는 경우 포함하위 parameter들은 autoTrigger가 포함되면 모두 mandatory parameter",
    "autoTrigger.delayInMilliseconds | long | Y | TTS 종료 후 trigger 시킬때까지의 시간 (msec)",
    "autoTrigger.showTimer | bool | Y | 버튼에 timer 숫자를 보여줄지 설정",
    "closeTemplateAfter | bool | N | trigger 또는 클릭 동작 후 template을 바로 닫을지, 아니면 template의 life cycle 대로 화면에 보여줄지 설정",
    "style | object | N | 버튼의 추가적인 style을 정의함.textObject의 style고 사용법이 동일함.",
    "disable | bool | N | 이 속성이 true이면 버튼을 disable 처리함."
  ]
},
    {
  "title": "Display > TitleObject",
  "hash": "#titleobject",
  "sentences": [
    "TitleObject",
    "{\n  \"logo\": ImageObject,\n  \"text\": TextObject,\n  \"subtext\": TextObject,\n  \"subicon\": ImageObject,\n  \"button\": ButtonObject\n}",
    "logo | ImageObject | N | png 타입으로 투명 이미지로 제공해야 함",
    "text | TextObject | Y | 제목",
    "subtext | TextObject | N | ASR Text 등 부제목",
    "subicon | ImageObject | N | 서브 아이콘 ( 위치 : subText 왼쪽 )",
    "button | ButtonObject | N | 우측에 위치하는 버튼"
  ]
},
    {
  "title": "Display > BackgroundObject",
  "hash": "#backgroundobject",
  "sentences": [
    "BackgroundObject",
    "{\n  \"image\": ImageObject,\n  \"color\": \"{{STRING}}\"\n}",
    "image | ImageObject | N | -",
    "color | string | N | color형식(RGB)default : #000000"
  ]
},
    {
  "title": "Display > Duration",
  "hash": "#duration",
  "sentences": [
    "Duration",
    "TTS, 보이스 크롭 등이 종료된 후 template 이 화면에 남아 있어야 하는 시간입니다.",
    "SHORT | 7초",
    "MID | 15초",
    "LONG | 30초",
    "LONGEST | 10분"
  ]
},
    {
  "title": "Display > GrammarGuide",
  "hash": "#grammarguide",
  "sentences": [
    "GrammarGuide",
    "발화가이드 입니다.",
    "grammarGuide | array of string | N | 화면에 표시할 문자열들을 정의합니다. 사용예 : [\"홈 화면으로 이동해줘\", \"선호채널 찾아줘\"]"
  ]
},
    {
  "title": "Display > StyleGrammarGuide",
  "hash": "#stylegrammarguide",
  "sentences": [
    "StyleGrammarGuide",
    "GrammarGuide의 확장된 발화가이드 입니다.",
    "[\n  {\n    \"text\": \"{{STRING}}\",\n    \"type\": \"{{STRING}}\",\n    \"style\": {}\n  }\n]",
    "text | string | Y | 화면에 표시할 문자열들을 정의합니다.",
    "type | string | Y | NONE, NUDGE, STYLE NONE: 기본 UINUDGE: 넛지 UISTYLE: style 필드를 사용",
    "style | object | N | uiType 이 STYLE 일 때, 필수 CSS 속성은 모두 가능"
  ]
},
    {
  "title": "Display > FloatingBannerObject",
  "hash": "#floatingbannerobject",
  "sentences": [
    "FloatingBannerObject",
    "Banner에 사용되는 image object 입니다.",
    "{\n  \"image\": ImageObject,\n  \"style\": Object\n}",
    "image | ImageObject | N | banner에 사용되는 image object",
    "style | object | N | banner에 적용되는 style object.사용예 : style: { right: \"115px\", bottom: \"430px\" }"
  ]
},
    {
  "title": "Display > ToggleButtonObject",
  "hash": "#togglebuttonobject",
  "sentences": [
    "ToggleButtonObject",
    "{\n  \"style\": \"{{STRING}}\",\n  \"status\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\"\n}",
    "style | string | Y | image, text",
    "status | string | Y | on, off",
    "token | string | Y | 클릭 시 전달될 토큰 값"
  ]
},
    {
  "title": "Display > ContextLayer",
  "hash": "#contextlayer",
  "sentences": [
    "ContextLayer",
    "Template 의 종류를 구분하기 위한 속성입니다.",
    "INFO | 기본값. 정보성",
    "MEDIA | 미디어 재생",
    "ALERT | 알람/타이머",
    "CALL | 전화 수신/발신/통화중"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/distribute-and-manage-a-play/distribute-a-play",
  "order": 102,
  "indexes": [
    {
  "title": "Play 배포",
  "hash": "",
  "sentences": [
    "Play 배포",
    "Play 심사 승인이 완료된 Play는 배포 설정 기능을 통해 Play 배포요청을 해야 NUGU 서비스 제공이 가능합니다."
  ]
},
    {
  "title": "Play 배포 > 배포 프로세스",
  "hash": "#배포-프로세스-",
  "sentences": [
    "배포 프로세스",
    "심사 프로세스",
    "를 거쳐 “심사 완료“ 상태가 됐다면,",
    "배포 신청",
    "하실 수 있습니다.",
    "정상적으로 배포가 완료되면 사용자들은 해당 Play를 호출하여 사용할 수 있습니다.",
    "기본적으로 이용 가능 기기는 “NUGU”, “NUGU mini”, “NUGU candle”이며, 사전 요청 또는 내부 결정에 따라 추가적인 검증을 거쳐 “T전화”, “NUGU nemo”, “Tmap”, “Btv” 등 NUGU플랫폼이 적용된 다른 기기에도 적용이 가능합니다.",
    "요청 방법 : Support > 문의사항 (개발)",
    "서비스 중인 Play를 중지하는 방법에 대한 자세한 내용은 Play 상태 변경(중지 및 서비스 재개)를 참고하세요."
  ]
},
    {
  "title": "Play 배포 > 배포 정책",
  "hash": "#배포-정책-",
  "sentences": [
    "배포 정책",
    "Play 배포는 평일 10~17시에 수시로 진행됩니다.",
    "배포 신청",
    "이후,  별도의 문의로 배포 희망일을 요청할 수 있으며, 희망일이 없다면 요청 후 배포 가능한 시점에 배포합니다.",
    "Play 동작에 이상이 있거나, 내부 사정에 따라 배포가 어려운 경우, 배포 요청일과 실제 배포일이 상이할 수 있습니다."
  ]
},
    {
  "title": "Play 배포 > 배포 신청",
  "hash": "#배포-신청-",
  "sentences": [
    "배포 신청",
    "Play의 심사 승인이 완료되면 Play 등록 현황 리스트에",
    "배포요청",
    "버튼이 생성됩니다. 이 버튼을 이용하여 배포를 신청할 수 있습니다.",
    "Developers > Play kit > 관리 페이지에서 배포 신청할 Play의 [배포요청] 버튼을 클릭합니다.",
    "배포요청 팝업창에서 내용을 확인 한 후 확인 버튼을 클릭하면 배포 요청이 완료됩니다. 배포희망일이 별도로 존재하면 Support > 문의사항 (관리) 를 통해 요청 할 수 있습니다.\n배포요청 완료 후 운영자가 배포일을 지정하면 Play 개발자의 메일로 배포 완료 안내 메일이 발송 됩니다.",
    "배포 완료되면 해당 Play는 서비스 중 상태가 됩니다.\n배포 대기는 배포 신청을 한 상태에서 배포일이 도래하지 않았을 경우를 말하며, 이 경우에는 배포 신청을 취소할 수가 있습니다. 자세한 내용은 배포 신청 취소를 참고하세요."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/distribute-and-manage-a-play",
  "order": 101,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/manage-shared-device/empty-screen-error",
  "order": 114,
  "indexes": [
    {
  "title": "구동 시 빈화면 출력되는 경우",
  "hash": "",
  "sentences": [
    "구동 시 빈화면 출력되는 경우"
  ]
},
    {
  "title": "구동 시 빈화면 출력되는 경우 > 오류 증상",
  "hash": "#오류-증상",
  "sentences": [
    "오류 증상",
    "Device Set Up Tool 설치 후 구동하였으나, 아래와 같이 빈 화면이 출력되는 경우입니다."
  ]
},
    {
  "title": "구동 시 빈화면 출력되는 경우 > 오류 환경",
  "hash": "#오류-환경",
  "sentences": [
    "오류 환경",
    "OS : Windows 10",
    "CPU & GPU : Intel 11th Gen Xe Graphics"
  ]
},
    {
  "title": "구동 시 빈화면 출력되는 경우 > 오류 원인",
  "hash": "#오류-원인",
  "sentences": [
    "오류 원인",
    "Intel 11th. 그래픽 드라이버에  버그 존재 (닷넷프로그램에서 화면 그리기 오류)"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/manage-enrolled-user/enrolled-user-invitation-biz",
  "order": 117,
  "indexes": [
    {
  "title": "Biz 사용자 초대 (정식판)",
  "hash": "",
  "sentences": [
    "Biz 사용자 초대 (정식판)",
    "Biz 사용자 관리 정식판에서는 Biz Service 단위로 사용자를 초대하여, 사용자의 승인으로 등록 후 퍼블리셔가 제공하는 Private Play의 사용이 가능하며, Annoucement 메세를 수신 받을 수 있는 대상이 될 수 있습니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 1. Biz Kit 기본 정보 관리",
  "hash": "#1-biz-kit-기본-정보-관리",
  "sentences": [
    "1. Biz Kit 기본 정보 관리"
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 기본 정보 조회",
  "hash": "#기본-정보-조회",
  "sentences": [
    "기본 정보 조회",
    "현재의 권한 확인이 가능합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > Biz Service 정보 입력",
  "hash": "#biz-service-정보-입력",
  "sentences": [
    "Biz Service 정보 입력",
    "Biz Service로 사용자를 초대하기 위한 기본 정보를 입력합니다. 초대 받는 사용자의 초대장 및 NUGU APP 설정화면에서 표시되는 정보입니다. Biz Service는 Private Play들을 포함하여 퍼블리셔가 제공하는 모든 서비스를 포괄하는 개념으로, Private Play 외 별도로Service 정보입력이 필요합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > Biz API 정보",
  "hash": "#biz-api-정보",
  "sentences": [
    "Biz API 정보",
    "정식판에 제공되는 Biz API를 사용하기 위한 정보입니다.",
    "Biz API token : Biz API를 사용할 수 있는 권한을 인증하는 API header 토큰 정보입니다.",
    "제휴사 계정 인증 주소 (Optional) : Biz 사용자를 초대 할때, 사용자의 계정 로그인 인증을 할 수 있는 주소를 입력합니다. 해당 주소를 입력하여 사용할 경우, 사용자 초대장에서 계정인증을 할 수 있는 절차가 추가되며, 로그인 인증 시, 해당 제휴사 계정 기반의 사용자의 토큰이 발급되어 Announcement 등의 Biz API에서 활용할 수 있습니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 2. 사용자 그룹 관리",
  "hash": "#2-사용자-그룹-관리",
  "sentences": [
    "2. 사용자 그룹 관리",
    "Biz 사용자 관리 > 사용자 그룹 관리에서 초대할 사용자가 소속될 그룹을 생성하고, 관리 할 수 있습니다. 그룹별 Private Play를 구성할 수 있습니다. 그룹이 없는 사용자의 경우 미분류에 해당됩니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 3. 사용자 초대 관리",
  "hash": "#3-사용자-초대-관리",
  "sentences": [
    "3. 사용자 초대 관리"
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 사용자 초대하기",
  "hash": "#사용자-초대하기",
  "sentences": [
    "사용자 초대하기",
    "사용자 초대 관리에서 “사용자 초대하기”로 들어가면 초대를 위한 상세 페이지로 이동합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 사용자 초대 기본정보 입력",
  "hash": "#사용자-초대-기본정보-입력",
  "sentences": [
    "사용자 초대 기본정보 입력",
    "초대 메일에 표시될 “기본정보”를 입력합니다. 입력된 내용은 “초대장 미리보기”로 확인 가능합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 사용자 초대 그룹 및 Private Play 지정",
  "hash": "#사용자-초대-그룹-및-private-play-지정",
  "sentences": [
    "사용자 초대 그룹 및 Private Play 지정",
    "그리고 미리 만들어진 “사용자 그룹”을 지정하여 초대하거나, 새로운 사용자 그룹을 만들어 초대하거나, 혹은 “미분류”로 초대 할 수 있습니다.",
    "미리 만들어진 그룹으로 초대하는 경우, 해당 그룹의 Private Play가 할당됨으로 별도로 Private Play를 선택하지 않습니다. 미분류나 새로운 그룹을 만들어 초대하는 경우는, 사용할 Private Play를 선택하여 초대합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 초대자 등록",
  "hash": "#초대자-등록",
  "sentences": [
    "초대자 등록",
    "메일을 수신할 초대자를 웹에서 직접 입력 or 엑셀 파일로 리스트 업로드 하는 방식으로 리스트를 등록 할 수 있습니다.",
    "초대자 직접등록",
    "초대자 파일로 등록"
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 초대장 미리보기",
  "hash": "#초대장-미리보기",
  "sentences": [
    "초대장 미리보기",
    "입력한 초대 기본 정보를 포함하여, 수신 대상 초대자에게 보낼 메일의 내용을 미리 확인 할 수 있습니다. 초대장 발송은 미리보기 확인 후 가능합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 초대장 발송",
  "hash": "#초대장-발송",
  "sentences": [
    "초대장 발송",
    "미리보기 확인을 완료 한 후, “초대장 발송” 버튼을 클릭하면 등록한 사용자에게 이메일로 초대장이 발송됩니다.",
    "이메일로 발송된 초대장의 유효 기간은 72시간입니다. 유효 기간이 경과한 후에는 초대장을 다시 발송해야 합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > 4. 초대장 인증 (사용자 초대 수락)",
  "hash": "#4-초대장-인증-사용자-초대-수락",
  "sentences": [
    "4. 초대장 인증 (사용자 초대 수락)",
    "초대장을 받은 사용자가 Private Play를 사용하려면 NUGU 회원 ID로 로그인 인증이 필요합니다.(NUGU 회원 가입은",
    "www.nugu.co.kr",
    "또는 NUGU App에서 할 수 있습니다.)",
    "사용자는 이메일로 수신된 초대장에서 “여기” 링크를 클릭하여 NUGU ID 인증 페이지로 이동할 수 있으며, 로그인 인증 시점부터 Private Play 이용이 가능합니다. 제공 받은 Private Play의 상세 정보는 NUGU App에서 확인할 수 있습니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (정식판) > Biz Service 추가 정보 등록 (Optional)",
  "hash": "#biz-service-추가-정보-등록-optional",
  "sentences": [
    "Biz Service 추가 정보 등록 (Optional)",
    "정식판 권한의 Biz Service 단위 초대 시에는 해당 기능을 활용하기 위한 추가 정보를 입력할 수 있습니다.",
    "Biz API 제휴사 계정 인증 : Biz Kit 기본 정보 입력에서, 퍼블리셔가 인증 URL를 등록한 경우 초대장에 활성화 되며, 초대받은 사용자가 해당 계정을 로그인 인증 할 수 있습니다. 인증하는 경우, 인증한 제휴사 게정 기준으로 토큰이 발급되어, Announcement 등의 Biz API 수신 시 활용 될 수 있습니다.",
    "BIz API 수신 동의 및 디바이스 등록 : 퍼블리셔가 발송하는 Announcement 등 Biz API를 수신 받을 수 있는 디바이스를 사용자가 직접 지정할 수 있습니다. 지정한 디바이스로만 API 발송 사항을 수신하게 됩니다. 등록 완료 이후, NUGU 모바일 앱에서 Biz 사용자 설정에서 변경 할 수 있습니다",
    "Biz API 수신 가능 디바이스는 “주요개념“의 “NUGU 디바이스(NUGU device)”를 참고해 주세요."
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/manage-enrolled-user/enrolled-user-invitation-trial",
  "order": 116,
  "indexes": [
    {
  "title": "Biz 사용자 초대 (체험판)",
  "hash": "",
  "sentences": [
    "Biz 사용자 초대 (체험판)",
    "Biz 사용자 관리 체험판에서는 Private Play 단위로 사용자를 초대하여, 사용자의 승인으로 등록 후 Private Play를 사용하도록 할 수 있습니다. 등록 가능한 사용자는 최대 10명으로 제한되어 있습니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (체험판) > 1. Biz Kit 기본 정보 관리",
  "hash": "#1-biz-kit-기본-정보-관리",
  "sentences": [
    "1. Biz Kit 기본 정보 관리",
    "현재의 권한 확인이 가능합니다. 정식판의 경우 Biz Service를 위한 정보, Biz API를 위 제휴사 계정 기반 토큰 생성을 위한 정보 등 더 많은 정보를 활용하여 사용자를 초대할 수 있습니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (체험판) > 2. 사용자 그룹 관리",
  "hash": "#2-사용자-그룹-관리",
  "sentences": [
    "2. 사용자 그룹 관리",
    "Biz 사용자 관리 > 사용자 그룹 관리에서 초대할 사용자가 소속될 그룹을 생성하고, 관리 할 수 있습니다. 그룹별 Private Play를 구성할 수 있습니다. 그룹이 없는 사용자의 경우 미분류에 해당됩니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (체험판) > 3. 사용자 초대 관리",
  "hash": "#3-사용자-초대-관리",
  "sentences": [
    "3. 사용자 초대 관리"
  ]
},
    {
  "title": "Biz 사용자 초대 (체험판) > 사용자 초대하기",
  "hash": "#사용자-초대하기",
  "sentences": [
    "사용자 초대하기",
    "사용자 초대 관리에서 “사용자 초대하기”로 들어가면 초대를 위한 상세 페이지로 이동합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (체험판) > 사용자 초대 기본정보 입력",
  "hash": "#사용자-초대-기본정보-입력",
  "sentences": [
    "사용자 초대 기본정보 입력",
    "초대 메일에 표시될 “기본정보”를 입력합니다. 입력된 내용은 “초대장 미리보기”로 확인 가능합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (체험판) > 사용자 초대 그룹 및 Private Play 지정",
  "hash": "#사용자-초대-그룹-및-private-play-지정",
  "sentences": [
    "사용자 초대 그룹 및 Private Play 지정",
    "그리고 미리 만들어진 “사용자 그룹”을 지정하여 초대하거나, 새로운 사용자 그룹을 만들어 초대하거나, 혹은 “미분류”로 초대 할 수 있습니다.",
    "미리 만들어진 그룹으로 초대하는 경우, 해당 그룹의 Private Play가 할당됨으로 별도로 Private Play를 선택하지 않습니다. 미분류나 새로운 그룹을 만들어 초대하는 경우는, 사용할 Private Play를 선택하여 초대합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (체험판) > 초대자 등록",
  "hash": "#초대자-등록",
  "sentences": [
    "초대자 등록",
    "메일을 수신할 초대자를 웹에서 직접 입력 or 엑셀 파일로 리스트 업로드 하는 방식으로 리스트를 등록 할 수 있습니다. 체험판은 최대 등록 가능 인원이 10명으로 제한됩니다. (초대 진행 중, 초대완료등록 포함 10명)",
    "초대자 직접등록",
    "초대자 파일로 등록"
  ]
},
    {
  "title": "Biz 사용자 초대 (체험판) > 초대장 미리보기",
  "hash": "#초대장-미리보기",
  "sentences": [
    "초대장 미리보기",
    "입력한 초대 기본 정보를 포함하여, 수신 대상 초대자에게 보낼 메일의 내용을 미리 확인 할 수 있습니다. 초대장 발송은 미리보기 확인 후 가능합니다."
  ]
},
    {
  "title": "Biz 사용자 초대 (체험판) > 초대장 발송",
  "hash": "#초대장-발송",
  "sentences": [
    "초대장 발송",
    "미리보기 확인을 완료 한 후, “초대장 발송” 버튼을 클릭하면 등록한 사용자에게 이메일로 초대장이 발송됩니다.",
    "이메일로 발송된 초대장의 유효 기간은 72시간입니다. 유효 기간이 경과한 후에는 초대장을 다시 발송해야 합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/sdk-design-guide/error-handling",
  "order": 207,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/extension",
  "order": 159,
  "indexes": [
    {
  "title": "Extension",
  "hash": "",
  "sentences": [
    "Extension",
    "정의되지 않은 기능을 수행하기 위한 규격"
  ]
},
    {
  "title": "Extension > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.1 입니다.",
    "1.0 | 2019.11.24 | 규격 추가",
    "1.1 | 2020.01.08 | CommandIssued event 추"
  ]
},
    {
  "title": "Extension > Precondition",
  "hash": "#precondition",
  "sentences": [
    "Precondition",
    "Extension interface 를 사용한 Play 를 제작하기 위해서는 제휴담당자에게 요청하여 권한을 획득해야 합니다.",
    "Play 개발자와 Application 개발자는 Context, Directive, Event 의 data 필드에 대한 데이터 구조를 협의해야 합니다."
  ]
},
    {
  "title": "Extension > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Extension > ExtensionAgent 사용",
  "hash": "#extensionagent-사용",
  "sentences": [
    "ExtensionAgent 사용",
    "Extension interface 규격에 따른 디바이스의 동작 제어는 ExtensionAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 ExtensionAgent instance 에 접근할 수 있습니다.",
    "val extensionAgent = nuguAndroidClient.extensionAgent",
    "NuguAndroidClient 생성시 ExtensionAgentInterface.Client 를 추가합니다.",
    "class MyExtensionAgentClient: ExtensionAgentInterface.Client {\n    ...\n}\nNuguAndroidClient.Builder(...)\n    .enableExtension(MyExtensionAgentClient())",
    "NuguClient instance 를 통해 ExtensionAgent instance 에 접근할 수 있습니다.",
    "let extensionAgent = nuguClient.extensionAgent",
    "CapabilityFactory::makeCapability 함수로 ExtensionAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto extension_handler(std::shared_ptr<IExtensionHandler>(\n        CapabilityFactory::makeCapability<ExtensionAgent, IExtensionHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(extension_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "Extension > Context 구성 및 기능 실행",
  "hash": "#context-구성-및-기능-실행",
  "sentences": [
    "Context 구성 및 기능 실행",
    "Play 에서 알아야 하는 디바이스/Application 의 정보를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "특정 기능의 실행이",
    "Action",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "ExtensionAgentInterface.Client 를 구현합니다.",
    "class MyExtensionAgentClient : ExtensionAgentInterface.Client {\n    override fun getData(): String? {\n        // json string\n        ...\n    }\n\n    override fun action(data: String, playServiceId: String): Boolean {\n        ...\n    }\n}",
    "ExtensionAgentDelegate 를 추가합니다.",
    "class MyExtensionAgentDelegate: ExtensionAgentDelegate {\n    func extensionAgentRequestContext() -> [String: AnyHashable]? {\n        ...\n    }\n\n    func extensionAgentDidReceiveAction(data: [String: AnyHashable], playServiceId: String, dialogRequestId: String, completion: @escaping (Bool) -> Void) {\n        ...\n    }\n}\nextensionAgent.delegate = MyExtensionAgentDelegate()",
    "IExtensionListener를 추가합니다.",
    "class ExtensionListener : public IExtensionListener {\npublic:\n    ...\n\n    void receiveAction(const std::string& data, const std::string& ps_id, const std::string& dialog_id) override\n    {\n        ...\n    }\n};\nauto extension_listener(std::make_shared<ExtensionListener>());\nCapabilityFactory::makeCapability<ExtensionAgent, IExtensionHandler>(extension_listener.get());"
  ]
},
    {
  "title": "Extension > 기능 요청",
  "hash": "#기능-요청",
  "sentences": [
    "기능 요청",
    "특정 기능 실행을",
    "CommandIssued",
    "event 로 요청할 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "extensionAgent.issueCommand(playServiceId, data, callback)",
    "extentionAgent.requestCommand(data: data, playServiceId: playServiceId)",
    "extension_handler->commandIssued(play_service_id, data)"
  ]
},
    {
  "title": "Extension > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Extension\": {\n    \"version\": \"1.1\",\n    \"data\": {}\n  }\n}",
    "data | object | N | 임의의 JSON object"
  ]
},
    {
  "title": "Extension > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive"
  ]
},
    {
  "title": "Extension > Action",
  "hash": "#action",
  "sentences": [
    "Action",
    "{\n  \"header\": {\n    \"namespace\": \"Extension\",\n    \"name\": \"Action\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"data\": {}\n  }\n}",
    "data | object | Y | 임의의 JSON object"
  ]
},
    {
  "title": "Extension > Event",
  "hash": "#event",
  "sentences": [
    "Event"
  ]
},
    {
  "title": "Extension > ActionSucceeded",
  "hash": "#actionsucceeded",
  "sentences": [
    "ActionSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Extension\",\n    \"name\": \"ActionSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Extension > ActionFailed",
  "hash": "#actionfailed",
  "sentences": [
    "ActionFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Extension\",\n    \"name\": \"ActionFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/hello-aria",
  "order": 8,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-user-utterance-model/how-to-write-customer-utterances",
  "order": 21,
  "indexes": [
    {
  "title": "예상 발화 작성 가이드",
  "hash": "",
  "sentences": [
    "예상 발화 작성 가이드",
    "이번 장에서는 예상 발화를 작성하는 방법에 대해 설명합니다. 예상 발화는 사용자가 Play의 특정 기능을 요청하기 위하여 말할 수 있는 문장입니다.",
    "이 문장들은 ASR(Automatic Speech Recognition), NLU(Natural Language Understanding) 엔진의 학습 데이터로 활용되며, 사용자의 발화를 잘 인식하고 이해하는 데 핵심 역할을 합니다. 예상 발화의 학습을 통해 훈련된 ASR, NLU 엔진은 사용자가 실제로 한 발화를 분석한 뒤 그 발화 의도에 맞는 기능을 사용자에게 제공하게 됩니다.",
    "실제 Intent를 생성하고 등록하는 방법은 User Utterance Model 정의하기 (Intent & Entity)를 참고하세요."
  ]
},
    {
  "title": "예상 발화 작성 가이드 > 예상 발화 작성 주요 원칙",
  "hash": "#예상-발화-작성-주요-원칙",
  "sentences": [
    "예상 발화 작성 주요 원칙",
    "같은 기능으로 처리할 표현이라면 하나의 Intent의 예상 발화로 추가합니다.\n    \n      하나의 Intent에 정의되어야 할 기능을 Entity 단위로 나누어 서로 다른 기능으로 분리되어 정의하지 않도록 주의해야 합니다.\n      ‘날씨 알려줘’, ‘날씨 어때?’와 같이 서술어가 다르더라도 날씨를 알려주는 기능으로 연결할 예상 발화라면 하나의 Intent로 추가합니다.",
    "하나의 Intent에 정의되어야 할 기능을 Entity 단위로 나누어 서로 다른 기능으로 분리되어 정의하지 않도록 주의해야 합니다.",
    "‘날씨 알려줘’, ‘날씨 어때?’와 같이 서술어가 다르더라도 날씨를 알려주는 기능으로 연결할 예상 발화라면 하나의 Intent로 추가합니다.",
    "예상 발화는 다양할 수록 좋습니다.\n    \n      동일한 의도라도 사람마다 표현이 다릅니다. 의도를 예측하기 위한 학습 데이터에는 다양한 표현이 필요합니다.\n      따라서, 하나의 의도를 나타내는 예상 발화는 서술어와 Entity들의 조합 및 순서에 따른 다양한 문형으로 작성하는 것이 효율적입니다.\n      문형은 서술어의 종류, 어미의 활용, Entity들의 조합, 어순 및 문장 구조에 따라 다양하게 작성할 수 있습니다.\n      또한 Entity Type별로 가능한 Entity들을 다양하게 사전으로 작성하는 것이 좋습니다.(한글/영어/숫자 표기 포함)",
    "동일한 의도라도 사람마다 표현이 다릅니다. 의도를 예측하기 위한 학습 데이터에는 다양한 표현이 필요합니다.",
    "따라서, 하나의 의도를 나타내는 예상 발화는 서술어와 Entity들의 조합 및 순서에 따른 다양한 문형으로 작성하는 것이 효율적입니다.",
    "문형은 서술어의 종류, 어미의 활용, Entity들의 조합, 어순 및 문장 구조에 따라 다양하게 작성할 수 있습니다.",
    "또한 Entity Type별로 가능한 Entity들을 다양하게 사전으로 작성하는 것이 좋습니다.(한글/영어/숫자 표기 포함)",
    "일정 수 이상의 데이터가 필요 합니다.\n    \n      학습 데이터가 다양하고 양이 많을수록 사용자 의도를 파악하는 정확도가 높아집니다.\n      학습 데이터의 양이 많을수록 의도를 파악하는 정확도가 높아지므로 Intent당 30개 이상의 예상 발화를 등록하는 것을 권장합니다.\n      인식하고자 하는 표현(서술어)이 다양하고, Entity의 개수가 많을수록 다양한 문형의 많은 예상 발화 등록이 필요합니다.",
    "학습 데이터가 다양하고 양이 많을수록 사용자 의도를 파악하는 정확도가 높아집니다.",
    "학습 데이터의 양이 많을수록 의도를 파악하는 정확도가 높아지므로 Intent당 30개 이상의 예상 발화를 등록하는 것을 권장합니다.",
    "인식하고자 하는 표현(서술어)이 다양하고, Entity의 개수가 많을수록 다양한 문형의 많은 예상 발화 등록이 필요합니다.",
    "예상 발화 간에도 균형이 필요합니다.\n    \n      문형의 복잡도가 비슷한 Intent들의 등록된 예상 발화의 수가 균형을 이루는 것이 좋습니다.\n      처음에는 대표적인 예상 발화들을 등록하여 학습하고, 실제 사용자 발화 로그 기반으로 고빈도 발화들을 추가하여 Play의 인식 범위를 확장해 나갈 수 있습니다.\n      특정 문형 위주에 편중되어 예상 발화가 작성되면 결과가 왜곡될 수 있습니다.\n      예를들어, Intent 대부분을 높임말로 예상 발화를 작성한 경우에는 실제 사용자가 낮춤말로 같은 표현을 했을 때 의도를 알아채지 못할 수 있습니다.",
    "문형의 복잡도가 비슷한 Intent들의 등록된 예상 발화의 수가 균형을 이루는 것이 좋습니다.",
    "처음에는 대표적인 예상 발화들을 등록하여 학습하고, 실제 사용자 발화 로그 기반으로 고빈도 발화들을 추가하여 Play의 인식 범위를 확장해 나갈 수 있습니다.",
    "특정 문형 위주에 편중되어 예상 발화가 작성되면 결과가 왜곡될 수 있습니다.",
    "예를들어, Intent 대부분을 높임말로 예상 발화를 작성한 경우에는 실제 사용자가 낮춤말로 같은 표현을 했을 때 의도를 알아채지 못할 수 있습니다.",
    "다음과 같은 규칙도 참고해주세요.",
    "⁣1. 호출어(Wake-up word)나 Play 호출 이름은 제외하고 입력합니다.",
    "Wake-up word인 ‘아리아’, ‘팅커벨’ 과 각 Play의 호출이름(Invocation name) 예상 발화 내에서 제외하고 입력해야 합니다.",
    "뉴스 틀어줘 (O) / 아리아, 뉴스 틀어줘 (X) / KBS뉴스에서, 뉴스틀어줘 (X)",
    "⁣2. 영단어는 가능하다면 한글 표기로, 외래어 표기법에 따라 작성해주세요.",
    "스마트홈 (O) / SMART HOME (X)",
    "⁣3. 알파벳으로 읽히는 경우는 영문으로 작성해주세요. 영문 알파벳은 대소문자를 구분할 필요가 없습니다.",
    "AS (O) / 에이에스 (X)\nWWW (O) / 더블유더블유더블유 (X)",
    "⁣4. NLU 엔진에서 해석하여 응답하는 기호는 다음과 같습니다.",
    "? : 문형을 분석하는 데 참고합니다.",
    "' : 생략된 글자나 숫자가 있을 때 사용하는 영문의 어포스트로피(apostrophe)입니다(he’s, who’d). 한글의 따옴표는 허용 기호에 포함되지 않습니다.",
    "* : 주소나 전화번호 등에서 ‘에’, ‘다시’ 등으로 사용되는 하이픈(hyphen)입니다.",
    "& : ‘Ampersand’도 허용되며, C&C, M&C 등의 단어에서 ‘앤’, ‘앤드’로 분석됩니다.",
    "허용 기호에 포함되지 않는 기호는 삭제됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/humiditycontrol-interface",
  "order": 87,
  "indexes": [
    {
  "title": "HumidityControl Interface",
  "hash": "",
  "sentences": [
    "HumidityControl Interface",
    "NUGU스마트홈 HumidityControl Capability Interface는 NUGU스마트홈에 등록된 SmartHomeDevice의 습도제어방식에 대한 설명입니다. 제어하고자 하는 습도는 해당 공간의 습도 비율로 %단위로 설정하며 습도를 제어하는 기능을 가진 SmartHomeDevice들을 지원합니다."
  ]
},
    {
  "title": "HumidityControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "HumidityControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "HumidityControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"D1234567\",\n      \"type\": \"DEHUMIDIFICATION\",\n      \"modelName\": \"example dehumidification\",\n      \"friendlyNameSuggestion\": \"거실\",\n      \"manufacturer\": \"example manufacturer\",\n      \"supportedCapabilities\": {\n        \"humidityControl\": {\n          \"minHumidity\": \"10\",\n          \"maxHumidity\": \"70\",\n          \"humidityStep\": \"5\"\n        } // \"습도 올려줘\" 등 HumidityControl Capability 를 사용하기 위해서는 이 프로퍼티를 supportedCapabilities 에 포함해야 함.\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "SmartHomeDevice Attribute Parameters",
    "minHumidity | 해당 SmartHomeDevice가 지원하는 최저 자체 설정 습도입니다.",
    "maxHumidity | 해당 SmartHomeDevice가 지원하는 최고 자체 설정 습도입니다.",
    "humidityStep | 해당 SmartHomeDevice의 습도 상승/하강 시의 기본 제어 단위입니다.별도의 사용자 발화가 없을 시 해당 단위만큼 조절합니다.",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "HumidityControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU스마트홈 HumidityControl Capability는 설정습도 및 실제습도를 조회하는 AskHumidity, 설정 습도를 제어하는 SetHumidity, IncreaseHumidity, DecreaseHumidity, SetHumidityMax, SetHumidityMin 등의 Directive를 지원합니다."
  ]
},
    {
  "title": "HumidityControl Interface > AskHumidity",
  "hash": "#askhumidity",
  "sentences": [
    "AskHumidity",
    "Directive 정보",
    "SmartHomeDevice에서 측정한 실제습도와 SmartHomeDevice에 설정된 설정습도를 조회한다.",
    "Capability : HumidityControl",
    "Directive : AskHumidity",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 습도 알려줘.",
    "아리아, {FriendlyName} 습도 어떻게 설정되어 있어?",
    "아리아, {DeviceType} 습도 조회해줘"
  ]
},
    {
  "title": "HumidityControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/HumidityControl/directives/AskHumidity)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"HumidityControl\",\n      \"smartHomeDirective\": \"AskHumidity\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"D1234567\",\n        \"type\": \"DEHUMIDIFICATION\",\n        \"modelName\": \"example dehumidification\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"humidityControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "HumidityControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"currentHumidity\": \"55\" // directive 마다 필요한 property 채워서 응답\n      }\n    }\n  ]\n}",
    "AskHumidity Directive Response parameter details",
    "currentHumidity | SmartHomeDevice에서 측정한 해당 공간의 실제 습도정보입니다.사용자에게 실제습도로 안내됩니다. | double"
  ]
},
    {
  "title": "HumidityControl Interface > SetHumidity",
  "hash": "#sethumidity",
  "sentences": [
    "SetHumidity",
    "Directive 정보",
    "SmartHomeDevice의 설정습도를 사용자가 발화한 특정 습도로 설정한다.",
    "Capability : HumidityControl",
    "Directive : SetHumidity",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 습도 55퍼센트로 설정해줘.",
    "아리아, {FriendlyName} 습도 70퍼센트로 설정해줘.",
    "아리아, {DeviceType} 습도 20으로 설정해줘."
  ]
},
    {
  "title": "HumidityControl Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/HumidityControl/directives/SetHumidity)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"HumidityControl\",\n      \"smartHomeDirective\": \"SetHumidity\",\n      \"parameters\": {\n        \"humidityLevel\": \"40\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"D1234567\",\n        \"type\": \"DEHUMIDIFICATION\",\n        \"modelName\": \"example dehumidification\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"humidityControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "SetHumidity Directive Request parameter details",
    "humidityLevel | 사용자가 SmartHomeDevice에 설정하고자 하는 습도의 발화 정보입니다.%단위입니다. | double"
  ]
},
    {
  "title": "HumidityControl Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"humidityLevel\": \"50\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "SetHumidity Directive Response parameter details",
    "humidityLevel | SmartHomeDevice를 설정한 이후의 설정습도입니다.제어를 마친 이후의 습도로 응답해야 합니다. | double"
  ]
},
    {
  "title": "HumidityControl Interface > IncreaseHumidity",
  "hash": "#increasehumidity",
  "sentences": [
    "IncreaseHumidity",
    "Directive 정보",
    "SmartHomeDevice의 설정습도를 증가시킨다.",
    "Capability : HumidityControl",
    "Directive : IncreaseHumidity",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 습도 올려줘.",
    "아리아, {FriendlyName} 습도 30% 올려서 설정해줘.",
    "아리아, {DeviceType} 습도 10% 올려줘."
  ]
},
    {
  "title": "HumidityControl Interface > Sample Request",
  "hash": "#sample-request-2",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/HumidityControl/directives/IncreaseHumidity)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"HumidityControl\",\n      \"smartHomeDirective\": \"IncreaseHumidity\",\n      \"parameters\": {\n        \"humidityDelta\": \"10\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"D1234567\",\n        \"type\": \"DEHUMIDIFICATION\",\n        \"modelName\": \"example dehumidification\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"humidityControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "IncreaseHumidity Directive request parameter details",
    "humidityDelta | 설정습도를 몇 % 올릴지에 대한 사용자 발화 정보입니다.해당 정보가 없을 경우 (“parameters”: null) 5% 만큼 올리도록 설정합니다. | double"
  ]
},
    {
  "title": "HumidityControl Interface > Sample Response",
  "hash": "#sample-response-2",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"humidityLevel\": \"50\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "IncreaseHumidity Directive response parameter details",
    "humidityLevel | SmartHomeDevice를 설정한 이후의 설정습도입니다.제어를 마친 이후의 습도로 응답해야 합니다. | double"
  ]
},
    {
  "title": "HumidityControl Interface > DecreaseHumidity",
  "hash": "#decreasehumidity",
  "sentences": [
    "DecreaseHumidity",
    "Directive 정보",
    "SmartHomeDevice의 설정 습도를 감소시킨다.",
    "Capability : HumidityControl",
    "Directive : DecreaseHumidity",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 습도 내려줘.",
    "아리아, {FriendlyName} 습도 30% 내려서 설정해줘.",
    "아리아, {DeviceType} 습도 10% 내려줘."
  ]
},
    {
  "title": "HumidityControl Interface > Sample Request",
  "hash": "#sample-request-3",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/HumidityControl/directives/DecreaseHumidity)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"HumidityControl\",\n      \"smartHomeDirective\": \"DecreaseHumidity\",\n      \"parameters\": {\n        \"humidityDelta\": \"40\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"D1234567\",\n        \"type\": \"DEHUMIDIFICATION\",\n        \"modelName\": \"example dehumidification\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"humidityControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "DecreaseHumidity Directive request parameter details",
    "humidityDelta | 설정습도를 몇 % 올릴지에 대한 사용자 발화 정보입니다.해당 정보가 없을 경우 (“parameters”: null) 5% 만큼 내리도록 설정합니다. | double"
  ]
},
    {
  "title": "HumidityControl Interface > Sample Response",
  "hash": "#sample-response-3",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"humidityLevel\": \"40\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "DecreaseHumidity Directive response parameter details",
    "humidityLevel | SmartHomeDevice를 설정한 이후의 설정습도입니다.제어를 마친 이후의 습도로 응답해야 합니다. | double"
  ]
},
    {
  "title": "HumidityControl Interface > SetHumidityMax",
  "hash": "#sethumiditymax",
  "sentences": [
    "SetHumidityMax",
    "Directive 정보",
    "SmartHomeDevice를 최고 설정습도로 설정한다.",
    "Capability : HumidityControl",
    "Directive : SetHumidityMax",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 습도 최고로 설정해줘.",
    "아리아, {FriendlyName} 습도 가장 높게 해줘",
    "아리아, {DeviceType} 설정습도 최대로 해줘."
  ]
},
    {
  "title": "HumidityControl Interface > Sample Request",
  "hash": "#sample-request-4",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/HumidityControl/directives/SetHumidityMax)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"HumidityControl\",\n      \"smartHomeDirective\": \"SetHumidityMax\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"D1234567\",\n        \"type\": \"DEHUMIDIFICATION\",\n        \"modelName\": \"example dehumidification\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"humidityControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "HumidityControl Interface > Sample Response",
  "hash": "#sample-response-4",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"humidityLevel\": \"70\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "SetHumidityMax Directive Response parameter details",
    "humidityLevel | SmartHomeDevice를 설정한 이후의 설정습도입니다.제어를 마친 이후의 습도로 응답해야 합니다. | double",
    "maxHumidity | 해당 SmartHomeDevice가 지원하는 최고 습도입니다. | double"
  ]
},
    {
  "title": "HumidityControl Interface > SetHumidityMin",
  "hash": "#sethumiditymin",
  "sentences": [
    "SetHumidityMin",
    "Directive 정보",
    "SmartHomeDevice를 최저 설정습도로 설정한다.",
    "Capability : HumidityControl",
    "Directive : SetHumidityMin",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 습도 최저로 설정해줘.",
    "아리아, {FriendlyName} 습도 가장 낮게 해줘",
    "아리아, {DeviceType} 설정습도 최소로 해줘."
  ]
},
    {
  "title": "HumidityControl Interface > Sample Request",
  "hash": "#sample-request-5",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/HumidityControl/directives/SetHumidityMin)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"HumidityControl\",\n      \"smartHomeDirective\": \"SetHumidityMin\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"D1234567\",\n        \"type\": \"DEHUMIDIFICATION\",\n        \"modelName\": \"example dehumidification\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"humidityControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "HumidityControl Interface > Sample Response",
  "hash": "#sample-response-5",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"humidityLevel\": \"30\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "SetHumidityMin Directive Response parameter details",
    "humidityLevel | SmartHomeDevice를 설정한 이후의 설정습도입니다.제어를 마친 이후의 습도로 응답해야 합니다. | double"
  ]
}
  ]
},
  {
  "url": "/document-staging/",
  "order": 0,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/before-start/intents-and-entities",
  "order": 15,
  "indexes": [
    {
  "title": "Intent와 Entity",
  "hash": "",
  "sentences": [
    "Intent와 Entity",
    "Play가 제공할 기능들을 사용하기 위해 사용자는 발화를 통해 Play에게 의도를 전달해야 합니다. 인간과 기계(Play)가 음성 대화를 통해 상호 작용할 수 있도록 하는 언어모델을 User Utterance Model이라고 합니다. Play는 이러한 모델을 통해 사용자의 말을 이해하고 그 속에 담긴 요청/명령을 수행할 수 있게 됩니다.",
    "의도와 기능에 대한 자세한 내용은 Play를 참고하세요.",
    "그리고, User Utterance Model은 Intent와 Entity로 구성됩니다. 여기서 Intent는 Play의 기능을 동작시키기 위해 표현하는 사용자 의도를 의미하며, Entity는 사용자의 요청을 정확히 처리하기 위해 Intent 외에 추가로 알아야 하는 개체를 의미합니다.",
    "Play Builder는 사용자가 정의한 User Utterance Model을 바탕으로 NLU 엔진을 자동으로 학습시킵니다. 이후 사용자가 예상 발화와 일치하거나 유사한 의도를 가지는 발화를 한 경우에 NLU 엔진은 해당 Intent와 Entity로 분석합니다.",
    "User Utterance Model 모델에 대한 자세한 내용은 User Utterance Model 정의하기(Intent & Entity)를 참고하세요."
  ]
},
    {
  "title": "Intent와 Entity > Intent",
  "hash": "#intent",
  "sentences": [
    "Intent",
    "Intent는 사용자가 발화를 통해 수행하고자 하는 기능을 구체적으로 구분한 범주이며, Play의 필수 구성 요소입니다. 입력된 예상 발화를 바탕으로 NLU 엔진은 자동으로 학습하여 사용자의 실제 발화를 분석합니다.",
    "Intent를 정의하기 위해서는 기능 수행을 위한 사용자의 예상 발화를 일정 수준 이상 입력해야 합니다. 동일한 Intent에 대해 사용자들은 각자의 상황/성향에 따라 여러 가지 형태 또는 문형으로 발화할 수 있으므로, 이를 고려하여 다양한 문형의 예상 발화를 입력하는 것이 좋습니다.",
    "Intent는 Built-in Intent와 Custom Intent로 구분됩니다."
  ]
},
    {
  "title": "Intent와 Entity > Built-in Intent",
  "hash": "#built-in-intent",
  "sentences": [
    "Built-in Intent",
    "자주 사용할 것으로 예상되거나 필수로 정의해야 하는 NUGU의 기본 제공 Intent입니다.",
    "Play 생성 시 추가되며, Capability Interface를 적용할 때마다 추가되는 Built-in Intent가 더 늘어납니다."
  ]
},
    {
  "title": "Intent와 Entity > Custom Intent",
  "hash": "#custom-intent",
  "sentences": [
    "Custom Intent",
    "특정 Play 내에서 정의된 Intent입니다."
  ]
},
    {
  "title": "Intent와 Entity > Entity",
  "hash": "#entity",
  "sentences": [
    "Entity",
    "Entity는 Intent만으로 특정 기능의 발화 의도를 표현하기 어려울 때 사용하는 부가 상세 정보를 의미하는 개체입니다. Entity는 Intent의 예상 발화 정의 시 해당 발화문 내에서 특정 텍스트를 지정하여 정의합니다. 예상 발화에서 정의된 Entity는 사용자 발화에서 동일한 의미/유형의 다른 어휘들로 나타날 수 있는 가변적인 요소입니다.",
    "Entity는 필요한 경우에만 정의하는 선택 요소이지만, 정의한 Entity가 사용자 발화에 누락된 경우는 정상적으로 기능을 동작시키지 못할 수 있습니다. 이 경우에는 Entity를 필수로 지정하여 사용자에게 다시 물어 Entity를 확인하거나, Play 개발자가 기본 값으로 처리하도록 개발할 수 있습니다.",
    "예를들어, “경로 알려줘” 라고 했을 때, <목적지>를 필수로 지정하여 \"목적지를 말씀해주시겠어요?\"와 같이 되묻도록 할 수 있고, 혹은, \"날씨 알려줘\"라고 했을 때, \"현재 계신 곳의 지금 날씨는 맑습니다\"와 같이 <현재 시간, 현재 위치>를 기본값으로 설정하여 처리할 수도 있습니다.목적지>",
    "예를 들어, ‘명동’, ‘남포동’, ‘역삼동’과 같은 개체들은 ‘동 이름’을 나타내며, 이것을 Entity Type이라고 부릅니다. 또한 발화 문장에서의 역할(목적지, 경유지, 위치 등)을 Entity Role이라고 합니다.",
    "Entity Type",
    "은 특정 Entity들의 집합 또는 그 범주를 의미하며,",
    "Entity Role",
    "은 특정 Entity의 발화 문장에서의 역할을 의미합니다.",
    "Entity Type은 Built-in Entity Type과 Custom Entity type으로 구분됩니다."
  ]
},
    {
  "title": "Intent와 Entity > Built-in Entity Type",
  "hash": "#built-in-entity-type",
  "sentences": [
    "Built-in Entity Type",
    "시간이나 장소, 숫자, 나이와 같이 범용적으로 자주 쓰이는 표현들을 정의해 둔 Entity Type입니다.",
    "Custom Entity Type과 동일하게 사용 가능합니다.",
    "28개의 Entity Type이 Built-in으로 제공되며, 이후 추가될 수 있습니다."
  ]
},
    {
  "title": "Intent와 Entity > Custom Entity Type",
  "hash": "#custom-entity-type",
  "sentences": [
    "Custom Entity Type",
    "특정 Play 내에서 정의된 Entity Type입니다.",
    "발화 문장에서 Entity가 특정 역할을 수행한다면, 이를 구분하여 Entity Role을 별도로 정의합니다. “서울에서 부산까지 항공편 예약해줘”라는 발화 문장에서, ‘서울’과 ‘부산’은 도시를 나타내는 동일한 Entity Type이지만, 서로 다른 역할(출발지, 목적지)을 수행하고 있으며, 이는 명확히 구분되어야 정상적으로 기능을 수행할 수 있습니다. 이 경우에는 ‘서울’은 출발지, ‘부산’은 목적지라는 역할(Role)을 구분하여 지정해야 합니다.",
    "서울에서 부산까지 항공편 예약해줘 | book.flight | 서울 | CITY | POINT_OF_DEPARTURE",
    "  |   | 부산 | CITY | DESTINATION"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/intro_components",
  "order": 186,
  "indexes": [
    {
  "title": "구성요소",
  "hash": "",
  "sentences": [
    "구성요소"
  ]
},
    {
  "title": "구성요소 > 구성요소 목록",
  "hash": "#구성요소-목록",
  "sentences": [
    "구성요소 목록",
    "NUGU SDK for Android 를 통한 개발을 위해서는 NuguCore, NuguInterface를 필수로 포함해야합니다.",
    "NUGU Component(Common)\n    \n      \nNuguCore : NUGU 서비스 이용에 필요한 구성요소들의 기본 구현을 제공합니다.\n      \nNuguInterface : NUGU SDK를 구성하는 필수 요소에 대한 인터페이스와 데이터 타입 등을 제공합니다.\n      \nNuguAgent : NUGU SDK를 구성할 때 필요한 capability agent를 제공합니다.\n      \nNuguClientKit : NUGU서비스를 쉽게 개발할 수 있도록 도와주는 기능을 제공합니다.",
    "NuguCore : NUGU 서비스 이용에 필요한 구성요소들의 기본 구현을 제공합니다.",
    "NuguInterface : NUGU SDK를 구성하는 필수 요소에 대한 인터페이스와 데이터 타입 등을 제공합니다.",
    "NuguAgent : NUGU SDK를 구성할 때 필요한 capability agent를 제공합니다.",
    "NuguClientKit : NUGU서비스를 쉽게 개발할 수 있도록 도와주는 기능을 제공합니다.",
    "NUGU Component(Depends on platform)\n    \n      \nNuguAndroidHelper : NUGU서비스를 안드로이드 플랫폼에서 쉽게 개발할 수 있도록 도와주는 기능을 제공합니다.\n      \nNuguUXKit :  NUGU의 디자인 가이드를 준수하는 UX 요소를 제공하고, Template 화면 노출 및 제어를 위한 도구를 제공합니다.\n      \nNuguLoginKit : NUGU의 로그인을 도와주는 기능을 제공합니다.\n      \nNuguServiceKit : NUGU 서비스의 Play 설정을 위한 WebView 를 제공합니다.",
    "NuguAndroidHelper : NUGU서비스를 안드로이드 플랫폼에서 쉽게 개발할 수 있도록 도와주는 기능을 제공합니다.",
    "NuguUXKit :  NUGU의 디자인 가이드를 준수하는 UX 요소를 제공하고, Template 화면 노출 및 제어를 위한 도구를 제공합니다.",
    "NuguLoginKit : NUGU의 로그인을 도와주는 기능을 제공합니다.",
    "NuguServiceKit : NUGU 서비스의 Play 설정을 위한 WebView 를 제공합니다.",
    "Vendor Component\n    \n      \nKeenSense : 키워드 인식 기능을 제공하는 라이브러리 입니다.\n      \nJadeMarble : 발화의 시작/끝 인식 기능을 제공하는 라이브러리 입니다.\n      \nSilverTray : TTS발화에 대한 NUGU서비스 전용 플레이어입니다.",
    "KeenSense : 키워드 인식 기능을 제공하는 라이브러리 입니다.",
    "JadeMarble : 발화의 시작/끝 인식 기능을 제공하는 라이브러리 입니다.",
    "SilverTray : TTS발화에 대한 NUGU서비스 전용 플레이어입니다."
  ]
},
    {
  "title": "구성요소 > Github",
  "hash": "#github",
  "sentences": [
    "Github"
  ]
},
    {
  "title": "구성요소 > NUGU",
  "hash": "#nugu",
  "sentences": [
    "NUGU",
    "nugu-android | https://github.com/nugu-developers/nugu-android"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/ios",
  "order": 174,
  "indexes": [
    {
  "title": "iOS",
  "hash": "",
  "sentences": [
    "iOS",
    "iOS 환경에서 NUGU 서비스를 쉽게 사용할 수 있도록 NUGU SDK for iOS를 제공합니다."
  ]
},
    {
  "title": "iOS > 특징",
  "hash": "#특징",
  "sentences": [
    "특징",
    "Swift로 작성되었으며 프로토콜 지향 프로그래밍(Protocol-Oriented Programming) 패러다임을 따르고 있습니다.",
    "주요 기능이 교체 가능한 구조로 특성에 따라 쉽게 커스터마이징 가능합니다.",
    "Objective-C 언어는 별도로 지원하지 않습니다. Objective-C 환경에서 사용하기 위해서는 별도로 Bridge 코드를 작성하여 사용해야 합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/reference/layer",
  "order": 211,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/use-backend-proxy/link-enrolled-user-api",
  "order": 51,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/link-oauth20",
  "order": 52,
  "indexes": [
    {
  "title": "OAuth 2.0 연동하기",
  "hash": "",
  "sentences": [
    "OAuth 2.0 연동하기",
    "Play Builder를 NUGU 스피커를 통해 훌륭한 서비스를 만들 수 있지만 OAuth 2.0을 이용해 사용자 계정에 접속한다면 다음과 같은 더욱 확장된 서비스를 만들 수 있습니다.",
    "Google Calendar의 일정 관리",
    "Facebook의 내 계정의 새로운 소식 알림",
    "쇼핑몰에서 사용자의 계정으로 주문 처리",
    "내 회사의 계정으로 업무 처리"
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > OAuth란?",
  "hash": "#oauth란",
  "sentences": [
    "OAuth란?",
    "OAuth는 인터넷 사용자들이 비밀번호를 제공하지 않고 다른 웹사이트 상의 자신들의 정보에 대해 웹사이트나 애플리케이션의 접근 권한을 부여할 수 있는 공통적인 수단으로서 사용되는, 접근 위임을 위한 개방형 표준이다.",
    "이 매커니즘은 여러 기업들에 의해 사용되는데, 이를테면 아마존, 구글, 페이스북, 마이크로소프트, 트위터가 있으며 사용자들이 타사 애플리케이션이나 웹사이트의 계정에 관한 정보를 공유할 수 있게 허용한다.",
    "출처: Wikipedia",
    "OAuth를 이용해 사용자 정보에 접근할 수 있고, 이를 통해 Play의 기능을 확장할 수 있습니다. NUGU developers에서는 OAuth 2.0 연동을 지원하며 다음의 방식으로 이용할 수 있습니다.",
    "아마존, 구글, 페이스북, 마이크로소프트, 트위터와 같은 잘 알려진 OAuth 2.0 계정을 이용 (이하 소셜 계정 이용)",
    "자체 OAuth 2.0 Server 이용 (이하 자체 계정 이용)"
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > 소셜 계정을 이용하여 OAuth 2.0 연동하기",
  "hash": "#소셜-계정을-이용하여-oauth-20-연동하기-",
  "sentences": [
    "소셜 계정을 이용하여 OAuth 2.0 연동하기",
    "다음 예는 깃허브(Github)의 OAuth 2.0 계정과 연동하는 방법을 나타낸 것입니다. 다른 소셜 계정도 비슷한 방식으로 연동이 가능합니다.",
    "다음의 1~4 단계까지는 깃허브(Github)의 Building OAuth Apps 문서를 참고합니다."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > 1단계: OAuth App 생성하기",
  "hash": "#1단계-oauth-app-생성하기",
  "sentences": [
    "1단계: OAuth App 생성하기",
    "깃허브(Github) 가이드 페이지",
    "Creating an OAuth App",
    "에서도 OAuth App 생성에 대한 내용을 확인할 수 있습니다.",
    "Github App의 우측 상단 내 Profile 사진을 클릭하고 Settings > Developers settings > OAuth Apps > Settings 메뉴를 클릭합니다.",
    "New OAuth App 버튼을 클릭하여 새로운 OAuth App을 만듭니다.\n    \n      \n        최초 등록하는 경우, 버튼에는 Register a new application이라고 표시됩니다.",
    "최초 등록하는 경우, 버튼에는 Register a new application이라고 표시됩니다.",
    "OAuth App 생성 화면에서 Application name, Homepage URL, Application description, Authorization callback URL을 입력한 후 Register application을 눌러 OAuth App을 생성을 완료합니다.\n    \n      \n        Authorization callback URL에는 https://developers.nugu.co.kr/app/callback.html을 입력합니다.",
    "Authorization callback URL에는 https://developers.nugu.co.kr/app/callback.html을 입력합니다."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > 2단계: OAuth App 정보 확인하기",
  "hash": "#2단계-oauth-app-정보-확인하기",
  "sentences": [
    "2단계: OAuth App 정보 확인하기",
    "1단계에서 등록한 OAuth App에서 Client ID와 Client Secret 정보를 확인합니다."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > 3단계: OAuth URL 정보 확인하기",
  "hash": "#3단계-oauth-url-정보-확인하기",
  "sentences": [
    "3단계: OAuth URL 정보 확인하기",
    "깃허브(Github) 가이드 페이지",
    "Authorizing OAuth Apps",
    "에서도 OAuth 연동에 필요한 URL 관련 내용을 확인할 수 있습니다.",
    "로그인 : 1. Request a user’s GitHub identity",
    "Access token : 2. Users are redirected back to your site by GitHub",
    "Github에서는 Access token 재발급이 필요없습니다. 하지만 다른 소셜 계정에서는 Access Token 재발급이 필요할 수 있습니다. 이 경우 소셜 계정의 OAuth 개발 가이드에서 OAuth token 재발급 URL을 확인하면 됩니다."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > 4단계: Scope 결정하기",
  "hash": "#4단계-scope-결정하기",
  "sentences": [
    "4단계: Scope 결정하기",
    "OAuth Scope는 Access Token으로 사용할 수 있는 리소스의 허용 범위를 이야기한다. 이 값은 각 소셜 계정별로 정의하는 값이 다르므로 각 소셜 계정의 OAuth 개발 가이드를 참고하여 정해야 합니다.",
    "깃허브(Github) 가이드 페이지",
    "Understanding scopes for OAuth Apps",
    "에서도 관련 내용을 확인할 수 있습니다."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > 5단계: NUGU developers에서 OAuth 연동 정보 입력",
  "hash": "#5단계-nugu-developers에서-oauth-연동-정보-입력",
  "sentences": [
    "5단계: NUGU developers에서 OAuth 연동 정보 입력",
    "2단계부터 4단계에 걸쳐 확인한 정보를",
    "Developers",
    ">",
    "Play kit",
    ">",
    "Play 관리",
    "메뉴에서",
    "Play 등록하기",
    "버튼을 클릭해 OAuth 계정 연동 정보를 입력합니다."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > ① 로그인 URL",
  "hash": "#-로그인-url",
  "sentences": [
    "① 로그인 URL",
    "3단계에서 확인한 URL을 입력합니다. (",
    "https://github.com/login/oauth/authorize",
    ")"
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > ② 클라이언트 ID",
  "hash": "#-클라이언트-id",
  "sentences": [
    "② 클라이언트 ID",
    "2단계에서 확인한 Client ID를 입력합니다. (ex: 3978bf6158e32d7ea05b)"
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > ③ 권한 범위",
  "hash": "#-권한-범위",
  "sentences": [
    "③ 권한 범위",
    "repo와 gist를 추가합니다.(최대 5개)"
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > ④ Access token URL",
  "hash": "#-access-token-url",
  "sentences": [
    "④ Access token URL",
    "3단계에서 확인한 URL을 입력합니다.(",
    "https://github.com/login/oauth/access_token",
    ")"
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > ⑤ 클라이언트 secret",
  "hash": "#-클라이언트-secret",
  "sentences": [
    "⑤ 클라이언트 secret",
    "2단계에서 확인한 클라이언트 Secret을 입력합니다. 예) 12bf7a85698496fd87e6cb6703914617fb693ce0)"
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > 6단계: Backend proxy 개발하기",
  "hash": "#6단계-backend-proxy-개발하기",
  "sentences": [
    "6단계: Backend proxy 개발하기",
    "위 1~5 단계까지의 작업을 통해 Play 개발 시 사용할 OAuth Token이 준비되면, 이 Access token을 사용할 Backend proxy를 개발해야 합니다.",
    "Backend proxy 개발에 대한 자세한 내용은 Backend proxy에서 Access token 사용하기를 참고하세요."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > 자체 계정을 이용하여 OAuth 2.0 연동하기",
  "hash": "#자체-계정을-이용하여-oauth-20-연동하기-",
  "sentences": [
    "자체 계정을 이용하여 OAuth 2.0 연동하기",
    "OAuth 2.0 Protocol",
    "을 지원하는 OAuth 2.0 Server를 새로 구축하거나 이미 가지고 있다면 즉시 서비스를 사용할 수 있습니다.",
    "OAuth 2.0 Serve는 인터넷의 기술 문서를 참고하여 구축할 수 있으며, 필요한 경우 에이전시를 통하여 자체 계정을 이용한 OAuth Authorization Serve를 구축할 수 있습니다.",
    "Grant Type : Authorization Code Grant",
    "Token Type : Bearer token"
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > Play의 OAuth 연동 정보 작성",
  "hash": "#play의-oauth-연동-정보-작성",
  "sentences": [
    "Play의 OAuth 연동 정보 작성",
    "Developers",
    ">",
    "Play kit",
    ">",
    "Play 관리",
    "메뉴에서",
    "Play 등록하기",
    "버튼을 클릭해 OAuth 계정 연동 정보를 입력합니다.",
    "*(별표) 표시는 필수 제공해야 하는 내용입니다.",
    "로그인 URL* | 사용자가 로그인하기 위해 이동(redirect)되어야 하는 URL입니다. | https://your-domain/login?querystring",
    "클라이언트 ID* | 토큰을 요청할 때 사용하는 클라이언트 ID입니다. | caDRl3WOuL5myqfHW3bjTIzGRJsVVMGP",
    "권한 범위 | Access Toke Scope이 있는 경우 입력합니다.자세한 내용은 OAuth 2.0 문서의 Access Token Scope 참고하세요. | repo, gist",
    "Access token URL* | Access Token을 발급 받을 수 있는 URL을 입력합니다.자세한 내용은 OAuth 2.0 문서의 Access Token Request를 참고하세요. | https://your-domian/access-token",
    "Access token 재발급 URL | Refresh token을 발급받기 위한 URL입니다.자세한 내용은 OAuth 2.0 문서의 Refreshing an Access Token를 참고하세요. | https://your-domain/refresh-token",
    "클라이언트 secret* | 토큰을 요청할 때 클라이언트ID와 함께 사용하는 값입니다. | CigogRESYHuSzTTa"
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > Redirect URL (Callback URL) 설정하기",
  "hash": "#redirect-url-callback-url-설정하기",
  "sentences": [
    "Redirect URL (Callback URL) 설정하기",
    "Parameter값: redirect url",
    "계정 승인을 완료한 후 사용자가 이동할 페이지 URL이며, https://developers.nugu.co.kr/app/oauth/callback을 사용합니다.",
    "자세한 내용은 OAuth 2.0 문서의 Authorization Request를 참고하세요."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > OAuth Server 구현하기",
  "hash": "#oauth-server-구현하기",
  "sentences": [
    "OAuth Server 구현하기",
    "OAuth 관련 서적을 참고하거나",
    "https://oauth.net/code/",
    "와 같은 웹사이트에서 제공하는 라이브러리를 사용하여 OAuth Server를 구현할 수 있습니다."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > Backend proxy에서 Access token 사용하기",
  "hash": "#backend-proxy에서-access-token-사용하기-",
  "sentences": [
    "Backend proxy에서 Access token 사용하기",
    "Play 개발을 위해서 OAuth Token을 사용할 준비가 끝났으며, Play 사용자는 NUGU App을 통해서 OAuth 로그인을 통해 OAuth Token을 받을 수 있습니다. 그리고 Play 개발자는 Backend proxy을 통해서 context.session 항목으로 Access token을 받을 수 있습니다.",
    "POST /action.name\nHost: backend.proxy.host.domain\nAccept: application/json\nContent-Length: 85\nContent-Type: application/json",
    "{\n  \"version\": \"2.0\",\n  \"action\": {\n    \"actionName\": \"action.name\",\n    \"parameters\": {\n      \"...\": {\n        \"type\": \"...\",\n        \"value\": \"...\"\n      }\n    }\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"85964e40-cf9c-4eae-841b-d736d5ef9060\",\n      \"isNew\": true,\n      \"accessToken\": \"EiIvr59Q02vBi2CJRJOLRxGopq0U\"\n    },\n  ..."
  ]
},
    {
  "title": "OAuth 2.0 연동하기 > OAuth Token을 더이상 사용하지 못하도록 만료 처리",
  "hash": "#oauth-token을-더이상-사용하지-못하도록-만료-처리",
  "sentences": [
    "OAuth Token을 더이상 사용하지 못하도록 만료 처리",
    "사용자가 OAuth 인증을 한 이후에 아래와 같이 Invalidate Token API를 호출하여 OAuth Token을 만료 처리할 수 있습니다. 요청 Form의 token은 Access Token 입니다. Token이 만료처리되면 더이상 Backend proxy로 Access token이 전달되지 않습니다. 사용자는 Token이 만료되어도 ‘계정 연동’을 통해 다시 OAuth 인증을 받을 수 있습니다.",
    "POST /v1/play/oauth/invalidate\nHost: api.sktnugu.com\nContent-Length: 168\ncontent-Type: application/x-www-form-urlencoded",
    "token=EiIvr59Q02vBi2CJRJOLRxGopq0U",
    "성공한 경우는 아래 응답을 주며 Token은 즉시 만료처리됩니다.",
    "HTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length: 11",
    "{\"ok\": true}",
    "요청한 Token과 일치하는 것이 없는 경우 아래와 같이 에러 응답을 반환합니다.",
    "HTTP/1.1 200 OK\nContent-Type: application/json\nContent-Length:",
    "{\"ok\": false, \"error\": \"invalid_auth\"}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/linux",
  "order": 196,
  "indexes": [
    {
  "title": "Linux",
  "hash": "",
  "sentences": [
    "Linux",
    "Linux 환경에서 NUGU 서비스를 쉽게 사용할 수 있도록 NUGU SDK for Linux를 제공합니다."
  ]
},
    {
  "title": "Linux > 특징",
  "hash": "#특징",
  "sentences": [
    "특징",
    "deb 패키지(Debian Package)로 배포하여 쉽게 설치가 가능합니다.",
    "SDK 자체에서 plug-in 구조를 지원하여, 디바이스 특성에 따라 쉽게 Porting이 가능합니다. (GStreamer, PortAudio, Opus decoder 등의 기본 plug-in 함께 제공)",
    "GMainloop 기반으로 구현되어 event-driven 방식의 Application 개발에 용이합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/reference/list-of-unit-tags-supported-by-utterance-options",
  "order": 213,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/location",
  "order": 158,
  "indexes": [
    {
  "title": "Location",
  "hash": "",
  "sentences": [
    "Location",
    "디바이스 위치 정보를 Play 로 전달하기 위한 규격"
  ]
},
    {
  "title": "Location > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.0 입니다.",
    "1.0 | 2019.12.04 | 규격 추가"
  ]
},
    {
  "title": "Location > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Location > LocationAgent 사용",
  "hash": "#locationagent-사용",
  "sentences": [
    "LocationAgent 사용",
    "Location interface 규격에 따른 디바이스의 동작 제어는 LocationAgent 가 처리합니다.",
    "Linux 는 LocationAgent 를 지원하지 않습니다.",
    "Android",
    "iOS",
    "NuguAndroidClient instance 를 통해 LocationAgent instance 에 접근할 수 있습니다.",
    "val locationAgent = nuguAndroidClient.getAgent(LocationAgent.NAMESPACE)",
    "NuguClient instance 를 통해 LocationAgent instance 에 접근할 수 있습니다.",
    "let locationAgent = nuguClient.locationAgent"
  ]
},
    {
  "title": "Location > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "Play 에서 위치 정보 기반의 정보를 제공 받기 위해서는 디바이스의 위치 정보를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android",
    "iOS",
    "LocationProvider 를 추가합니다.",
    "val provider = object: LocationProvider {\n    override fun getLocation(): Location? {\n        ...\n    }\n}\nNuguAndroidClient.Builder(...)\n    .enableLocation(provider)",
    "LocationAgentDelegate 를 추가합니다.",
    "class MyLocationAgentDelegate: LocationAgentDelegate {\n    func locationAgentRequestLocationInfo() -> LocationInfo? {\n        ...\n    }\n}\nlocationAgent.delegate = MyLocationAgentDelegate()"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/support-tools/log-mining",
  "order": 55,
  "indexes": [
    {
  "title": "실패 발화 분석",
  "hash": "",
  "sentences": [
    "실패 발화 분석",
    "실패 발화 분석",
    "은 최종적으로 사용자에게 전달된 응답이 서비스 실패로 판단되는 경우, 그 때의 사용자 발화를 분석하는 도구입니다. 빌드/심사 단계를 거쳐 배포가 완료된 Play에 대해서만 동작하며, 업데이트를 통해 Play가 새로 배포되면, 해당 배포 시점 부터 새로운 분석이 시작됩니다. 이 분석 도구에서 제공되는 기초 통계 정보 및 추천 정보를 활용하여 User Utterance Model을 수정하는 것을 권장합니다.",
    "정상 응답 실패 | NLU 분석은 이루어졌으나, 정상 응답이 되지 않은 것으로 추정되는 발화",
    "NLU 분석 실패 | NLU 분석이 되지 않아, Fallback 처리된 발화",
    "이 도구는 스피커를 통해 사용자에게 전달되는 최종 응답이 에러 메세지에 해당하는 경우 ‘서비스 실패’라고 판단하며, 이 때 NLU 분석이 되었다면",
    "정상 응답 실패",
    ", NLU 분석 결과가 없다면",
    "NLU 분석 실패",
    "로 분류합니다.",
    "Fallback prompt",
    ",",
    "Exception prompt",
    "외에도, 일반 액션에서 “제가 할 수 없는 일이에요.”, “검색에 실패했습니다” 등과 같은 응답이 전달된 경우, 서비스 실패로 분류되어",
    "실패 발화 분석",
    "도구의 분석 대상이 될 수 있습니다."
  ]
},
    {
  "title": "실패 발화 분석 > 정상 응답 실패",
  "hash": "#정상-응답-실패-",
  "sentences": [
    "정상 응답 실패",
    "이 도구에서는 Play 개발자가 생성한 User Utterance Model에 의해 NLU 분석은 이루어졌으나, 정상적인 응답이 나가지 않은 경우의 로그를 확인할 수 있습니다. NLU 분석이 이루어졌다고 하여, 그 분석이 Play 개발자의 의도대로 되었다고 간주할 수는 없습니다. NLU 엔진이 사용자 발화를 개발자의 의도대로 분석했으나 처리 가능 범위 밖의 요청이었을 수 있고, 또는 개발자의 의도대로 분석하지 않고 다르게 분석했을 수도 있습니다.",
    "첫 번째 경우(의도대로 분석되었으며 그 요청이 가능 범위 밖인 경우)는 별도의 대응이 필요없으나, 두 번째 경우(예상과 다르게 분석된 경우)는 학습 문장을 추가/수정하거나, Entity를 수정/추가하여 의도대로 분석이 되도록 User Utterance Model을 수정하는 것을 권장합니다."
  ]
},
    {
  "title": "실패 발화 분석 > NLU 분석 실패",
  "hash": "#nlu-분석-실패-",
  "sentences": [
    "NLU 분석 실패",
    "Play 개발자가 요청한 학습 데이터를 기반으로 생성된 User Utterance Model 만으로는 NLU 엔진이 해당 발화를 분석할 수 없는 경우 해당 발화를 보여주며, 그 중 해결 방안을 제안할 수 있는 경우 이를 보여줍니다. 이 도구가 제시하는 해결 방안은 크게 두 가지",
    "Entity 등록",
    "과",
    "용언 등록",
    "이 있습니다."
  ]
},
    {
  "title": "실패 발화 분석 > 추천 해결 방안 1 : Entity 등록",
  "hash": "#추천-해결-방안-1--entity-등록-",
  "sentences": [
    "추천 해결 방안 1 : Entity 등록",
    "NLU 분석 실패 발화 내의 특정 단어가 Entity일 가능성이 있어서 Entity로 등록할 필요가 있다고 분석되는 경우에 추천 방안이 제시됩니다. 이 추천 결과를 통해 (1) 해당 문장 자체를 기존 Intent의 예상 발화로 추가하거나, (2) 발화 내의 특정 단어를 Entity로 추가하여 Model을 수정하는 것을 권장합니다."
  ]
},
    {
  "title": "실패 발화 분석 > (1) 이 문장과 유사한 훈련 문장이 있는 Intent",
  "hash": "#1-이-문장과-유사한-훈련-문장이-있는-intent",
  "sentences": [
    "(1) 이 문장과 유사한 훈련 문장이 있는 Intent",
    "NLU 분석 실패",
    "도구는 사용자 발화와 유사하다고 분석되는 훈련 문장(예상 발화)이 있는 경우 그 문장과 Intent를 모두 보여줍니다. 이 도구는 문장의 패턴을 통해 유사한 훈련 문장을 찾기 때문에 실제 의미는 다른 문장이 분석 결과로 제안될 수 있으며, 여러 문장이 동시에 노출될 수도 있습니다. 분석 결과 중 사용자 발화의 의도라고 판단되는 Intent가 있다면, 우측의 버튼을 통해 분석 대상을 Intent의 학습 문장으로 추가할 수 있습니다. 사용자 발화를 여러 Intent의 훈련 문장으로 추가하는 경우 원하는 분석 결과를 얻을 수 없으므로, 하나의 Intent에만 추가하는 것을 권장합니다."
  ]
},
    {
  "title": "실패 발화 분석 > (2) 이 문장 내 Entity 등록을 추천하는 텍스트",
  "hash": "#2-이-문장-내-entity-등록을-추천하는-텍스트",
  "sentences": [
    "(2) 이 문장 내 Entity 등록을 추천하는 텍스트",
    "사용자 발화에 포함된 텍스트 중 Entity 등록을 추천하는 단어가 있는 경우 그 텍스트들을 노출하며, 각 텍스트들과 유사한 텍스트가 포함된 Entity Type 들을 추천합니다. 하나의 텍스트에는 여러 Entity Type이 추천될 수 있습니다. 이 경우도 하나의 텍스트는 하나의 Entity Type에만 추가하는 것을 권장합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/distribute-and-manage-a-play/manage-a-play",
  "order": 104,
  "indexes": [
    {
  "title": "Play 관리",
  "hash": "",
  "sentences": [
    "Play 관리",
    "배포된 Play의 정보 확인 및 서비스 중지, 재개, 삭제 등 상태 관리는",
    "Developers Console",
    ">",
    "Play kit",
    ">",
    "Play 관리",
    "메뉴 기능을 통해 확인하거나 설정할 수 있습니다."
  ]
},
    {
  "title": "Play 관리 > Play 정보 확인",
  "hash": "#play-정보-확인-",
  "sentences": [
    "Play 정보 확인",
    "배포가 완료된 Play는",
    "Developers Console",
    ">",
    "Play kit",
    ">",
    "Play 관리",
    "메뉴에서 등록된 정보와 상태를 확인하고, 상태 변경을 할 수 있습니다.",
    "이 페이지에서 확인할 수 있는 Play의 정보는 다음과 같습니다.",
    "기본 정보",
    "등록 정보",
    "공개유형이 Private Play인 경우, NUGU biz kit에 연결된 아래의 정보를 추가 확인이 가능합니다.",
    "Play가 제공 중인 전용 디바이스(Private Play에 한함)",
    "Play를 사용중인 사용자(Private Play에 한함)"
  ]
},
    {
  "title": "Play 관리 > Play 상태 변경(중지  밎 서비스 재개)",
  "hash": "#play-상태-변경중지--밎-서비스-재개-",
  "sentences": [
    "Play 상태 변경(중지  밎 서비스 재개)",
    "Developers Console",
    ">",
    "Play kit",
    ">",
    "Play 관리",
    "메뉴에서 현재 서비스 중인 Play에 대해 중지(Disable)하거나 중지(Disable) 상태의 Play를 재개(Enable)할 수 있습니다.",
    "관리 현황 리스트에서 상태를 변경할 Play를 클릭하여 선택합니다.",
    "상태 정보 항목의 Enable 또는 Disable 버튼을 클릭한 후, 상태 변경 확인창에서 [확인] 버튼을 클릭하여 상태를 변경합니다.\n상태를 변경하면 해당 Play의 상태가 Enable 또는 Disable 상태로 바뀌며 서비스가 중지되거나 재개됩니다.",
    "Play의 상태 변경(Enable → Disable, Disable → Enable)은 자유롭게 설정할 수 있으나 NUGU developers의 관리자가 직권 중지한 Play는 개발자가 직접 재개할 수 없습니다.이 경우 NUGU developers 운영자에 문의 등록하여 Play 직권 중지 사유에 대해 확인을 해야 합니다. 이후 중지 사유가 해결됐을 경우에만 Play 서비스를 재개할 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/manage-enrolled-user",
  "order": 115,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/manage-exceptions",
  "order": 35,
  "indexes": [
    {
  "title": "예외 상황 관리",
  "hash": "",
  "sentences": [
    "예외 상황 관리",
    "Play가 동작하는 과정에서 정상적인 응답을 하지 못하는 경우가 발생할 수 있습니다. ‘예외 상황 관리’는 이렇게 정상적인 응답을 못하는 경우를 별도로 관리하는 공간으로, Exception Code와 그 상황에 나가게 될 메시지를 Prompt로 작성할 수 있습니다. 어떠한 상황이 예외 상황에 해당한다는 판단은 Backend proxy에서 하며, Backend proxy에서 Exception Code를 전달받으면, Action은 동작을 멈추고 Exception Prompt를 사용자에게 전달하게 됩니다.",
    "예외 상황 관리는 Play의 모든 Action에 자동으로 적용되게 하거나 각 Action별로 설정할 수 있습니다. 각 Action별로 정의한 Exception Code는 해당 Action에서만 유효합니다. 예외 상황 관리는 Backend proxy의 URL이 등록되어 있어야 하고, Action의 Backend proxy 사용여부가 On으로 설정 되어 있어야 합니다."
  ]
},
    {
  "title": "예외 상황 관리 > 예외 상황 등록 방법",
  "hash": "#예외-상황-등록-방법",
  "sentences": [
    "예외 상황 등록 방법",
    "외부 연동 서버(Backend proxy)의 URL을 입력합니다.\n    \n      \n        http:// 또는 https://를 함께 입력해야 합니다.",
    "http:// 또는 https://를 함께 입력해야 합니다.",
    "Backend proxy 사용 여부를 ON으로 설정합니다.",
    "예외 처리 영역에서 Exception Code를 작성하고 [Enter] 키를 누릅니다.",
    "Exception Prompt 필드에 응답할 Prompt를 입력한 후 [Enter] 키를 누릅니다.\n    \n      \n        Exception Code 하나당 Exception Prompt는 총 2개까지 입력 가능합니다.\n\n        입력창에 처음 입력하는 Prompt의 유형은 종료 Prompt로, 두번째로 입력하는 Prompt는 대기 Prompt로 자동 설정됩니다.\n      \n      \n        예외 상황의 Prompt는 스택으로 구성되어, LIFO(Last In First Out)로 동작합니다.",
    "Exception Code 하나당 Exception Prompt는 총 2개까지 입력 가능합니다.\n\n        입력창에 처음 입력하는 Prompt의 유형은 종료 Prompt로, 두번째로 입력하는 Prompt는 대기 Prompt로 자동 설정됩니다.",
    "예외 상황의 Prompt는 스택으로 구성되어, LIFO(Last In First Out)로 동작합니다.",
    "예외 상황은 일반적으로 두 가지 종류가 있습니다.",
    "서버 장애, 네트워크 문제 등으로 인해 서비스 제공이 불가능한 경우\n    \n      사용자에게 서비스 제공이 불가능한 이유를 간단히 설명하고 세션을 종료해야 하므로 종료 Prompt만 등록해야 합니다.",
    "사용자에게 서비스 제공이 불가능한 이유를 간단히 설명하고 세션을 종료해야 하므로 종료 Prompt만 등록해야 합니다.",
    "사용자의 발화에서 분석된 Entity에 문제가 있거나 Entity 간 정합성 문제 등으로 기능 동작이 불가능한 경우\n    \n      사용자에게 Entity에 대해 문제가 있음을 안내하고 종료 Prompt를 통해 세션을 종료할 수도 있으나 사용자로부터 정보를 입력받도록 대기 Prompt를 추가를 할 수도 있습니다.",
    "사용자에게 Entity에 대해 문제가 있음을 안내하고 종료 Prompt를 통해 세션을 종료할 수도 있으나 사용자로부터 정보를 입력받도록 대기 Prompt를 추가를 할 수도 있습니다.",
    "Exception Prompt에서는 무엇이 문제인지를 간단하게 안내한 뒤, 해결 방법을 제시하여 사용자의 올바른 응답을 유도해야 합니다. 세션 종료를 하는 경우, 이를 안내해야 합니다.",
    "라디오를 스트리밍으로 재생해주는 Play를 만드는 경우를 예로 들어 살펴보도록 하겠습니다. 이러한 서비스를 하는 경우에는 Play 외부에 존재하는 스트리밍 서버의 장애가 발생할 가능성이 있습니다.",
    "이렇게 예상되는 장애는 (1)에 해당하므로 예외 상황으로 등록하여, 해당 장애 발생 시 사용자에게 정상적인 서비스가 불가능한 이유를 간단히 안내하고 세션을 종료해야 합니다. 이런 경우에는 Exception Prompt는 종료 Prompt 하나만 등록합니다.",
    "그러나, 사용자가 요청한 채널이 미지원 채널인 경우는 (2)에 해당합니다. 이러한 경우에도 종료 Prompt만 사용하여 미지원 채널임을 안내하고 세션 종료할 수도 있지만, 대기 Prompt를 하나 더 추가하여 사용자에게 Entity를 다시 입력 받도록 대기 상태로 이동할 수도 있습니다.",
    "사용자로 부터 목적 시간이나 날짜를 입력 받는 Play에서는, ‘2월 31일’과 같이 특정 월을 나타내는 Entity와 특정 일을 나타내는 Entity의 조합이 맞지 않는 경우가 발생할 수도 있습니다. 이런 경우도 (2)에 해당하며 예외 상황으로 등록하고 다시 입력받을 수 있습니다.",
    "사용자 발화의 Entity를 체크하는 예외 상황을 등록했다면, 이 Exception Code가 동작하는 과정은 다음과 같습니다."
  ]
},
    {
  "title": "예외 상황 관리 > Exception Prompt를 통해 이동한 대기 상태의 특징",
  "hash": "#exception-prompt를-통해-이동한-대기-상태의-특징",
  "sentences": [
    "Exception Prompt를 통해 이동한 대기 상태의 특징",
    "대기 Prompt에 의해 활성화되는 대기 상태는 사용자가 발화한 Intent에 포커스를 둔 상태에서 추가로 발화를 듣는 상태입니다. 이 대기 상태에서는 사용자의 추가 발화로부터 Entity를 신규로 입력 받거나, 업데이트할 수 있습니다. 이 Entity는 해당 Action의 Utterance Parameter에 연결된 Entity Type일 때만 유효합니다.",
    "예를 들어, “2월 31일 날씨 알려줘”라고 하여, 예외 상황으로 체크하고 대기 상태로 이동하였다고 가정하겠습니다. 사용자가 “2월 28일 금요일 날씨 알려줘”라고 다시 발화했다면, 특정 일를 의미하는 ‘31일’은 ‘28일’로 업데이트되고, ‘금요일’은 신규로 입력 받아 Parameter에 담아 Backend proxy로 다시 전달합니다.",
    "즉, 정의되어 있으나 비어 있는 Utterance Parameter가 있다면 해당 Parameter를 Entity로 채울 수 있고, 이미 Parameter를 채운 Entity와 같은 Type의 값이 있다면 기존 Parameter의 값을 새로운 Entity로 대체하게 됩니다. 이 Exception Prompt를 통한 대기 상태에서는 이와 같이 Entity만 추가로 받을 수 있습니다. 사용자의 발화로부터 추가 발화를 입력 받아도 Entity를 채울 수 없는 경우에는 두 번째 Exception Prompt를 내보내고 세션이 종료됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/manage-poc",
  "order": 145,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/manage-shared-device",
  "order": 112,
  "indexes": [
    {
  "title": "Biz 전용 디바이스 관리",
  "hash": "",
  "sentences": [
    "Biz 전용 디바이스 관리",
    "NUGU 디바이스를 사무 공간, 호텔, 병원 등 다양한 공용 공간에서, 공간의 목적에 맞게 사용 가능합니다. NUGU 디바이스 설치 후 전용 디바이스로 등록/설정하면, NUGU 개인 계정과 연결없이 해당 공간에서 누구나 사용 가능합니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > 등록 프로세스",
  "hash": "#등록-프로세스-",
  "sentences": [
    "등록 프로세스",
    "전용 디바이스 기능 사용을 하려면, 먼저 디바이스를 등록해야 합니다.",
    "디바이스 등록은 사전 준비 → 디바이스 그룹 생성 → 디바이스 Setup Tool 설치 → Setup Tool을 통한 디바이스 등록 및 설정 프로세스로 진행합니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > 사전 준비",
  "hash": "#사전-준비-",
  "sentences": [
    "사전 준비",
    "전용 디바이스의 등록 설정을 위해선, 아래와 같은 사전 준비와 확인이 필요합니다.",
    "디바이스 전원 켜짐 확인",
    "디바이스의 전원이 켜져 있어야 합니다.",
    "Wi-Fi 연결 환경 확인",
    "디바이스 등록 작업을 진행할 PC 또는 노트북에서 Wi-Fi 연결이 가능해야 합니다.",
    "디바이스 설정 모드(Setup 모드)",
    "처음 개봉한 디바이스는 전원을 켜면 자동으로 설정 모드로 진입하기 때문에 별도의 설정 작업을 진행하지 않아도 됩니다. 단, 이미 사용하고 중인 디바이스의 경우, 스피커의 네트워크 진입 모드 버튼을 누르거나 스피커 상단의 음소거 버튼을 길게(7-8초) 눌러 설정 모드로 변경할 수 있습니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > 디바이스 그룹 생성",
  "hash": "#디바이스-그룹-생성-",
  "sentences": [
    "디바이스 그룹 생성",
    "사전 준비가 끝나면 다음으로 디바이스 그룹을 생성합니다.",
    "⁣1.",
    "Developers Console",
    ">",
    "Biz kit",
    ">",
    "Biz 전용 디바이스 관리",
    "메뉴에서",
    "그룹 생성하기",
    "버튼을 클릭합니다.",
    "⁣2. 디바이스 그룹 생성 팝업에서 생성할 디바이스 그룹의 기본 정보(디바이스 그룹명, 디바이스 그룹 설명, 주소)를 입력하고",
    "생성",
    "버튼을 클릭하면 그룹이 생성됩니다.",
    "특정 주소 정보가 필요한 서비스(예: 날씨)의 경우, 주소를 등록하면 등록한 주소지를 기준으로 서비스가 제공됩니다.",
    "디바이스 그룹 현황 리스트에 생성한 디바이스 그룹이 표시됩니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > Setup Tool 설치 및 디바이스 등록",
  "hash": "#setup-tool-설치-및-디바이스-등록-",
  "sentences": [
    "Setup Tool 설치 및 디바이스 등록",
    "디바이스 그룹을 생성한 후에는 [Setup Tool]을 설치하고 사용할 디바이스를 등록합니다.",
    "⁣1.",
    "Developers Console",
    ">",
    "Biz kit",
    ">",
    "Biz 전용 디바이스 관리",
    "메뉴에서",
    "Setup Tool 다운로드",
    "버튼을 클릭하여 설치 파일을 내려받아 프로그램을 설치합니다.",
    "디바이스 Setup Tool은 Window 7 이상에서만 사용할 수 있습니다. Mac에서는 이용할 수 없습니다.",
    "⁣2. Setup Tool 프로그램을 실행하고, 전용 디바이스를 등록할 디바이스 그룹명을 선택하고",
    "다음",
    "버튼을 클릭합니다.",
    "⁣3.",
    "디바이스 검색",
    "버튼을 클릭하여 전용 디바이스로 등록할 디바이스를 검색 및 선택한 후",
    "다음",
    "버튼을 클릭합니다. 체험판 회원의 경우 10대의 디바이스만 등록이 가능합니다.",
    "디바이스 검색 시 디바이스 등록 번호로 노출이 됩니다. 등록 번호는 스피커 제품 하단에 명시되어 있습니다. 단, NUGU mini(NU200) 디바이스는 “NU-110XXXX”형태의 번호가 등록번호입니다.",
    "디바이스가 검색되지 않으면 NUGU 디바이스가 설정 모드로 설정되어 있는지 다시 한번 확인하세요.",
    "⁣4.",
    "Wi-Fi 검색",
    "버튼을 클릭하여 전용 디바이스에 등록하려는 Wi-Fi 네트워크를 선택한 후",
    "다음",
    "버튼을 클릭하여 네트워크를 설정합니다.",
    "⁣5. 네트워크 설정을 완료한 후",
    "다음",
    "버튼을 클릭하여 NUGU developers에 전용 디바이스로 등록을 요청합니다.",
    "보안 네트워크는 암호를 입력해야 합니다.",
    "⁣6. 디바이스 상태가 디바이스 등록 완료로 모두 변경되면",
    "다음",
    "버튼을 클릭합니다.",
    "⁣7. 디바이스 최종 등록 완료 메시지가 표시되면",
    "확인",
    "버튼을 클릭하여 작업을 종료합니다.",
    "디바이스는 한 번에 최대 25대씩 등록할 수 있습니다. 체험판은 기 등록된 디바이스 포함 총 10대 까지 등록 가능합니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > 디바이스 그룹 관리",
  "hash": "#디바이스-그룹-관리-",
  "sentences": [
    "디바이스 그룹 관리",
    "이 메뉴에서는 디바이스 그룹 정보를 수정 또는 삭제, 등록된 전용 디바이스 삭제, Private Play 추가 등의 작업을 할 수 있습니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > 디바이스 그룹 정보 수정",
  "hash": "#디바이스-그룹-정보-수정",
  "sentences": [
    "디바이스 그룹 정보 수정",
    "Developers Console",
    ">",
    "Biz kit",
    ">",
    "Biz 전용 디바이스 관리",
    "디바이스 그룹 현황 리스트에서 정보를 수정할 디바이스 그룹명을 클릭하여 선택합니다.",
    "디바이스 그룹 상세 페이지의 기본 정보 항목에 있는",
    "수정",
    "버튼을 클릭한 후 그룹명, 그룹설명, 주소 등의 기본 정보를 조회/변경할 수 있습니다. Biz API를 사용하는 정식판 권한의 경우, 추가적으로 API를 보낼 수 있는 디바이스 그룹 token을 확인 할 수 있습니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > 등록된 디바이스 삭제",
  "hash": "#등록된-디바이스-삭제",
  "sentences": [
    "등록된 디바이스 삭제",
    "디바이스 그룹 상세 페이지의 등록된 디바이스 항목에서 삭제할 디바이스를 선택한 후",
    "디바이스 삭제",
    "버튼을 클릭합니다.",
    "디바이스를 삭제하면 전용 디바이스 등록이 해제됩니다.",
    "해제된 디바이스는 Setup Tool을 통해 전용 디바이스로 재등록할 수 있습니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > Private Play 추가/삭제",
  "hash": "#private-play-추가삭제",
  "sentences": [
    "Private Play 추가/삭제",
    "디바이스 그룹 상세 페이지의 Private Play 항목에서",
    "Play 추가하기",
    "버튼을 클릭하여 Private Play 추가할 수 있습니다.",
    "등록한 Private Play를 삭제하려면, 삭제할 Private Play를 선택하고",
    "- Play 삭제",
    "버튼을 클릭합니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > 디바이스 그룹 삭제",
  "hash": "#디바이스-그룹-삭제",
  "sentences": [
    "디바이스 그룹 삭제",
    "디바이스 그룹을 삭제하려면, 디바이스 그룹 현황 리스트에서 삭제할 디바이스 그룹 선택 후",
    "디바이스 그룹 삭제",
    "버튼을 클릭합니다.",
    "디바이스 그룹을 삭제하면 그룹에 등록된 디바이스의 전용 디바이스 등록이 해제되며, 전용 디바이스 이용이 중지됩니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > 사용 제외 Play 설정",
  "hash": "#사용-제외-play-설정",
  "sentences": [
    "사용 제외 Play 설정",
    "정식판 권한의 경우, 전용 디바이스 그룹에서 NUGU에서 기본적으로 제공하는 Play 서비스를 사용할 수 없도록 제외 Play를 지정 할 수 있습니다.",
    "설정하기",
    "버튼으로 NUGU device의 기본 서비스 Play 목록을 조회합니다.",
    "해당 디바이스 그룹에서, 사용하지 못하게 할 특정 서비스 Play를 선택 합니다.",
    "설정이 완료되면, 해당 Play 서비스의 이용 시, 이용 불가능 안내 처리 됩니다."
  ]
},
    {
  "title": "Biz 전용 디바이스 관리 > Biz 전용 디바이스의 서비스 이용 제한",
  "hash": "#biz-전용-디바이스의-서비스-이용-제한-",
  "sentences": [
    "Biz 전용 디바이스의 서비스 이용 제한",
    "NUGU 디바이스를 전용 디바이스로 등록하면, 사용 제외 Play 설정과 관계없이 NUGU에서 제공되는 일부 서비스의 이용이 기본적으로 제한됩니다. 제한되는 서비스 항목은 다음과 같습니다.",
    "폰찾기",
    "MY Q&A",
    "긴급 SOS",
    "도미노 피자",
    "길찾기",
    "스마트 홈",
    "B tv 연동"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/mediaplayer",
  "order": 170,
  "indexes": [
    {
  "title": "MediaPlayer",
  "hash": "",
  "sentences": [
    "MediaPlayer",
    "음악 앱을 제어하기 위한 규격"
  ]
},
    {
  "title": "MediaPlayer > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.2 입니다.",
    "1.0 | 2020.07.15 | 규격 추가",
    "1.1 | 2020.10.29 | Song.category: SIMILAR 추가PlayFailed event(errorCode) : noSimilarSong 추가HandlePlaylist, HandleLyrics directive 추가HandlePlaylistSucceeded, HandlePlaylistFailed, HandleLyricsSucceeded, HandleLyricsFailed event 추가PlaySuspended event 의 issueCode 에 excludeSong 추가",
    "1.2 | 2022.05.06 | failed 관련 이벤트에 data 추가"
  ]
},
    {
  "title": "MediaPlayer > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "MediaPlayer > MediaPlayerAgent 사용",
  "hash": "#mediaplayeragent-사용",
  "sentences": [
    "MediaPlayerAgent 사용",
    "MediaPlayer interface 규격에 따른 디바이스의 동작 제어는 MediaAgent 가 처리합니다.",
    "Linux 는 MediaPlayerAgent 를 지원하지 않습니다.",
    "Android",
    "iOS",
    "NuguAndroidClient 생성시 MediaPlayerAgent 를 추가합니다.",
    "class MyMediaPlayer: MediaPlayer {\n    ...\n}\nNuguAndroidClient().Builder()\n            .addAgentFactory(MediaPlayerAgent.NAMESPACE, object : AgentFactory<MediaPlayerAgent> {\n                override fun create(container: SdkContainer): MediaPlayerAgent = with(container) {\n                    MediaPlayerAgent(\n                        MyMediaPlayer(),\n                        getMessageSender(),\n                        getContextManager(),\n                        getContextManager(),\n                        getDirectiveSequencer()\n                    )\n                }\n            })",
    "NuguAndroidClient instance 를 통해 MediaPlayerAgent instance 에 접근할 수 있습니다.",
    "val mediaPlayerAgent = nuguAndroidClient.mediaPlayerAgent",
    "NuguClient instance 를 통해 MediaPlayerAgent instance 에 접근할 수 있습니다.",
    "let mediaPlayerAgent = nuguClient.mediaPlayerAgent"
  ]
},
    {
  "title": "MediaPlayer > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "앱에서 재생중인 음원에 대한 정보를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android",
    "iOS",
    "MediaPlayer 를 구현합니다.",
    "class MyMediaPlayer: MediaPlayer {\n    override fun getContext(): Context {\n        ...\n    }\n\n    ...\n}",
    "MediaPlayerAgentDelegate를 추가합니다.",
    "class MyMediaPlayerAgentDelegate: MediaPlayerAgentDelegate {\n    func func mediaPlayerAgentRequestContext() -> MediaPlayerAgentContext? {\n        ...\n    }\n\n    ...\n}\nmediaPlayerAgent.delegate = MyMediaPlayerAgentDelegate()"
  ]
},
    {
  "title": "MediaPlayer > 제어 명령",
  "hash": "#제어-명령",
  "sentences": [
    "제어 명령",
    "사용자 발화",
    "에 의해 음악",
    "검색",
    "/",
    "재생",
    "/",
    "중지",
    "/",
    "다음",
    "/",
    "이전",
    "/",
    "탐색",
    "/",
    "일시정지",
    "/",
    "계속재생",
    "/",
    "다시재생",
    "/",
    "반복",
    "/",
    "즐겨찾기",
    "/",
    "셔플",
    "/",
    "재생목록 보기",
    "/",
    "가사 보기",
    "가 directive 로 요청될 수 있습니다.",
    "Android",
    "iOS",
    "MediaPlayer 를 구현합니다.",
    "class MyMediaPlayer: MediaPlayer {\n    override fun search(payload: SearchPayload, callback: EventCallback) {\n        ...\n    }\n\n    override fun play(header: Header, payload: PlayPayload, callback: PlayCallback) {\n        ...\n    }\n\n    override fun fun stop(header: Header, payload: Payload, callback: EventCallback) {\n        ...\n    }\n\n    override fun next(header: Header, payload: NextPayload, callback: NextCallback) {\n        ...\n    }\n\n    override fun previous(header: Header, payload: PreviousPayload, callback: PreviousCallback) {\n        ...\n    }\n\n    override fun move(header: Header, payload: MovePayload, callback: EventCallback) {\n        ...\n    }\n\n    override fun pause(header: Header, payload: Payload, callback: EventCallback) {\n        ...\n    }\n\n    override fun resume(header: Header, payload: Payload, callback: EventCallback) {\n        ...\n    }\n\n    override fun rewind(header: Header, payload: Payload, callback: EventCallback) {\n        ...\n    }\n\n    override fun toggle(header: Header, payload: TogglePayload, callback: EventCallback) {\n        ...\n    }\n\n    override fun handlePlaylist(header: Header, payload: HandlePlaylistPayload, callback: EventCallback) {\n        ...\n    }\n\n    override fun handleLyrics(header: Header, payload: HandleLyricsPayload, callback: EventCallback) {\n        ...\n    }\n\n    ...\n}",
    "MediaPlayerAgentDelegate를 추가합니다.",
    "class MyMediaPlayerAgentDelegate: MediaPlayerAgentDelegate {\n    func mediaPlayerAgentReceiveSearch(payload: MediaPlayerAgentDirectivePayload.Search, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Search) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceivePlay(payload: MediaPlayerAgentDirectivePayload.Play, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Play) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceiveStop(playServiceId: String, token: String, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Stop) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceiveNext(payload: MediaPlayerAgentDirectivePayload.Next, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Next) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceivePrevious(payload: MediaPlayerAgentDirectivePayload.Previous, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Previous) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceiveMove(payload: MediaPlayerAgentDirectivePayload.Move, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Move) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceivePause(playServiceId: String, token: String, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Pause) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceiveResume(playServiceId: String, token: String, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Resume) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceiveRewind(playServiceId: String, token: String, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Rewind) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceiveToggle(payload: MediaPlayerAgentDirectivePayload.Toggle, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.Toggle) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceivePlaylist(playServiceId: String, action: String, target: String?, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.HandlePlaylist) -> Void)) {\n        ...\n    }\n\n    func mediaPlayerAgentReceiveLyrics(playServiceId: String, action: String, header: Downstream.Header, completion: @escaping ((MediaPlayerAgentProcessResult.HandleLyrics) -> Void)) {\n        ...\n    }\n\n    ...\n}\nmediaPlayerAgent.delegate = MyMediaPlayerAgentDelegate()"
  ]
},
    {
  "title": "MediaPlayer > 재생중인 곡 정보 요청",
  "hash": "#재생중인-곡-정보-요청",
  "sentences": [
    "재생중인 곡 정보 요청",
    "재생중인 곡 정보가",
    "GetInfo",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "iOS",
    "MediaPlayer 를 구현합니다.",
    "class MyMediaPlayer: MediaPlayer {\n    override fun getInfo(payload: Payload, callback: GetInfoCallback) {\n        ...\n    }\n\n    ...\n}",
    "MediaPlayerAgentDelegate를 추가합니다.",
    "class MyMediaPlayerAgentDelegate: MediaPlayerAgentDelegate {\n    func func mediaPlayerAgentReceiveGetInfo(playServiceId: String, token: String, dialogRequestId: String, completion: @escaping ((MediaPlayerAgentProcessResult.GetInfo) -> Void)) {\n        ...\n    }\n\n    ...\n}\nmediaPlayerAgent.delegate = MyMediaPlayerAgentDelegate()"
  ]
},
    {
  "title": "MediaPlayer > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"MediaPlayer\": {\n    \"version\": \"1.0\",\n    \"appStatus\": \"{{STRING}}\",\n    \"playerActivity\": \"{{STRING}}\",\n    \"user\": {\n      \"isLogIn\": \"{{STRING}}\",\n      \"hasVoucher\": \"{{STRING}}\"\n    },\n    \"currentSong\": Song,\n    \"playlist\": {\n      \"name\": \"{{STRING}}\",\n      \"number\": \"{{STRING}}\",\n      \"length\": \"{{STRING}}\",\n      \"currentSongOrder\": \"{{STRING}}\"\n    },\n    \"toggle\": {\n      \"repeat\": \"{{STRING}}\",\n      \"shuffle\": \"{{STRING}}\"\n    }\n  }\n}",
    "appStatus | string | Y | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)- NOT_RUNNING- NORMAL : 정상 상태 디폴트- … : 지정된 에러코드",
    "playerActivity | string | Y | Y | 앱의 현재 재생 상태- STOPPED- PLAYING- PAUSED",
    "user | object | N | N | 사용자 정보",
    "user.isLogIn | string | Y | N | 로그인 여부 (TRUE/FALSE)",
    "user.hasVoucher | string | Y | N | 재생 가능 이용권 보유 여부 (TRUE/FALSE)",
    "currentSong | Song | N | N | 현재 재생 중이거나 마지막에 재생한 곡의 정보",
    "playlist | object | N | N | Play List가 현재 재생 상태이거나 멈춰있는 경우",
    "playlist.type | string | Y | N | 현재 재생 리스트의 타입- CHART : 차트 리스트 재생 중- PLAYLIST : 사용자 저장 플레이리스트 재생 중- THEMELIST : 테마리스트의 경우- DEFAULT : 위에 해당 사항이 없는 경우",
    "playlist.name | string | Y | N | 각 타입 내에서의 이름 (PLAYLIST, THEMELIST의 경우)",
    "playlist.number | string | Y | N | type이 “PLAYLIST”인 경우 mandantory 재생 중인 플레이리스트의 번호",
    "playlist.length | string | Y | N | 전체 곡 수",
    "playlist.currentSongOrder | string | Y | N | 현재 재생 곡 순서 (전체가 N이면, current 값은 1(첫곡), … N(마지막곡) 까지 나올 수 있음)",
    "toggle | object | N | N | Toggle Directive에서 지원하는 기능의 상태 정보 repeat, shuffle 중 지원하는 기능만 포함해야 함 (포함되지 않은 파라미터는 Play에서 미지원으로 판단)모두 지원하지 않으면 toggle 파라미터가 없어야 함",
    "toggle.repeat | string | N | N | ALL : 전체 반복ONE : 한곡 반복NONE : 반복 없음",
    "toggle.shuffle | string | N | N | 셔플 여부 (ON/OFF)"
  ]
},
    {
  "title": "MediaPlayer > Common Objects",
  "hash": "#common-objects",
  "sentences": [
    "Common Objects"
  ]
},
    {
  "title": "MediaPlayer > Song",
  "hash": "#song",
  "sentences": [
    "Song",
    "{\n  \"category\": \"{{STRING}}\",\n  \"theme\": \"{{STRING}}\",\n  \"genre\": [String],\n  \"artist\": [String],\n  \"album\": \"{{STRING}}\",\n  \"title\": \"{{STRING}}\",\n  \"duration\": \"{{STRING}}\",\n  \"issueDate\": \"{{STRING}}\",\n  \"etc\": { # arbitrary object }\n}",
    "category | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)- NONE- RECOMMEND- POPULAR- NEW- CHART- RECENT_PLAYED- FAVORITE- LIKE_SONG- LIKE_ALBUM- LIKE_ARTIST- LIKE_THEME- PLAYLIST- NOWPLAYING- SIMILAR",
    "theme | string | N | 테마",
    "genre | array of string | N | 장르",
    "artist | array of string | N | 아티스트",
    "album | string | N | 앨범",
    "title | string | N | 제목",
    "duration | string | N | 재생 시간 (단위: msec)",
    "issueDate | string | N | ISO 8601 포맷 (2020-06-01)",
    "etc | object | N | 기타 정보를 key:value 형태로 추가 가능"
  ]
},
    {
  "title": "MediaPlayer > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
},
    {
  "title": "MediaPlayer > Play",
  "hash": "#play",
  "sentences": [
    "Play",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Play\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"action\": \"{{STRING}}\",\n    \"asrText\": \"{{STRING}}\",\n    \"song\": Song,\n    \"toggle\": {\n      \"repeat\": \"{{STRING}}\",\n      \"shuffle\": \"{{STRING}}\"\n    },\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | 전달하는 Directive를 식별하기 위한 unique string결과 이벤트에 이 token을 그대로 전달해주어야 함",
    "action | string | Y | 앱의 동작 가능 여부를 모를 수 있기 때문에 상태를 파악하고 실행하는 동작을 구분하기 위해 정의- CHECK : 최초 호출 시- EXECUTE : suspended를 통해 상태가 확인되고 난 후 다시 요청하는 경우",
    "asrText | string | N | 요청된 발화문",
    "song | Song | N | -",
    "toggle | object | N | repeat, shuffle 중 지원하는 기능만 포함해야 함 (포함되지 않은 파라미터는 Play에서 미지원으로 판단)모두 지원하지 않으면 toggle 파라미터가 없어야 함",
    "toggle.repeat | string | N | ALL : 전체 반복ONE : 한곡 반복NONE : 반복 없음",
    "toggle.shuffle | string | N | 셔플 여부 (ON/OFF)",
    "data | obejct | N | Play Directive 처리 결과에 따라 Suspended 이벤트를 받을 수 있는데, 연속된 요청을 위해 최초 요청에서 사용된 정보를 이후 flow에서 사용하는 용도로 사용"
  ]
},
    {
  "title": "MediaPlayer > Stop",
  "hash": "#stop",
  "sentences": [
    "Stop",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Stop\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "MediaPlayer > Search",
  "hash": "#search",
  "sentences": [
    "Search",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Search\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"asrText\": \"{{STRING}}\",\n    \"song\": Song\n  }\n}",
    "token | string | Y | 전달하는 Directive를 식별하기 위한 unique string 결과 이벤트에 이 token을 그대로 전달해주어야 함",
    "asrText | string | N | 요청된 발화문",
    "song | Song | N | -"
  ]
},
    {
  "title": "MediaPlayer > Previous",
  "hash": "#previous",
  "sentences": [
    "Previous",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Previous\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"action\": \"{{STRING}}\",\n    \"target\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | 전달하는 Directive를 식별하기 위한 unique string결과 이벤트에 이 token을 그대로 전달해주어야 함",
    "action | string | Y | 앱의 동작 가능 여부를 모를 수 있기 때문에 상태를 파악하고 실행하는 동작을 구분하기 위해 정의- CHECK : 최초 호출 시- EXECUTE : suspended를 통해 상태가 확인되고 난 후 다시 요청하는 경우",
    "target | string | Y | TRACK, PLAYLIST",
    "data | object | N | Previous Directive 처리 결과에 따라 Suspended 이벤트를 받을 수 있는데, 연속된 요청을 위해 최초 요청에서 사용된 정보를 이후 flow에서 사용하는 용도로 사용"
  ]
},
    {
  "title": "MediaPlayer > Next",
  "hash": "#next",
  "sentences": [
    "Next",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Next\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"action\": \"{{STRING}}\",\n    \"target\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | 전달하는 Directive를 식별하기 위한 unique string결과 이벤트에 이 token을 그대로 전달해주어야 함",
    "action | string | Y | 앱의 동작 가능 여부를 모를 수 있기 때문에 상태를 파악하고 실행하는 동작을 구분하기 위해 정의- CHECK : 최초 호출 시- EXECUTE : suspended를 통해 상태가 확인되고 난 후 다시 요청하는 경우",
    "target | string | Y | TRACK, PLAYLIST",
    "data | object | N | Next Directive 처리 결과에 따라 Suspended 이벤트를 받을 수 있는데, 연속된 요청을 위해 최초 요청에서 사용된 정보를 이후 flow에서 사용하는 용도로 사용"
  ]
},
    {
  "title": "MediaPlayer > Move",
  "hash": "#move",
  "sentences": [
    "Move",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Move\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"direction\": \"{{STRING}}\",\n    \"sec\": {{LONG}}\n  }\n}",
    "direction | string | Y | FORWARD, BACKWARD",
    "sec | string | Y | 이동 시간 (단위 - 초)"
  ]
},
    {
  "title": "MediaPlayer > Pause",
  "hash": "#pause",
  "sentences": [
    "Pause",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Pause\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 전달하는 Directive를 식별하기 위한 unique string결과 이벤트에 이 token을 그대로 전달해주어야 함"
  ]
},
    {
  "title": "MediaPlayer > Resume",
  "hash": "#resume",
  "sentences": [
    "Resume",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Resume\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 전달하는 Directive를 식별하기 위한 unique string결과 이벤트에 이 token을 그대로 전달해주어야 함"
  ]
},
    {
  "title": "MediaPlayer > Rewind",
  "hash": "#rewind",
  "sentences": [
    "Rewind",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Rewind\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 전달하는 Directive를 식별하기 위한 unique string결과 이벤트에 이 token을 그대로 전달해주어야 함"
  ]
},
    {
  "title": "MediaPlayer > Toggle",
  "hash": "#toggle",
  "sentences": [
    "Toggle",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"Toggle\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"repeat\": \"{{STRING}}\",\n    \"like\": \"{{STRING}}\",\n    \"shuffle\": \"{{STRING}}\"\n  }\n}",
    "version | string | Y | 인터페이스 버전, 기본 값은 1.0",
    "playServiceId | string | Y | Directive 를 전달한 Play 정보.PlayRouter가 생성하기 때문에 NPK 규격에는 포함되지 않음.",
    "token | string | Y | 전달하는 Directive를 식별하기 위한 unique string결과 이벤트에 이 token을 그대로 전달해주어야 함",
    "repeat | string | N | ALL : 전체 반복ONE : 한곡 반복NONE : 반복 없음",
    "like | string | N | 좋아요 여부 (TRUE/FALSE)",
    "shuffle | string | N | 셔플 여부 (ON/OFF)"
  ]
},
    {
  "title": "MediaPlayer > GetInfo",
  "hash": "#getinfo",
  "sentences": [
    "GetInfo",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"GetInfo\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 전달하는 Directive를 식별하기 위한 unique string결과 이벤트에 이 token을 그대로 전달해주어야 함"
  ]
},
    {
  "title": "MediaPlayer > HandlePlaylist",
  "hash": "#handleplaylist",
  "sentences": [
    "HandlePlaylist",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"HandlePlaylist\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"action\": \"{{STRING}}\",\n    \"target\": \"{{STRING}}\"\n  }\n}",
    "action | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)Playlist 제어 동작- SHOW",
    "target | string | N | (임의의 String으로 SDK에서 enum 처리하면 안됨)특정 Playlist 지정"
  ]
},
    {
  "title": "MediaPlayer > HandleLyrics",
  "hash": "#handlelyrics",
  "sentences": [
    "HandleLyrics",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"HandleLyrics\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"action\": \"{{STRING}}\"\n  }\n}",
    "action | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)Playlist 제어 동작- SHOW- HIDE"
  ]
},
    {
  "title": "MediaPlayer > Events",
  "hash": "#events",
  "sentences": [
    "Events"
  ]
},
    {
  "title": "MediaPlayer > PlaySucceeded",
  "hash": "#playsucceeded",
  "sentences": [
    "PlaySucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"PlaySucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "message | string | N | 임의의 string으로 특정 정보를 전달하여 Play에서 활용하고자 하는 경우 사용 가능"
  ]
},
    {
  "title": "MediaPlayer > PlaySuspended",
  "hash": "#playsuspended",
  "sentences": [
    "PlaySuspended",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"PlaySuspended\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"song\": Song,\n    \"playlist\": {\n      \"name\": \"{{STRING}}\",\n      \"number\": \"{{STRING}}\"\n    },\n    \"issueCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "song | Song | N | -",
    "playlist | object | N | -",
    "playlist.name | string | N | 재생할 플레이리스트명",
    "playlist.number | string | Y | 재생할 플레이리스트의 번호",
    "issueCode | string | N | (임의의 String으로 SDK에서 enum 처리하면 안됨)- 재생을 수행하지만, 아래와 같은 특수 동작 및 prompt를 분기하는 경우• onlyAdult : 첫곡이 ‘성인 인증’이 필요한 음악으로, > skip하여 재생• disable : 첫곡이 서비스가 중지된 곡 > skip하여 재생• notAllowed : 첫 곡이 제공사 사정으로 재생할 수 없음. > skip하여 재생• onlyPreview : 첫 곡이 권리사 요청으로 미리듣기만 가능한 음악 > 미리듣기만 재생• noRecentPlayed : 최근들은 곡 요청시, 최근들은 이력이 없어서 실시간 차트로 대안 재생하는 경우• noFavoritePlayed : 많이 들은 곡 요청시, 많이들은 이력이 없어서 실시간 차트로 대안 재생하는 경우• excludeSong: 첫 곡이 안듣기 설정한 곡이어서 skip 하여 재생",
    "data | object | N | Play Directive에서 data 파라미터가 존재하면 그 object를 그대로 보내줘야 함"
  ]
},
    {
  "title": "MediaPlayer > PlayFailed",
  "hash": "#playfailed",
  "sentences": [
    "PlayFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"PlayFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- noPlaylist : 재생 가능 플레이리스트 없음- toBeReleased : 음악이 발매될 예정, 현재는 미발매 상태- searchFailed : 검색 실패, 메타상에 없음- disableAll : 재생 목록에 재생가능 상태 음원이 없음- noLikeSong : 좋아요한 곡이 없음- noNowlist : 현재재생목록 요청했으나 목록에 곡없음- noLikeAlbum : 좋아요한 앨범 없음- noLikeTheme : 좋아요한 테마 없음- noLikeArtist : 좋아요한 가수없음- multiPlayingStop : 멀티 디바이스 중복 재생으로 인한 autonext 시 재생 중단 발생 시- requireLogin : 로그인 기능이 필수인 동작이나, 비로그인상태로 인한 실패- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시- noSimilarSong : 유사곡(SIMILAR) 요청 시, 유사곡이 없는, 지원하지 않는 곡일 경우",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > StopSucceeded",
  "hash": "#stopsucceeded",
  "sentences": [
    "StopSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"StopSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token"
  ]
},
    {
  "title": "MediaPlayer > StopFailed",
  "hash": "#stopfailed",
  "sentences": [
    "StopFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"StopFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > SearchSucceeded",
  "hash": "#searchsucceeded",
  "sentences": [
    "SearchSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"SearchSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "message | string | N | 임의의 string으로 특정 정보를 전달하여 Play에서 활용하고자 하는 경우 사용 가능"
  ]
},
    {
  "title": "MediaPlayer > SearchFailed",
  "hash": "#searchfailed",
  "sentences": [
    "SearchFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"SearchFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > PreviousSucceeded",
  "hash": "#previoussucceeded",
  "sentences": [
    "PreviousSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"PreviousSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "message | string | N | 임의의 string으로 특정 정보를 전달하여 Play에서 활용하고자 하는 경우 사용 가능"
  ]
},
    {
  "title": "MediaPlayer > PreviousSuspended",
  "hash": "#previoussuspended",
  "sentences": [
    "PreviousSuspended",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"PreviousSuspended\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"song\": Song,\n    \"target\": \"{{STRING}}\",\n    \"playlist\": {\n      \"name\": \"{{STRING}}\",\n      \"number\": \"{{STRING}}\"\n    },\n    \"data\": { # arbitrary object}\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "song | Song | N | 재생하는 음원의 정보",
    "target | string | Y | PLAYLIST : 플레이리스트 이동 성공한 경우TRACK : 트랙 이동 성공한 경우",
    "playlist | object | N | -",
    "playlist.name | string | N | 재생할 플레이리스트명",
    "playlist.number | string | Y | 재생할 플레이리스트의 번호",
    "data | object | N | Play Directive에서 data 파라미터가 존재하면 그 object를 그대로 보내줘야 함"
  ]
},
    {
  "title": "MediaPlayer > PreviousFailed",
  "hash": "#previousfailed",
  "sentences": [
    "PreviousFailed",
    "{\n  \"header\": {\n    \"namespace\": \"PreviousFailed\",\n    \"name\": \"PlayFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- noPreviousPlaylist : 다음 플레이리스트 요청 시, 재생 가능한 플레이리스트가 없는 경우- noPreviousTrack : 다음 곡 요청 시, 재생 가능한 다음곡이 없는 경우,- noTargetSong : 플레이어에 재생가능한 곡이 없는 대기상태- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > NextSucceeded",
  "hash": "#nextsucceeded",
  "sentences": [
    "NextSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"NextSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "message | string | N | 임의의 string으로 특정 정보를 전달하여 Play에서 활용하고자 하는 경우 사용 가능"
  ]
},
    {
  "title": "MediaPlayer > NextSuspended",
  "hash": "#nextsuspended",
  "sentences": [
    "NextSuspended",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"NextSuspended\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"song\": \"{ #Song object }\",\n    \"target\": \"{{STRING}}\",\n    \"playlist\": {\n      \"name\": \"{{STRING}}\",\n      \"number\": \"{{STRING}}\"\n    },\n    \"data\": \"{ # arbitrary object}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "song | Song | N | 재생하는 곡 정보",
    "target | string | Y | PLAYLIST : 플레이리스트 이동 성공한 경우TRACK : 트랙 이동 성공한 경우",
    "playlist | object | N | -",
    "playlist.name | string | N | 재생할 플레이리스트명",
    "playlist.number | string | Y | 재생할 플레이리스트의 번호",
    "data | object | N | Play Directive에서 data 파라미터가 존재하면 그 object를 그대로 보내줘야 함"
  ]
},
    {
  "title": "MediaPlayer > NextFailed",
  "hash": "#nextfailed",
  "sentences": [
    "NextFailed",
    "{\n  \"header\": {\n    \"namespace\": \"NextFailed\",\n    \"name\": \"PlayFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- noNextPlaylist : 다음 플레이리스트 요청 시, 재생 가능한 플레이리스트가 없는 경우- noNextTrack : 다음 곡 요청 시, 재생 가능한 다음곡이 없는 경우,- noTargetSong : 플레이어에 재생가능한 곡이 없는 대기상태- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > MoveSucceeded",
  "hash": "#movesucceeded",
  "sentences": [
    "MoveSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"MoveSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "message | string | N | 임의의 string으로 특정 정보를 전달하여 Play에서 활용하고자 하는 경우 사용 가능"
  ]
},
    {
  "title": "MediaPlayer > MoveFailed",
  "hash": "#movefailed",
  "sentences": [
    "MoveFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"MoveFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > PauseSucceeded",
  "hash": "#pausesucceeded",
  "sentences": [
    "PauseSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"PauseSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "message | string | N | 임의의 string으로 특정 정보를 전달하여 Play에서 활용하고자 하는 경우 사용 가능"
  ]
},
    {
  "title": "MediaPlayer > PauseFailed",
  "hash": "#pausefailed",
  "sentences": [
    "PauseFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"PauseFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시- noTargetSong : 플레이어에 재생가능한 곡이 없는 대기상태",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > ResumeSucceeded",
  "hash": "#resumesucceeded",
  "sentences": [
    "ResumeSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"ResumeSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "message | string | N | 임의의 string으로 특정 정보를 전달하여 Play에서 활용하고자 하는 경우 사용 가능"
  ]
},
    {
  "title": "MediaPlayer > ResumeFailed",
  "hash": "#resumefailed",
  "sentences": [
    "ResumeFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"ResumeFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시- noTargetSong : 플레이어에 재생가능한 곡이 없는 대기상태",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > RewindSucceeded",
  "hash": "#rewindsucceeded",
  "sentences": [
    "RewindSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"RewindSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "message | string | N | 임의의 string으로 특정 정보를 전달하여 Play에서 활용하고자 하는 경우 사용 가능"
  ]
},
    {
  "title": "MediaPlayer > RewindFailed",
  "hash": "#rewindfailed",
  "sentences": [
    "RewindFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"RewindFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | Y | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시- noTargetSong : 플레이어에 재생가능한 곡이 없는 대기상태",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > ToggleSucceeded",
  "hash": "#togglesucceeded",
  "sentences": [
    "ToggleSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"ToggleSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"message\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "message | string | Y | 임의의 string으로 특정 정보를 전달하여 Play에서 활용하고자 하는 경우 사용 가능- shuffleOn : 셔플 on- shuffleOff : 셔플 off- repeatSongOn : 곡 반복 on- repeatAllOn : 전체 반복 on- repeatOff : 반복 해제- addLikeSong : 좋아요 추가 성공- removeLikeSong : 좋아요 제거 성공"
  ]
},
    {
  "title": "MediaPlayer > ToggleFailed",
  "hash": "#togglefailed",
  "sentences": [
    "ToggleFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"ToggleFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | N | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- addLikeAlreadySong : 이미 좋아요한 곡을 좋아요 추가- addLikeExceedSong : 좋아요 최대등록 수량 초과- removeLikeNoSong : 좋아요 상태가 아닌 곡 좋아요 해제 시도- noTargetSong : 플레이어에 재생가능한 곡이 없는 대기상태- requireLogin : 로그인 기능이 필수인 동작이나, 비로그인상태로 인한 실패- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > GetInfoSucceeded",
  "hash": "#getinfosucceeded",
  "sentences": [
    "GetInfoSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"GetInfoSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"info\": {\n      \"song\": \"{ #Song name }\",\n      \"issueDate\": \"{{STRING}}\",\n      \"playTime\": \"{{STRING}}\",\n      \"playlistName\": \"{{STRING}}\"\n    }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "info | object | Y | GetInfo directive에 전달된 “info”의 리스트에 포함된 필드 정보"
  ]
},
    {
  "title": "MediaPlayer > GetInfoFailed",
  "hash": "#getinfofailed",
  "sentences": [
    "GetInfoFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"ResponseInfo\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "token | string | Y | Directive에서 전달한 token",
    "errorCode | string | N | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > HandlePlaylistSucceeded",
  "hash": "#handleplaylistsucceeded",
  "sentences": [
    "HandlePlaylistSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"HandlePlaylistSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "MediaPlayer > HandlePlaylistFailed",
  "hash": "#handleplaylistfailed",
  "sentences": [
    "HandlePlaylistFailed",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"HandlePlaylistFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"data\": { # arbitrary object }\n  }\n}",
    "errorCode | string | N | (임의의 String으로 SDK에서 enum 처리하면 안됨)실패 원인을 의미하며, 여기에 전달하는 string 값을 기반으로 응답 TTS 생성- appInternalServerError : CP의 내부 서버 연동간의 이슈로 응답실패 발생 시",
    "data | object | N | -"
  ]
},
    {
  "title": "MediaPlayer > HandleLyricsSucceeded",
  "hash": "#handlelyricssucceeded",
  "sentences": [
    "HandleLyricsSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"MediaPlayer\",\n    \"name\": \"HandleLyricsSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/message",
  "order": 169,
  "indexes": [
    {
  "title": "Message",
  "hash": "",
  "sentences": [
    "Message",
    "문자 확인 및 전송 기능 제어를 위한 규격"
  ]
},
    {
  "title": "Message > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.5 입니다.",
    "1.0 | 2020.07.02 | 규격 추가",
    "1.1 | 2020.07.13 | Context 의 template 에 info 필드 추가",
    "1.2 | 2020.08.13 | contact type 에 EMERGENCY 추가",
    "1.3 | 2020.11.02 | SendCandidates directive 에 searchScene 필드 추가Context 에 searchScene 필드 추가",
    "1.4 | 2021.01.19 | Context 에 messageToSend 필드 추가SendCandidates directive 에 messageToSend 필드 추가",
    "1.5 | 2021.08.24 | Contact Object > message.type을 Mandatory N으로 변경"
  ]
},
    {
  "title": "Message > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Message > MessageAgent 사용",
  "hash": "#messageagent-사용",
  "sentences": [
    "MessageAgent 사용",
    "MessageCall interface 규격에 따른 디바이스의 동작 제어는 MessageAgent 가 처리합니다.",
    "Android",
    "Linux",
    "NuguAndroidClient instance 를 통해 MessageAgent instance 에 접근할 수 있습니다.",
    "val messageAgent = nuguAndroidClient.getAgent(MessageAgent.NAMESPACE)",
    "NuguAndroidClient 생성시 MessageClient 를 추가합니다.",
    "class MyMessageClient: MessageClient {\n    ...\n}\nNuguAndroidClient().Builder()\n    .enableMessage(MyMessageClient())",
    "CapabilityFactory::makeCapability 함수로 MessageAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto message_handler(std::shared_ptr<IMessageHandler>(\n        CapabilityFactory::makeCapability<MessageAgent, IMessageHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(message_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "Message > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "문자 기능과 관련된 상태 정보를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android",
    "MessageClient 를 구현합니다.",
    "class MyMessageClient: MessageClient {\n    override fun getContext(): Context {\n        ...\n    }\n\n    ...\n}"
  ]
},
    {
  "title": "Message > 문자 전송",
  "hash": "#문자-전송",
  "sentences": [
    "문자 전송",
    "문자 전송이",
    "SendCandidates",
    ",",
    "SendMessage",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "Linux",
    "MessageClient 를 구현합니다.",
    "class MyMessageClient: MessageClient {\n    override fun sendCandidates(payload: SendCandidatesPayload, callback: Callback) {\n        // 연락처 검색 기능을 구현\n        ...\n    }\n\n    override fun sendMessage(payload: SendMessagePayload, callback: EventCallback) {\n        // 문자 전송 기능을 구현\n        ...\n    }\n\n    ...\n}",
    "IMessageListener 를 추가합니다.",
    "class MyMessageListener : public IMessageListener {\npublic:\n    ...\n\n    void processSendCandidates(const std::string& payload) override\n    {\n        ...\n    }\n    \n    void processSendMessage(const std::string& payload) override\n    {\n        ...\n    }\n\n    ...\n};\nauto message_listener(std::make_shared<MyMessageListener>());\nCapabilityFactory::makeCapability<MessageAgent, IMessageHandler>(message_listener.get());"
  ]
},
    {
  "title": "Message > 문자 읽기",
  "hash": "#문자-읽기",
  "sentences": [
    "문자 읽기",
    "문자 읽기가",
    "GetMessage",
    ",",
    "ReadMessage",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "Linux",
    "MessageClient 를 구현합니다.",
    "class MyMessageClient: MessageClient {\n    override fun getMessageList(payload: GetMessagePayload, callback: Callback) {\n        ...\n    }\n\n    ...\n}",
    "문자 재생은 SDK 에서 실행됩니다.",
    "IMessageListener 를 추가합니다.",
    "class MyMessageListener : public IMessageListener {\npublic:\n    ...\n\n    void processGetMessage(const std::string& payload) override\n    {\n        ...\n    }\n\n    ...\n};\nauto message_listener(std::make_shared<MyMessageListener>());\nCapabilityFactory::makeCapability<MessageAgent, IMessageHandler>(message_listener.get());"
  ]
},
    {
  "title": "Message > 재생 상태 모니터링",
  "hash": "#재생-상태-모니터링",
  "sentences": [
    "재생 상태 모니터링",
    "ReadMessage",
    "directive 로 전달된 문자에 대한 재생 상태를 모니터링 할 수 있습니다.",
    "Android",
    "MessageAgentInterface.OnPlaybackListener 를 추가합니다.",
    "val listener = object: MessageAgentInterface.OnPlaybackListener {\n    ...\n}\nmessageAgent.addOnPlaybackListener(listener)"
  ]
},
    {
  "title": "Message > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Message\": {\n    \"version\": \"1.2\",\n    \"readActivity\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"template\": {\n      \"info\": \"{{STRING}}\",\n      \"recipientIntended\": {\n        \"name\": \"{{STRING}}\",\n        \"label\": \"{{STRING}}\"\n      },\n      \"searchScene\": \"{{STRING}}\",\n      \"candidates\": [array of Contact],\n      \"messageToSend\": {\n        \"text\": \"{{STRING}}\",\n        \"type\": \"{{STRING}}\"\n      }\n    }\n  }\n}",
    "readActivity | string | Y | 이전 발화가 재생 상태를 전달IDLEPLAYINGPAUSEDFINISHEDSTOPPED- IDLE인 경우는 최초 전원을 켰을 때만 가능하고 이후에는 나올 수 없음",
    "token | string | N | readActivity에서 재생 중인 prompt의 token",
    "template | object | N | context 유지 정책과 동일하게 관리되어야 함 → Play Stack에 현재 Play가 가장 위에 있는 동안은 보내주어야 함- 화면에 template이 디스플레이 되는 동안- 앱에서 화면을 그리는 경우 앱이 정확한 시점 파악 가능- 화면이 없는 경우는 DM 및 TTS 종료 후 7초- DM이 유지되는 동안은 SDK로부터 대화 세션 유지 상황을 피드백 받아 전달 대표적인 경우는 위의 두 경우와 같으며 자세한 구현은 context 관리 정책 참조",
    "template.info | string | N | 현재 template에 포함된 데이터가 어떤 정보를 담고 있는지 식별하기 위한 값- PHONE_BOOK : 주소록 조회 결과를 포함- MESSAGE : 수신된 Message 정보를 포함",
    "template.recipientIntended | object | N | 발화에서 분석된 recipient 정보",
    "template.recipientIntended.name | string | N | 검색에 요청할때 사용된 상대방 이름 (NLU 분석으로 나온 이름)",
    "template.recipientIntended.label | string | N | 집, 회사 등을 구분하기 위한 라벨",
    "template.searchScene | string | N | 검색 대상과 화면을 정의하기 위해 추가- DEFAULT : 기본 검색 로직- T114DIRECT : 긴급전화",
    "template.candidates | array of Contact | N | 화면에 검색 결과 리스트를 디스플레이하는 중에만 context에 추가",
    "template.messageToSend | object | N | 발신용으로 사용할 메세지 SendCandidates의 같은 파라미터를 통해 전달받은 MSG_BODY를 그대로 반환",
    "template.messageToSend.text | string | Y | 본문",
    "template.messageToSend.type | string | N | 메세지의 타입"
  ]
},
    {
  "title": "Message > Common Objects",
  "hash": "#common-objects",
  "sentences": [
    "Common Objects"
  ]
},
    {
  "title": "Message > Contact",
  "hash": "#contact",
  "sentences": [
    "Contact",
    "{\n  \"name\": \"{{STRING}}\",\n  \"type\": \"{{STRING}}\",\n  \"number\": \"{{STRING}}\",\n  \"label\": \"{{STRING}}\",\n  \"profileImgUrl\": \"{{STRING}}\",\n  \"message\": {\n    \"text\": \"{{STRING}}\",\n    \"type\": \"{{STRING}}\"\n  },\n  \"time\": \"{{STRING}}\",\n  \"numInMessageHistory\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"score\": \"{{STRING}}\"\n}",
    "name | string | N | candidates가 존재하면 각 candidate는 최소한 이름은 포함해야 함",
    "type | string | N | recipient candidates의 타입- CONTACT : 연락처 검색- EXCHANGE : exchange 검색- T114 : T114 검색- NONE : 특정 카테고리에 속하지 않음- EMERGENCY : 긴급 재난, 안전 안내 문자의 경우 “안전 안내 문자”로 TTS 나갈 예정",
    "number | string | N | -",
    "label | string | N | MOBILECOMPANYHOMEUSER_DEFINED",
    "profileImgUrl | string | N | -",
    "message | object | N | -",
    "message.text | string | Y | 보내는 or 받는 메세지 내용",
    "message.type | string | N | 메세지의 타입- SMS- MMS",
    "time | string | N | 날짜, 시간 정보로 ISO 8601 포맷 (2007-12-03T10:15:30)",
    "numInMessageHistory | string | N | 문자 수신 내역에 존재하는 건수0, 1, 2, … 값을 string 형태로 받음",
    "token | string | N | 사용자 추가 정보를 식별하기 위해 임의로 정의한 key값을 포함 unique 여부는 사용되는 용도에 의해 결정",
    "score | string | N | 검색 결과의 신뢰도"
  ]
},
    {
  "title": "Message > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
},
    {
  "title": "Message > SendCandidates",
  "hash": "#sendcandidates",
  "sentences": [
    "SendCandidates",
    "{\n  \"header\": {\n    \"namespace\": \"Message\",\n    \"name\": \"SendCandidates\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"recipientIntended\": {\n      \"name\": \"{{STRING}}\",\n      \"label\": \"{{STRING}}\"\n    },\n    \"searchScene\": \"{{STRING}}\",\n    \"candidates\": [array of Contact],\n    \"messageToSend\": {\n      \"text\": \"{{STRING}}\",\n      \"type\": \"{{STRING}}\"\n    }\n  }\n}",
    "intent | string | N | SEND : 문자보내줘READ : 문자읽어줘",
    "recipientIntended | object | N | 발화에서 분석된 recipient 정보",
    "recipientIntended.name | string | N | 검색에 요청할때 사용된 상대방 이름 (NLU 분석으로 나온 이름)",
    "recipientIntended.label | string | N | 집, 회사 등을 구분하기 위한 라벨",
    "searchScene | string | N | 검색 대상과 화면을 정의하기 위해 추가- DEFAULT : 기본 검색 로직- T114DIRECT : 긴급전화",
    "candidates | array of Contact | N | candidates가 없으면 이 항목이 없어야 함",
    "template.messageToSend | object | N | 발신용으로 사용할 메세지 SendCandidates의 같은 파라미터를 통해 전달받은 MSG_BODY를 그대로 반환",
    "template.messageToSend.text | string | Y | 본문",
    "template.messageToSend.type | string | N | 메세지의 타입"
  ]
},
    {
  "title": "Message > SendMessage",
  "hash": "#sendmessage",
  "sentences": [
    "SendMessage",
    "{\n  \"header\": {\n    \"namespace\": \"Message\",\n    \"name\": \"SendMessage\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"recipient\": Contact\n  }\n}",
    "recipient | Contact | Y |  "
  ]
},
    {
  "title": "Message > GetMessage",
  "hash": "#getmessage",
  "sentences": [
    "GetMessage",
    "{\n  \"header\": {\n    \"namespace\": \"Message\",\n    \"name\": \"GetMessage\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"recipientIntended\": {\n      \"name\": \"{{STRING}}\",\n      \"label\": \"{{STRING}}\"\n    },\n    \"candidates\": [array of Contact]\n  }\n}",
    "recipientIntended | object | N | 발화에서 분석된 recipient 정보optional 파라미터로 포함되지 않으면 전체 문자를 보내줘야 함항목이 존재할 경우 SendCandidates와 동일하게 조건에 맞는 대상자의 문자리스트만 GetMessageSucceeded로 전달하고 항목이 없을 경우 전체 문자리스트를 GetMessageSucceeded로 전달해야함.",
    "recipientIntended.name | string | N | 검색에 요청할때 사용된 상대방 이름 (NLU 분석으로 나온 이름)",
    "recipientIntended.label | string | N | 집, 회사 등을 구분하기 위한 라벨",
    "candidates | array of Contact | N | candidates가 없으면 이 항목이 없어야 함"
  ]
},
    {
  "title": "Message > ReadMessage",
  "hash": "#readmessage",
  "sentences": [
    "ReadMessage",
    "{\n  \"header\": {\n    \"namespace\": \"Message\",\n    \"name\": \"ReadMessage\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"receivedTime\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "receivedTime | string | N | Application에서 읽은 메시지를 처리하기 위한 timeStamptimeStamp 값은 디바이스에서 문자 메시지의 (수신한) 시간값(LONG)으로 GetMessageSucceeded 의 candidates (문자 메시지 리스트) 의 time 값Application은 해당 시간값 이후에 수신된 문자 메시지를 GetMessageSucceeded 응답데이터로 전달한다.",
    "token | string | Y | 현재 TTS를 식별하기 위한 unique string"
  ]
},
    {
  "title": "Message > Events",
  "hash": "#events",
  "sentences": [
    "Events"
  ]
},
    {
  "title": "Message > CandidatesListed",
  "hash": "#candidateslisted",
  "sentences": [
    "CandidatesListed",
    "검색 결과 리스트가 화면에 보여지는 경우 보내는 Event",
    "list는 context로 전송됨",
    "{\n  \"header\": {\n    \"namespace\": \"Message\",\n    \"name\": \"CandidatesListed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Message > SendMessageSucceeded",
  "hash": "#sendmessagesucceeded",
  "sentences": [
    "SendMessageSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Message\",\n    \"name\": \"SendMessageSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"recipient\": Contact\n  }\n}",
    "recipient | Contact | Y |  "
  ]
},
    {
  "title": "Message > SendMessageFailed",
  "hash": "#sendmessagefailed",
  "sentences": [
    "SendMessageFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Message\",\n    \"name\": \"SendMessageFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"recipient\": Contact,\n    \"errorCode\": \"{{STRING}}\"\n  }\n}",
    "recipient | Contact Object | Y |  ",
    "errorCode | string | Y |  "
  ]
},
    {
  "title": "Message > GetMessageSucceeded",
  "hash": "#getmessagesucceeded",
  "sentences": [
    "GetMessageSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Message\",\n    \"name\": \"GetMessageSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"candidates\": [array of Contact]\n  }\n}",
    "candidates | array of Contact Object | N |  "
  ]
},
    {
  "title": "Message > GetMessageFailed",
  "hash": "#getmessagefailed",
  "sentences": [
    "GetMessageFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Message\",\n    \"name\": \"GetMessageFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\"\n  }\n}",
    "errorCode | string | Y |  "
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/mic",
  "order": 162,
  "indexes": [
    {
  "title": "Mic",
  "hash": "",
  "sentences": [
    "Mic",
    "디바이스의 마이크를 제어하기 위한 규격"
  ]
},
    {
  "title": "Mic > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.0 입니다.",
    "1.0 | 2020.03.02 | 규격 추가"
  ]
},
    {
  "title": "Mic > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Mic > MicAgent 사용",
  "hash": "#micagent-사용",
  "sentences": [
    "MicAgent 사용",
    "Mic interface 규격에 따른 디바이스의 동작 제어는 MicAgent 가 처리합니다.",
    "iOS 는 MicAgent 를 지원하지 않습니다.",
    "Android",
    "Linux",
    "NuguAndroidClient instance 를 통해 MicrophoneAgent instance 에 접근할 수 있습니다.",
    "val microphoneAgent = nuguAndroidClient.getAgent(DefaultMicrophoneAgent.NAMESPACE)",
    "NuguAndroidClient 생성시 Microphone 을 추가합니다.",
    "class MyMicrophone: Microphone {\n    ...\n}\nNuguAndroidClient.Builder(...)\n    .enableMicrophone(MyMicrophone())",
    "CapabilityFactory::makeCapability 함수로 MicAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto mic_handler(std::shared_ptr<IMicHandler>(\n        CapabilityFactory::makeCapability<MicAgent, IMicHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(mic_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "Mic > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "디바이스의 microphone 상태를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android",
    "Microphone 을 구현합니다.",
    "class MyMicrophone: Microphone {\n    override fun getSettings(): Settings {\n        ...\n    }\n    ...\n}"
  ]
},
    {
  "title": "Mic > Microphone 제어",
  "hash": "#microphone-제어",
  "sentences": [
    "Microphone 제어",
    "디바이스의 microphone 제어가",
    "SetMic",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "Linux",
    "Microphone 을 구현합니다.",
    "class MyMicrophone: Microphone {\n    override fun on(): Boolean {\n        ...\n    }\n\n    override fun off(): Boolean {\n        ...\n    }\n\n    ...\n}",
    "IMicListener 를 추가합니다.",
    "class MyMicListener : public IMicListener {\npublic:\n    ...\n\n    void micStatusChanged(MicStatus &status) override\n    {\n        ...\n    }\n};\nauto mic_listener(std::make_shared<MyMicListener>());\nCapabilityFactory::makeCapability<MicAgent, IMicHandler>(mic_listener.get());"
  ]
},
    {
  "title": "Mic > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Mic\": {\n    \"version\": \"1.0\",\n    \"micStatus\": \"{{STRING}}\"\n  }\n}",
    "micStatus | string | Y | ON / OFF"
  ]
},
    {
  "title": "Mic > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/modecontrol-interface",
  "order": 88,
  "indexes": [
    {
  "title": "ModeControl Interface",
  "hash": "",
  "sentences": [
    "ModeControl Interface",
    "NUGU 스마트홈 ModeControl Capability Interface는 NUGU 스마트홈에 등록된 SmartHomeDevice의 모드설정방식에 대한 설명입니다. NUGU스마트홈에는 사전에 정의된 모드명들이 있으며 다양한 표현을 정규화하여 정의된 모드명으로 제어 요청을 보냅니다. IoT ServiceProvider는 제어 대상인 스마트홈 기기의 특성과 모드명으로 적합한 기능을 제어하게 됩니다."
  ]
},
    {
  "title": "ModeControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "ModeControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "ModeControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"AIR_CONDITIONER\",\n      \"deviceTypeName\": \"에어컨\",\n      \"deviceModelName\": \"example air_conditioner\",\n      \"friendlyNameSuggestion\": \"거실\",\n      \"manufacturer\": \"example manufacturer\",\n      \"supportedCapabilities\": {\n        \"modeControl\": {\n          \"supportedModes\": [\n            \"COLD\",\n            \"DEHUMIDITY\",\n            \"COMFORT\",\n            \"AIR_BLAST\",\n            \"ENERGY_SAVING\"\n          ]\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "SmartHomeDevice Attribute Parameters",
    "supportedModes | 해당 SmartHomeDevice가 지원하는 Mode의 명칭입니다.Mode는 NUGU스마트홈에서 지원하는 Mode 명칭 중 선택해서 응답할 수 있으며, 지원하는 Mode의 명칭은 Mode를 참조하시기 바랍니다.지원하는 Mode는 각 Device별로 Array 형태로 복수개 전달할 수 있습니다.",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "ModeControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU SmartHome ModeControl Capability는 Mode를 설정하는 SetMode와 설정된 Mode를 취소하는 CancelMode를 지원합니다."
  ]
},
    {
  "title": "ModeControl Interface > SetMode",
  "hash": "#setmode",
  "sentences": [
    "SetMode",
    "Directive 정보",
    "SmartHomeDevice를 사용자가 발화한 모드로 설정한다.",
    "Capability : ModeControl",
    "Directive : SetMode",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 냉방모드로 설정해줘.",
    "아리아, {FriendlyName} 제습모드 설정해줘.",
    "아리아, {DeviceType} 절전모드로 설정."
  ]
},
    {
  "title": "ModeControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/ModeControl/directives/SetMode)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"ModeControl\",\n      \"smartHomeDirective\": \"SetMode\",\n      \"parameters\": {\n        \"mode\": \"COLD\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"modeControl\": {\n            \"supportedModes\": [\n              \"COLD\",\n              \"DEHUMIDITY\",\n              \"COMFORT\",\n              \"AIR_BLAST\",\n              \"ENERGY_SAVING\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "SetMode Directive Request parameter details",
    "mode | 설정하고자 하는 mode의 사용자 발화 정보.해당 parameter의 value는 Device Discovery 당시 응답한 supportedModes 중 하나로 요청됩니다. | string"
  ]
},
    {
  "title": "ModeControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"mode\": \"COLD\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "SetMode Directive Response parameter details",
    "mode | 설정한 후에 SmartHomeDevice의 모드명.해당 parameter의 value로 사용자에게 안내됩니다. | string"
  ]
},
    {
  "title": "ModeControl Interface > CancelMode",
  "hash": "#cancelmode",
  "sentences": [
    "CancelMode",
    "CancelMode 는 모드를 취소하는 기능인데 만약 취소가 불가능한 모드일 경우 적절한 에러코드를 응답해야 합니다.",
    "Directive 정보",
    "SmartHomeDevice에 사용자가 발화한 모드를 설정 해제한다.",
    "Capability : ModeControl",
    "Directive : CancelMode",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 냉방모드 설정 해제해줘.",
    "아리아, {FriendlyName} 무풍모드 설정 취소해줘.",
    "아리아, {DeviceType} 제습모드 취소."
  ]
},
    {
  "title": "ModeControl Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/ModeControl/directives/CancelMode)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"ModeControl\",\n      \"smartHomeDirective\": \"CancelMode\",\n      \"parameters\": {\n        \"mode\": \"WINDLESS\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"modeControl\": {\n            \"supportedModes\": [\n              \"COLD\",\n              \"DEHUMIDITY\",\n              \"COMFORT\",\n              \"AIR_BLAST\",\n              \"ENERGY_SAVING\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "SetMode Directive Request parameter details",
    "mode | 설정해제하고자 하는 mode의 사용자 발화 정보입니다. | string"
  ]
},
    {
  "title": "ModeControl Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"mode\": \"WINDLESS\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "CancelMode Directive Response parameter details",
    "mode | 해제한 SmartHomeDevice의 모드명.해당 parameter의 value로 사용자에게 안내됩니다. | string"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/play-registration-and-review/modify-or-delete-play-information",
  "order": 99,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/distribute-and-manage-a-play/monitor-play-stats",
  "order": 105,
  "indexes": [
    {
  "title": "Play 이용 통계 확인",
  "hash": "",
  "sentences": [
    "Play 이용 통계 확인",
    "서비스 중인 Play의 이용 통계를 확인할 수 있습니다.",
    "Developers Console",
    ">",
    "Play kit",
    ">",
    "통계",
    "메뉴에서 확인할 수 있으며, 통계 항목은 다음과 같습니다.",
    "Play 사용자 수",
    "Play를 사용한 순 이용자 수(Unique User)",
    "총 요청 건 수",
    "해당 Play로 분석된 사용자의 발화 건 수",
    "주요 발화 Top 100",
    "Play 사용을 위해 사용자가 발화한 음성명령 Top 100",
    "실패 발화 Top 100",
    "Play 사용을 위해 사용자가 발화한 음성명령 중 실패한 발화 Top 100",
    "Intent Top 10",
    "Play 사용을 위해 사용자가 발화한 음성명령의 Intent Top 10"
  ]
},
    {
  "title": "Play 이용 통계 확인 > 주요 통계",
  "hash": "#주요-통계-",
  "sentences": [
    "주요 통계",
    "주요 통계 메뉴를 통해 Play 전체 또는 Play별 사용자 요청 건 수, 총 요청 건 수를 확인할 수 있으며, 조회 결과를 통계 데이터로 다운로드할 수도 있습니다.",
    "Developers Console > Play kit > 통계 메뉴에서 Play를 선택하고, 조회 기간을 설정한 후 확인 버튼을 클릭합니다.\n조회할 PoC를 전체로 선택하면 서비스 제공자가 상용 배포한 모든 Play가 서비스 중인 PoC의 전체 통계가 합산되어 제공됩니다.",
    "Play 통계 조회가 완료되면, 통계 내역에서 Play 이용자 수, 전체 요청 수의 확인이 가능하며, 통계다운로드 버튼을 클릭하여 조회 결과를 다운로드할 수 있습니. 데이터는 엑셀 파일로 저장됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-parameters/multi-entity-mapping",
  "order": 28,
  "indexes": [
    {
  "title": "하나의 Parameter에 여러 Entity mapping 하기",
  "hash": "",
  "sentences": [
    "하나의 Parameter에 여러 Entity mapping 하기",
    "Utterance Parameter는 사용자의 발화에서 정보를 담아 직접 처리하거나 Backend Proxy로 보내는 파라미터입니다. 이 때, 하나의 파라미터에 여러 개의 Entity를 담아 동일하게 처리하고 싶을 경우, 여러 Entity를 매핑할 수 있습니다.",
    "위와 같이 설정한 경우, CITY로 분석된 Entity와 COUNTY로 분석된 Entity는 모두",
    "target",
    "파라미터에 담을 수 있게 됩니다. 이 Entity들은 사용자의 실제 발화에서 분석이 되면, 특별한 조건 없이, 매핑된 파라미터에 담기게 됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/nugu-biz-concept",
  "order": 109,
  "indexes": [
    {
  "title": "주요 개념",
  "hash": "",
  "sentences": [
    "주요 개념",
    "NUGU biz kit에서 사용되는 개념은 다음과 같습니다."
  ]
},
    {
  "title": "주요 개념 > NUGU 디바이스(NUGU device)",
  "hash": "#nugu-디바이스nugu-device",
  "sentences": [
    "NUGU 디바이스(NUGU device)",
    "인공지능 서비스 NUGU를 이용할 수 있는 기기들입니다. 현재 Biz Kit에서 활용 가능한 NUGU 디바이스는 아래와 같으며, 추후 다른 기기들이 확대될 예정입니다.",
    "Biz 사용자 이용 가능 디바이스",
    "제한 없음",
    "Biz 전용 디바이스로 등록 가능한 디바이스 (디바이스 Setup Tool 등록 가능 디바이스)",
    "NUGU | NU100",
    "NUGU mini | NU200",
    "NUGU candle | NU110",
    "Biz API Announcement 수신 가능 디바이스",
    "NUGU | NU100",
    "NUGU mini | NU200",
    "NUGU candle | NU110",
    "NUGU nemo | NU300"
  ]
},
    {
  "title": "주요 개념 > Biz 전용 디바이스",
  "hash": "#biz-전용-디바이스",
  "sentences": [
    "Biz 전용 디바이스",
    "공용 공간에서 불특정 다수가 사용할 수 있도록 설치한 NUGU 디바이스입니다.",
    "NUGU 디바이스를 사업장/영업장 등과 같은 공용 공간에서 누구나 사용할 수 있도록 설정하는 기능입니다., 해당 공간의 사용 목적에 적합한 Private Play를 제공하고 , Announcement 메세지를 보낼 수 있습니다."
  ]
},
    {
  "title": "주요 개념 > 디바이스 그룹 (Biz 전용 디바이스)",
  "hash": "#디바이스-그룹-biz-전용-디바이스",
  "sentences": [
    "디바이스 그룹 (Biz 전용 디바이스)",
    "전용 디바이스가 설치될 물리적 위치와 사용 목적을 그룹으로 생성하여 등록합니다. 예를 들어 건물의 회의실, 로비, 호텔 객실 등에 전용 디바이스를 설치해야 할 때 회의실, 로비, 객실의 디바이스 그룹을 생성하고, 생성된 그룹에 디바이스를 할당하여 매핑할 수 있습니다."
  ]
},
    {
  "title": "주요 개념 > 디바이스 Setup Tool (Biz 전용 디바이스)",
  "hash": "#디바이스-setup-tool-biz-전용-디바이스",
  "sentences": [
    "디바이스 Setup Tool (Biz 전용 디바이스)",
    "NUGU 디바이스를 전용 디바이스로 등록하고, Wi-Fi 네트워크를 설정할 수 있도록 지원하는 윈도우 기반 응용 프로그램입니다. Windows 7 이상에서 사용하실 수 있습니다."
  ]
},
    {
  "title": "주요 개념 > 사용 제외 Play (Biz 전용 디바이스)",
  "hash": "#사용-제외-play-biz-전용-디바이스",
  "sentences": [
    "사용 제외 Play (Biz 전용 디바이스)",
    "전용 디바이스에서 NUGU 디바이스에서 제공하는 특정 기본 서비스를 제외 할 수 있는 설정입니다. 공공장소나 Biz 사용 목적에 적합하지 않은 기본 서비스들을 사용 불가하도록 제외 처리 할 수 있습니다."
  ]
},
    {
  "title": "주요 개념 > Biz 사용자 관리",
  "hash": "#biz-사용자-관리",
  "sentences": [
    "Biz 사용자 관리",
    "NUGU play kit에서 개발한 Private Play를 특정 개인 또는 기업(단체) 구성원만 사용할 수 있도록 하고,  사용자의 디바이스로 Announcement를 보낼 수 있도록, 사용자를 초대하고 등록하여 권한을 부여하는 기능입니다."
  ]
},
    {
  "title": "주요 개념 > Biz 사용자 초대 유형 (Biz Service, Private Play)",
  "hash": "#biz-사용자-초대-유형-biz-service-private-play",
  "sentences": [
    "Biz 사용자 초대 유형 (Biz Service, Private Play)",
    "Biz 사용자를 초대 할때, 초대를 수락한 유저의 유형입니다.",
    "Private Play :   Play 단위로만 초대한 케이스입니다. 다른 Play를 새로 부여할 경우, 재초대를 하여 승인받아야합니다.",
    "Biz Service :    퍼블리셔가 제공하는 서비스 단위로 초대한 케이스입니다. 해당 유형으로 수락한 경우, 퍼블리셔가 새로운 그룹이나 Play를 할당하는 경우, 별도의 재초대 없이 사용자를 등 관리 할 수 있습니다.",
    "체험판에서는 Private Play 단위 초대만 지원합니다."
  ]
},
    {
  "title": "주요 개념 > Private Play",
  "hash": "#private-play",
  "sentences": [
    "Private Play",
    "NUGU biz의 전용 디바이스와 등록된 사용자(이용 권한을 획득한 사용자)만 이용할 수 있는 Play입니다. Private Play는 NUGU App에서 확인할 수 있으며, 일반 사용자에게는 노출되지 않습니다."
  ]
},
    {
  "title": "주요 개념 > Biz API",
  "hash": "#biz-api",
  "sentences": [
    "Biz API",
    "NUGU biz kit의 정식판에서는 퍼블리셔에서 Biz 전용 디바이스와 Biz 사용자 관리에 유용한 API를 추가적으로 제공합니다. 자세한 내용은",
    "Biz API",
    "의 설명을 참고하세요."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/sdk-design-guide/nugu-device",
  "order": 202,
  "indexes": [
    {
  "title": "NUGU 기기",
  "hash": "",
  "sentences": [
    "NUGU 기기",
    "NUGU를 탑재한 기기의 상태에 따른 동작, 제공하는 물리적 버튼, 조명, 소리에 대한 가이드는 다음과 같습니다."
  ]
},
    {
  "title": "NUGU 기기 > 기기 상태",
  "hash": "#기기-상태",
  "sentences": [
    "기기 상태",
    "NUGU를 탑재한 기기의 상태는 다음과 같습니다.",
    "음소거 | 기기의 소리가 출력되지 않는 상태입니다.음소거 상태일 때는 Prompt나 사운드, 비프음을 볼륨 레벨 0으로 출력합니다.단, alert형 안내(알람 울림, 타이머 울림, Notification 울림, 전화벨 울림)가 실행될 때는 음소거 상태일지라로 원래 음량으로 실행됩니다.",
    "마이크 켜짐/꺼짐 | NUGU 기의 음성인식 마이크가 꺼져 있는 상태로, 이 상태에서는 음성으로 에이전트를 wake up할 수 없습니다.",
    "야간 모드 | 디스플레이가 있는 기에서 전원 절약을 위하 화면 표시가 최소화된 상태입니다.",
    "화면 켜짐/꺼짐 | 디스플레이가 있는 기에서 화면이 켜져있거나 꺼져있는 상태입니다.",
    "무드등 켜짐/꺼짐 | 조명 기능이 있는 기에서 조명이 켜져있거나 꺼져있는 상태입니다.",
    "네트워크 미연결 | 기기가 네트워크에 연결되지 않은 상태를 말합니다.이 상태에서는 wake up시 곧바로 네트워크가 연결되어 있지 않음을 알려주는 Prompt를 제공합니다."
  ]
},
    {
  "title": "NUGU 기기 > 초기 기기 상태",
  "hash": "#초기-기기-상태",
  "sentences": [
    "초기 기기 상태",
    "NUGU 기기의 초기 상태는 다음과 같습니다. 마이크(Microphone) on / 와이파이 on / 블루투스 off / 볼륨 unmute / 무드등 off"
  ]
},
    {
  "title": "NUGU 기기 > 버튼",
  "hash": "#버튼",
  "sentences": [
    "버튼",
    "NUGU 기기에서 제공하는 물리적 버튼들은 다음과 같습니다. 기기에 따라 제공되지 않거나 추가적인 버튼이 제공될 수 있습니다.",
    "호출 버튼 | • 호출어를 말하는 것과 동일하게, listening-passive 상태가 되도록 합니다.• 마이크가 꺼져 있는 상태에서 wake-up 버튼을 누를 경우, 마이크가 켜지고 listening - passive 상태로 변경됩니다. 한번 마이크가 켜지면 해당 상태는 유지됩니다.",
    "마이크 버튼 | • 기기의 마이크를 끄거나 켭니다.• 마이크가 꺼진 상태 (microphone off) 상태에서 호출어를 발화하여도 기기가 wake up되지 않습니다.",
    "볼륨 조절 버튼 | • 볼륨 조절 버튼은 증가 버튼과 감소 버튼이 각각 제공되며, 한 번 누를 때마다 음량을 증감합니다.• 길게 누르면 연속적으로 음량을 증가 또는 감소시킵니다.• 이 버튼이 동작될 때는 증감된 음량이 어느 정도인지를 사용자가 알 수 있도록 소리 피드백이 제공됩니다.",
    "음소거 버튼 | • 기기를 음소거 상태로 설정하거나 해제합니다.",
    "블루투스 버튼 | • 블루투스로 다른 기기와 페어링을 하거나 해제합니다.",
    "자주 사용하는 버튼은 기기의 상단 부에 배치하여 누르기 용이하도록 합니다.",
    "서로 대응되는 버튼(예: 볼륨 증가, 볼륨 감소 버튼)은 가까운 곳에 배치하여 사용자가 위치를 쉽게 인지할 수 있도록 합니다.",
    "버튼을 눌렀을 때 버튼이 눌렸다는 것을 사용자가 소리 또는 LED를 통해 알 수 있도록 합니다.",
    "버튼을 길게 누르거나, 2개 이상의 버튼 조합으로 기능이 실행되도록 할 수 있습니다. 이렇게 동작하는 방식은 사용자가 인지하고 사용하기 어려우므로 자주 사용하지 않는 기능이나, 쉽게 실행되어서는 안 되는 기능을 제공할 때 사용하도록 합니다."
  ]
},
    {
  "title": "NUGU 기기 > 조명",
  "hash": "#조명",
  "sentences": [
    "조명",
    "조명을 이용하여 현재의 상태 및 사용자 요청에 대한 결과를 피드백할 수 있습니다.",
    "다음은 NUGU 기기 모델 별로 사용되고 있는 조명 색상 및 그 의미입니다.",
    "전원 켜짐/꺼짐 | Emerald Green | Default White | White | 기기의 전원이 켜질 때, 혹은 꺼질 때 조명",
    "Listening 상태 | Emerald Green | Sky blue | Sky Blue | 사용자가 말하는 것을 듣고 있음",
    "Speaking 상태 | Blue | Ocean blue와 Sky blue 교차 | Blue | NUGU가 말하고 있음",
    "Wi-Fi 연결 중 | Yellow Green | Lime과 Green교차 | Yellow Green | 무선 네트워크에 연결 중",
    "Wi-Fi 연결 성공 | Blue | Lime | Yellow Green | Wi-Fi 연결에 성공",
    "Wi-Fi 연결 실패 | Pink | Red와 Orange 교차 | Pink | Wi-Fi 연결에 실패함",
    "주의 / 실패 | Pink | Red와 Orange 교차 | Pink | 사용자 요청을 수행하는 데에 실패하였거나, 재시도가 필요함",
    "시스템 에러 | Red | Red와 Orange 교차 | Red | 에러가 있거나, 사용 불가함",
    "펌웨어 업데이트 | Purple | Purple | Purple | NUGU가 업데이트 중임"
  ]
},
    {
  "title": "NUGU 기기 > 소리",
  "hash": "#소리",
  "sentences": [
    "소리",
    "효과음은 음성이 아닌 비프음이나 사운드 등을 의미합니다. 상황 별 정해진 특징적인 효과음을를 제공함으로써 음성으로 설명하지 않고도 상태 및 동작에 대하여 사용자가 인식할 수 있도록 합니다. 효과음은 대 상태를 알리는 데에 사용되는 1) 기본 효과음과 특정 서비스 동작과 관련된 2)서비스 효과음로 나뉩니다."
  ]
},
    {
  "title": "NUGU 기기 > 1) 기본 효과음(Basic Feedback Sound)",
  "hash": "#1-기본-효과음basic-feedback-sound",
  "sentences": [
    "1) 기본 효과음(Basic Feedback Sound)",
    "전원 켜짐 완료 (Boot complete)",
    "전원이 켜져 사용 가능 상태가 되었을 때 사운드를 제공합니다.",
    "부팅 완료 후 Welcome Prompt 직전 | • On/Off 설정 없으며 항상 소리를 제공• 기기별로 설정 가능",
    "호출 효과 (Wake up success)",
    "호출어를 발화하여 대화 상가 listening 상태가 되는 순간에 비프음을 제공합니다. 사용자의 발화를 인식할 준비가 되었다는 의미로써, 호출어를 발화하지 않고 호출 버튼을 누른 경우나 필수 entity를 입력받기 위해 speaking 상태 이후 바로 listening 상태가 될 때(Slot-filling)에도 해당 비프음이 발생됩니다.",
    "Wake up 성공 시 | • 애플리케이션에서 On/Off 설정을 제공• 기본 값은 ON• 기기별로 설정 가능",
    "호출어 발화 시",
    "Slot-filling 시",
    "인식 완료음 (End listen)",
    "Listening 상태에서 사용자의 발화가 완료되어 Listening 상태가 종료 되었을때 비프음을 제공합니다. NUGU App에서 텍스트 명령 전송 시에는 제공하지 않습니다.",
    "Wake up 후 발화 인식 성공 시 | • 애플리케이션에서 On/Off 설정을 제공• 기기별로 설정 가능"
  ]
},
    {
  "title": "NUGU 기기 > 응답 실패 (Response fail)",
  "hash": "#응답-실패-response-fail",
  "sentences": [
    "응답 실패 (Response fail)",
    "사용자의 발화가 제대로 인식되지 않아 정상 동작을 할 수 없는 경우, 응답 실패 비프음을 재생합니다.",
    "• 잡음 인식 시• 1음절 발화 인식 시 (일부 1음절 발화는 화이트 리스트로 관리, 인식 가능)• 블랙 리스트로 관리되는 발화를 실행하여 OOD 처리되는 경우• 호출 버튼을 눌러 진입된 listening 상태에서 사용자 발화가 없어 타임아웃 된 경우• Slot-filling을 위한 listening 상태에서 사용자 발화가 없어 타임아웃 된 경우• 호출 버튼을 눌러 listening 상태가 해제된 경우 | • App에서 On/Off 설정을 제공• 기본 값은 ON• 기기별로 설정 가능",
    "잡음 / 1음절 발화 / 블랙 리스트 발화 시",
    "Slot-filling을 위한 listening 상태에서 타임아웃 시",
    "전원 꺼짐 (Power off)",
    "전원 버튼을 눌러 전원을 끌 경우, 사운드를 제공하여 전원이 꺼질 것임을 알립니다.",
    "전원을 끌 경우 | • On/Off 설정 없으며 항상 소리를 제공• 기기별로 설정 가능"
  ]
},
    {
  "title": "NUGU 기기 > 2) 서비스 효과음(Service Feedback Sound)",
  "hash": "#2-서비스-효과음service-feedback-sound",
  "sentences": [
    "2) 서비스 효과음(Service Feedback Sound)",
    "서비스 효과음는 특정 서비스 내에서 동작을 사용자가 인지하기 쉽도록 하거나, 감성을 전달하고자 할 때 사용합니다. 서비스 소리가 재생될 때는 응답 효과(End listen)은 재생하지 않습니다. 다음은 NUGU 기기에 적용된 서비스 효과의 예시입니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/ios/nugu-display-template-server",
  "order": 179,
  "indexes": [
    {
  "title": "NUGU Display의 노출과 제어",
  "hash": "",
  "sentences": [
    "NUGU Display의 노출과 제어",
    "NUGU 서비스에서 UI Display 를 담당하는",
    "DisplayAgent",
    "는 Display 의 동작, life cycle 을",
    "DisplayAgentDelegate",
    "를 통해 전달하고 있습니다. 사용자는",
    "DisplayAgentDelegate",
    "를 받아, 직접 DisplayView 를 그려줄 수도 있으나,",
    "NuguUIKit",
    "은 사용자의 편의성을 위해 간단히 생성, 설정, 노출 가능한",
    "NuguDisplayWebView",
    "를 제공하고 있습니다. Template server 에 접속하여 Display 웹뷰를 내려받아 노출하는",
    "NuguDisplayWebView",
    "를 사용하는 방법은 크게 두가지가 있습니다."
  ]
},
    {
  "title": "NUGU Display의 노출과 제어 > DisplayWebViewPresenter 를 사용하기",
  "hash": "#displaywebviewpresenter-를-사용하기",
  "sentences": [
    "DisplayWebViewPresenter 를 사용하기",
    "NuguClientKit",
    "은 사용자가 더 쉽게, 편리하게 Display 를 노출하기 위해",
    "DisplayWebViewPresenter",
    "를 제공하고 있습니다.",
    "DisplayWebViewPresenter",
    "는 사용자가",
    "DisplayAgentDelegate",
    "를 구현할 필요없이 내부적으로",
    "DisplayAgent",
    "동작 핸들링을 하고 있으며, 간단한 delegate 메소드만 사용자에게 제공합니다.",
    "DisplayWebViewPresenter",
    "를 사용하기 위해선 제일 먼저",
    "NuguClientKit",
    "을 import 하도록 합니다.",
    "import NuguClientKit",
    "그리고",
    "DisplayWebView",
    "를 노출할 owner 의 코드에 다음과 같이",
    "DisplayWebViewPresenter",
    "variable 을 initialize 해줍니다.",
    "private lazy var displayWebViewPresenter: DisplayWebViewPresenter = {\n        DisplayWebViewPresenter(\n            viewController: self,\n            nuguClient: NuguCentralManager.shared.client,\n            clientInfo: [\"buttonColor\": \"white\"]\n        )\n    }()",
    "viewController : DisplayWebView 를 add / insert 할 parentView 를 소유하고 있는 viewController 입니다. ViewController 대신에 view 를 인자로 직접 설정할 수도 있습니다.",
    "nuguClient : DisplayAgentDelegate 를 대신 핸들링하기 위해 전달해야하는 NuguClient 객체입니다. SampleApp 코드에서는 NuguCentralManager 가 가지고 있습니다.",
    "clientInfo : clientInfo 인자에는 template server 와의 협의하에 custom dictionary injection 이 가능하며, 현재는 [\"buttonColor\": \"white/blue\"]을 지원하고 있습니다.",
    "그 다음으로",
    "DisplayWebViewPresenterDelegate",
    "를 구현해주면 간단하게 끝납니다.",
    "onDisplayWebViewBuguButtonClick() : DisplayWebView 의 NUGU 버튼이 선택되었을때 호출됨.",
    "extension MainViewController: DisplayWebViewPresenterDelegate {    \n    func onDisplayWebViewNuguButtonClick() {\n        presentVoiceChrome(initiator: .user)\n    }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/nugu-display",
  "order": 189,
  "indexes": [
    {
  "title": "NUGU Display의 노출과 제어",
  "hash": "",
  "sentences": [
    "NUGU Display의 노출과 제어",
    "TemplateRenderer 적용 방법",
    "Display 가이드",
    "에 소개된 DisplayAggregatorInterface.Renderer, DisplayAggregatorInterface.Controller 를 구현하고 DisplayAgent를 이용하여 Template 화면을 노출하고 이를 제어할 수 있습니다.",
    "개발 편의를 위해 NUGU SDK는 이 과정을 구현한",
    "TemplateRenderer",
    "를 제공합니다.",
    "TemplateRenderer의 적용 방법을 설명합니다.",
    "TemplateRenderer는 NuguUXKit에 포함되어 있습니다."
  ]
},
    {
  "title": "NUGU Display의 노출과 제어 > TemplateRenderer 생성",
  "hash": "#templaterenderer-생성",
  "sentences": [
    "TemplateRenderer 생성",
    "// MainActivity.kt in SampleApp\n private val templateRenderer = TemplateRenderer(\n        nuguClientProvider = object : TemplateRenderer.NuguClientProvider {\n            override fun getNuguClient(): NuguAndroidClient {\n                return ClientManager.getClient()\n            }\n        },\n        deviceTypeCode = \"your_device_type_code\",\n        fragmentManager = supportFragmentManager,\n        containerId = R.id.template_container)",
    "nuguClientProvider : Template 관련요청 처리를 위한 NuguAndroidClient 프로바이더",
    "deviceTypeCode : poc의 device type code",
    "fragmentManager : Fragment Transaction을 위한 fragmentManager",
    "containerId : Fragment가 추가될 container view id",
    "TemplateRenderer는 Fragment 형태로 Template 화면을 제공합니다."
  ]
},
    {
  "title": "NUGU Display의 노출과 제어 > TemplateRenderer 등록",
  "hash": "#templaterenderer-등록-",
  "sentences": [
    "TemplateRenderer 등록",
    "nuguAndroidClient에 templateRenderer를 displayRenderer로 설정합니다.",
    "// MainActivity.kt in SampleApp\nClientManager.getClient().setDisplayRenderer(templateRenderer)",
    "이제 Template 화면이 알아서 노출되고 클릭, 스크롤, 포커스 등 사용자 인터렉션이 자동으로 처리됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/sdk-design-guide/nugu-inside",
  "order": 206,
  "indexes": [
    {
  "title": "NUGU Inside",
  "hash": "",
  "sentences": [
    "NUGU Inside"
  ]
},
    {
  "title": "NUGU Inside > NUGU inside 마크",
  "hash": "#nugu-inside-마크",
  "sentences": [
    "NUGU inside 마크",
    "NUGU inside 마크는 NUGU의 기술이 탑재되었음을 직접적으로 알려주는 중요한 브랜드 요소입니다.",
    "적용 매체와 환경의 특성을 파악하여 인쇄 매체와 같은 표현물에 NUGU inside 마크가 제대로 표시되도록 해야 합니다.",
    "최소 공간 규정은 마크의 NUGU 심볼의 너비만큼의 여백을 두고 적용합니다.",
    "마크 최소 크기는 인쇄물일 때 1.2 밀리미터, 화면에 표시할 경우 30 픽셀의 높이를 준수합니다."
  ]
},
    {
  "title": "NUGU Inside > NUGU inside 색상",
  "hash": "#nugu-inside-색상",
  "sentences": [
    "NUGU inside 색상",
    "NUGU Blue | 0,158, 255 (#009DFF) | 85, 21, 0, 0 | 2925C",
    "Black | 34, 34, 34 (#222222) | 75, 68, 67, 90 |  ",
    "White | 255, 255, 255 (#FFFFFF) | 0, 0, 0, 0 |  "
  ]
},
    {
  "title": "NUGU Inside > NUGU inside 배경색상",
  "hash": "#nugu-inside-배경색상",
  "sentences": [
    "NUGU inside 배경색상",
    "NUGU inside 마크 배경 색상의 명암에 따라 positive와 negative로 사용할 수 있습니다. 어두운 배경과 NUGU blue 색상이 배경으로 사용되는 경우는 negative로만 사용합니다.",
    "NUGU inside 배경은 기기나 제품, 재질 등에 따라 맞게 적용해야 하며 아래 조합 중 하나를 사용해야 합니다."
  ]
},
    {
  "title": "NUGU Inside > NUGU inside 적용규칙",
  "hash": "#nugu-inside-적용규칙",
  "sentences": [
    "NUGU inside 적용규칙"
  ]
},
    {
  "title": "NUGU Inside > 브랜드 로고 조합형",
  "hash": "#브랜드-로고-조합형",
  "sentences": [
    "브랜드 로고 조합형",
    "서비스 브랜드 로고와 NUGU inside 마크가 조합된 형태는 브랜드 로고 우측이나 하단에 마크가 위치하며, 예시와 같은 간격을 두고 사용합니다."
  ]
},
    {
  "title": "NUGU Inside > 기기 적용",
  "hash": "#기기-적용",
  "sentences": [
    "기기 적용",
    "기기에 적용 시 마크의 최소 크기와 정해진 색상과 배경을 준수해야 합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play",
  "order": 1,
  "indexes": [
    {
  "title": "NUGU play",
  "hash": "",
  "sentences": [
    "NUGU play",
    "NUGU play는 NUGU 플랫폼을 통하여 사용자의 요청에 응답하여 서비스의 단위이며, Play Builder에 Play를 만들 수 있습니다. 좋은 콘텐츠를 보유하고 있는 업체 또는 개인이  Play를 통하여, NUGU 사용자에게 자신의 서비스를 제공할 수 있도록 도와줍니다.",
    "사용자의 발화를 이해하는 User Utterance Model, 그리고 이를 기반으로 기능을 수행하는 Action들을 조합하여 하나의 완결된 Play를 만듭니다. 하나의 Play를 완성하기 위해서는 크게",
    "사용자의 발화를 정확하게 분석하도록 Intent/Entity를 정의하여 NLU 엔진을 학습시키고,",
    "Intent별로 Action을 정의하여 사용자의 요청에 대해 적절한 응답과 동작을 처리할 수 있어야 하며,",
    "실질적으로 사용자 발화에 대해 응답하거나 동작할 수 있는 Backend proxy API를 연동하는 것이 필요합니다.",
    "Play Builder는 이 모든 기능들을 하나의 통합된 환경에서 GUI 기반으로 제공하고 있습니다. 따라서 개발자가 아니어도 Play Builder를 활용하여 자신만의 Play를 개발할 수 있습니다. Play Builder에서 Play를 만든 후, NUGU play kit에서 다음의 과정을 통해 Play를 이용할 수 있습니다.",
    "Play 타입과 호출이름(Invocation name)을 정합니다.",
    "기본 정보/연동 정보 등을 입력하는 심사요청서를 작성합니다.",
    "심사가 완료되면, Play 타입에 맞는 환경에서 Play를 이용할 수 있게 됩니다."
  ]
},
    {
  "title": "NUGU play > Play",
  "hash": "#play",
  "sentences": [
    "Play",
    "Play는 NUGU 플랫폼의 엔진들과 통신해 서비스를 제공하는 단위로서, 사용자와 상호 작용하여 의도를 이해하고 그에 맞는 적절한 답변을 주거나 명령을 수행합니다.",
    "Play로 서비스를 제공하기 위해서는 사용자의 발화를 이해하여 의도를 파악하고 그에 맞는 답변을 제공해야 합니다. 즉, 서비스 제공자는 사용자의 발화를 예상하고 이 발화들의 의도에 맞는 기능들을 정의해야 합니다."
  ]
},
    {
  "title": "NUGU play > Play 타입",
  "hash": "#play-타입",
  "sentences": [
    "Play 타입",
    "NUGU play kit에서 만들 수 있는 Play는 사용 대상에 따라 다음 두 가지로 구분됩니다."
  ]
},
    {
  "title": "NUGU play > Public Play",
  "hash": "#public-play",
  "sentences": [
    "Public Play",
    "NUGU 사용자 모두가 사용할 수 있는 Play입니다.",
    "추후 공개 예정인 스토어에 Play가 등록되면 NUGU 사용자가 선택할 수 있습니다.",
    "스토어가 공개되기 전까지는 선택 과정 없이 바로 사용할 수 있습니다."
  ]
},
    {
  "title": "NUGU play > Private Play",
  "hash": "#private-play",
  "sentences": [
    "Private Play",
    "등록된 디바이스 혹은 초대된 사용자만 사용할 수 있는 Play입니다.",
    "예를 들어, 회사 내에서만 혹은 가족/친구끼리만 사용하는 Play로도 활용할 수 있습니다.",
    "특정 디바이스를 등록하거나 제한된 사용자만 초대하는 것은 NUGU biz kit에서 설정할 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk",
  "order": 142,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/nugu-user-interface",
  "order": 193,
  "indexes": [
    {
  "title": "NUGU 사용자 인터페이스",
  "hash": "",
  "sentences": [
    "NUGU 사용자 인터페이스",
    "User Interface",
    "SDK UX Guide",
    "을 준수하여 어플리케이션을 개발하는데 사용할 수 있는 레이아웃 객체와 UI 컨트롤 같은 UI 구성요소를 미리 빌드된 형태로 제공합니다."
  ]
},
    {
  "title": "NUGU 사용자 인터페이스 > ChromeWindow",
  "hash": "#chromewindow",
  "sentences": [
    "ChromeWindow",
    "ChromeWindow은 사용자의 음성 입력 수신, NUGU 음성 출력 등 NUGU 음성 동작과 관련된 상태를 그래픽, 색상, 모션으로 표현하는 UI 모듈 입니다.",
    "구성요소로 NuguVoiceChromeView, NuguChipsView, Stt(TextView)가 포함되어있습니다.",
    "CoordinatorLayout에 android:id 태그를 설정합니다.",
    "<androidx.coordinatorlayout.widget.CoordinatorLayout\n       android:id=\"@+id/coordinator\"\n       android:layout_width=\"match_parent\"\n       android:layout_height=\"match_parent\">",
    "ChromeWindow 객체 생성시 CoordinatorLayout을 연결합니다.",
    "val chromeWindow = ChromeWindow(this, findViewById<CoordinatorLayout>(R.id.coordinator))",
    "ChromeWindow 작업을 추가하려면 ChromeWindow.OnChromeWindowCallback 인터페이스를 구현하는 Callback 객체를 정의해야 합니다.",
    "chromeWindow.setOnChromeWindowCallback(object : ChromeWindow.OnChromeWindowCallback {\n   override fun onExpandStarted() {\n     // ChromeWindow 시작 \n   }\n\n   override fun onHiddenFinished() {\n     // ChromeWindow 종료\n   }\n\n   override fun onChipsClicked(item: NuguChipsView.Item) {\n     // Chips 아이템이 클릭\n   }\n})",
    "추가적으로 DialogUXStateAggregatorInterface.Listener, ASRAgentInterface.OnResultListener 리스너를 연결해야 합니다.",
    "chromeWindow.apply {\n   ClientManager.getClient().addDialogUXStateListener(this)\n   ClientManager.getClient().addASRResultListener(this)\n}",
    "fun isShown() : BooleanchromeWindow의 visible 확인",
    "fun dismiss()chromeWindow를 종료",
    "fun setScreenOnWhileASR(screenOn: Boolean)ASR 중에 화면을 켜진 상태로 유지",
    "fun setOnCustomChipsProvider(provider: CustomChipsProvider)chromeWindow에 표시될 custom chips (발화 가이드) 프로바이더 설정"
  ]
},
    {
  "title": "NUGU 사용자 인터페이스 > NuguButton",
  "hash": "#nugubutton",
  "sentences": [
    "NuguButton",
    "NUGU Voice Button은 음성 입력이 가능한 대기 상태를 나타내는 버튼입니다. BLUE / WHITE 컬러타입 중 한 가지를 선택 적용할 수 있습니다.",
    "layout file에 NuguButton을 정의 합니다.",
    "<com.skt.nugu.sdk.platform.android.ux.widget.NuguButton\n   android:id=\"@+id/fab\"\n   android:layout_width=\"wrap_content\"\n   android:layout_height=\"wrap_content\"\n   android:layout_gravity=\"bottom|end\"\n   android:layout_marginEnd=\"14dp\"\n   android:layout_marginBottom=\"10dp\"\n   android:contentDescription=\"@string/button_fab_description\"\n   app:colors=\"blue\"\n   app:types=\"fab\" />",
    "attributes 수정하여 버튼 타입 및 색생등 설정할수 있습니다.",
    "types | fab, button 제공",
    "colors | blue, white 제공",
    "autoPlay | 뷰생성시 Animation을 자동으로 재생 (default:false)",
    "loopPlay | Animation을 재생을 반복 (default:true)",
    "Template 내의 NuguButton 색상은 TemplateView.nuguButtonColor 정적변수를 설정하여 변경 가능합니다.\nex) TemplateView.nuguButtonColor = NuguButtonColor.WHITE"
  ]
},
    {
  "title": "NUGU 사용자 인터페이스 > NuguToast",
  "hash": "#nugutoast",
  "sentences": [
    "NuguToast",
    "NUGU 토스트 메시지는 작은 팝업으로 작업에 관한 간단한 피드백을 제공합니다. 메시지에 필요한 공간만 차지하며 진행 중인 활동은 그대로 표시되고 상호작용도 유지됩니다. 토스트 메시지는 시간이 초과하면 자동으로 사라집니다. (android.widget.Toast 기반으로 커스터마이징)",
    "Toast 메시지 빌드 및 표시",
    "NuguToast.with(this)\n       .message(R.string.volume_mute)\n       .duration(NuguToast.LENGTH_SHORT)\n       .yOffset(height)\n       .show()",
    "message : 알림메시지를 설정",
    "duration : LENGTH_SHORT, LENGTH_LONG 선택가능하며, 각각 4초, 7초동안 노출됩니다.",
    "yOffset : 토스트 메시지 위치 지정 (y-좌표 오프셋)",
    "show : 설정된 메시지 알림을 표시"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/nugu-ux",
  "order": 2,
  "indexes": [
    {
  "title": "Voice UX Design Guide",
  "hash": "",
  "sentences": [
    "Voice UX Design Guide",
    "NUGU 플랫폼에서 제공될 서비스는 사용자와 음성 대화로 상호작용을 한다는 점이 다른 일반적 서비스와 가장 큰 차이점입니다. 대화를 디자인하기 위해서는 다음과와 같은 음성 인터페이스에 대한 특성을 고려할 필요가 있습니다."
  ]
},
    {
  "title": "Voice UX Design Guide > Voice UI의 장점",
  "hash": "#voice-ui의-장점",
  "sentences": [
    "Voice UI의 장점"
  ]
},
    {
  "title": "Voice UX Design Guide > 구어기반의(Spoken Language) UI",
  "hash": "#구어기반의spoken-language-ui",
  "sentences": [
    "구어기반의(Spoken Language) UI",
    "말은 인간이 의사 소통을 위해 처음 배우는 도구이므로 디지털 디바이스 사용에 익숙하지 않은 사용자도 쉽게 사용할 수 있습니다."
  ]
},
    {
  "title": "Voice UX Design Guide > Short-cut Access",
  "hash": "#short-cut-access",
  "sentences": [
    "Short-cut Access",
    "계층 구조로 이루어진 메뉴를 가진 그래픽 인터페이스에서는 원하는 기능에 접근하기 위해서는 여러 단계를 거쳐야 하는 반면, 음성 인터페이스는 한번의 음성 명령으로 중간 단계를 거치지 않고 기능 실행이 가능합니다."
  ]
},
    {
  "title": "Voice UX Design Guide > Hands & Eye Free",
  "hash": "#hands--eye-free",
  "sentences": [
    "Hands & Eye Free",
    "사용자가 다른 일을 하면서도 이용 가능합니다. 운전 중 상황과 같이 손과 눈이 자유롭지 않은 상황에서 음성 인터페이스의 유용성은 더 커집니다.."
  ]
},
    {
  "title": "Voice UX Design Guide > 감성 매체",
  "hash": "#감성-매체",
  "sentences": [
    "감성 매체",
    "음성은 문화를 막론하고 감성적인 관계를 맺는데 중요한 수단으로 이용되므로, 음성 인터페이스를 통해 사용자와 감성적인 관계 맺기가 용이합니다."
  ]
},
    {
  "title": "Voice UX Design Guide > Attention & Coverage",
  "hash": "#attention--coverage",
  "sentences": [
    "Attention & Coverage",
    "소리는 사용자가 집중하고 있지 않더라도 주의를 끌고, 콘텐츠 및 정보 제공 시 넓은 coverage를 가질 수 있습니다."
  ]
},
    {
  "title": "Voice UX Design Guide > Voice UI의 한계",
  "hash": "#voice-ui의-한계",
  "sentences": [
    "Voice UI의 한계"
  ]
},
    {
  "title": "Voice UX Design Guide > 정보의 휘발성",
  "hash": "#정보의-휘발성",
  "sentences": [
    "정보의 휘발성",
    "사람의 인지적 특성상 단기적으로 기억할 수 있는 정보량은 한계가 있습니다. 특히 시각적인 정보(Visual cue)가 없는 상태에서 대화나 내용이 길어지면 이전 상황을 사용자가 기억하기 힘들 수 있으므로 정보의 양과 우선순위를 고려하여 중요한 정보만을 간결하고 명확하게 전달하는 것이 좋습니다."
  ]
},
    {
  "title": "Voice UX Design Guide > 간섭현상",
  "hash": "#간섭현상",
  "sentences": [
    "간섭현상",
    "음성 명령 시에 주위의 잡음이나 다른 사람의 말소리가 들어가서 잘못된 동작을 하게될 가능성이 있습니다. 제공하고자 하는 서비스 제공장소를 고려하여 음성 인터페이스 제공여부를 결정하는 것이 좋습니다. 파티장, 전시회장과 같은 환경에서는 음성인터페이스가 좋은 인터페이스가 아닙니다."
  ]
},
    {
  "title": "Voice UX Design Guide > 사생활 침해",
  "hash": "#사생활-침해",
  "sentences": [
    "사생활 침해",
    "기기와 어느정도 거리를 두고 음성으로 상호작용하기 때문에, 타인이 들을 수 있다는 점을 고려합니다. 프라이버시 관련 내용이나 비밀번호와 같이 민감한 개인정보를 음성으로 발화하는 것은 가급적 지양합니다."
  ]
},
    {
  "title": "Voice UX Design Guide > 저해상도의 정보 (Low Resolution)",
  "hash": "#저해상도의-정보-low-resolution",
  "sentences": [
    "저해상도의 정보 (Low Resolution)",
    "정보 탐색의 과정 및 결과가 복잡한 경우 도식화된 정보나 목록 없이 음성만으로 인터랙션을 제공하는 것은 적합하지 않을 수 있습니다. 예를 들어, 영화표 예매를 위한 좌석 선택 작업은 음성만으로 수행을 완료하는 것은 매우 어렵습니다. 그러므로, 제공하고자 하는 기능이 음성 상호작용만으로 사용자에게 충분한 가치를 제공할 수 있는지 검토해야 합니다. 제공할 기능의 범위를 결정하는 방법은",
    "기능 정의",
    "페이지를 참고하시기 바랍니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/nugu-web-server",
  "order": 188,
  "indexes": [
    {
  "title": "NUGU 서비스 관리 web server 연동",
  "hash": "",
  "sentences": [
    "NUGU 서비스 관리 web server 연동"
  ]
},
    {
  "title": "NUGU 서비스 관리 web server 연동 > WebView 설정하기",
  "hash": "#webview-설정하기",
  "sentences": [
    "WebView 설정하기"
  ]
},
    {
  "title": "NUGU 서비스 관리 web server 연동 > Cookie 설정",
  "hash": "#cookie-설정",
  "sentences": [
    "Cookie 설정",
    "NUGU 서비스 관리 웹에서 사용할 cookie 를 설정합니다.",
    "authorization: OAuth bearer 토큰",
    "pocId: https://developers.nugu.co.kr/#/sdk/pocList 에서 확인 가능",
    "redirectUri: NUGU 서비스 관리 웹 내에서 Play 에 로그인 하고 나면 호출되는 url (ex> nugu.user.sample://oauth_refresh)",
    "appVersion: Application 버전 정보",
    "theme: LIGHT 또는 DARK",
    "SettingsServiceActivity.kt",
    "private val webView: NuguWebView by lazy { findViewById<NuguWebView>(R.id.webView) }\n\noverride fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n\n    with(webView) {\n        authorization = NuguOAuth.getClient().getAuthorization()\n        pocId = nuguPocId\n        redirectUri = OAUTH_REDIRECT_URI\n        appVersion = BuildConfig.VERSION_NAME\n        theme = NuguWebView.THEME.LIGHT\n        loadUrl(Const.SERVICE_SETTING_URL)\n    }\n}"
  ]
},
    {
  "title": "NUGU 서비스 관리 web server 연동 > WindowListener 연동",
  "hash": "#windowlistener-연동",
  "sentences": [
    "WindowListener 연동",
    "onCloseWindow : Activity 종료 요청. reason 이 WITHDRAWN_USER 인 경우 회원탈퇴 요청으로 인한 종료이기 때문에, 인증정보 등을 파기해야 합니다.",
    "SettingsServiceActivity.kt",
    "override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n\n     webView.windowListener = object: {\n        override fun onCloseWindow(reason: String?) {\n            if reason == \"WITHDRAWN_USER\" {\n                // 인증 정보 파기\n            }\n            finish()\n        }\n     }       \n}"
  ]
},
    {
  "title": "NUGU 서비스 관리 web server 연동 > NUGU 서비스 관리 웹 호출",
  "hash": "#nugu-서비스-관리-웹-호출",
  "sentences": [
    "NUGU 서비스 관리 웹 호출",
    "Const.SERVICE_SETTING_URL: NUGU 서비스 관리 웹 사이트",
    "Const.AGREEMENT_URL: NUGU 이용약관 웹 사이트",
    "SettingsServiceActivity.kt",
    "override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n\n    webView.loadUrl(Const.SERVICE_SETTING_URL)\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/ios/nugu",
  "order": 180,
  "indexes": [
    {
  "title": "NUGU 사용자 인터페이스",
  "hash": "",
  "sentences": [
    "NUGU 사용자 인터페이스",
    "SDK UX Guide",
    "을 준수하여 어플리케이션을 개발하는데 사용할 수 있는 레이아웃 객체와 UI 컨트롤 같은 UI 구성요소를 미리 빌드된 형태로 제공합니다."
  ]
},
    {
  "title": "NUGU 사용자 인터페이스 > NuguVoiceChrome",
  "hash": "#nuguvoicechrome",
  "sentences": [
    "NuguVoiceChrome",
    "NUGU 서비스의 핵심 기능인 음성 인식을 표현하기 위한 View 입니다. 음성 인식의 단계를 Animation 으로 표현하며, 인식된 음성을 문자로 출력하고, 눌러서 음성 인식을 대신하는",
    "NuguChipsButton",
    "들을 노출합니다.",
    "func changeState(state: NuguVoiceChrome.State)NuguVoiceChrome 의 상태(단계)와 animation 을 변경합니다.",
    "func setChipsData(chipsData: [NuguChipsButton.NuguChipsButtonType], onChipsSelect: @escaping ((_ selectedChips: NuguChipsButton.NuguChipsButtonType) -> Void))NuguVoiceChrome 에 노출될 NuguChipsButton 을 설정합니다.",
    "func setRecognizedText(text: String?)NuguVoiceChrome 에 출력될 인식 문구를 설정합니다."
  ]
},
    {
  "title": "NUGU 사용자 인터페이스 > VoiceChromePresenter",
  "hash": "#voicechromepresenter",
  "sentences": [
    "VoiceChromePresenter",
    "NuguVoiceChrome",
    "은",
    "VoiceChromePresenter",
    "의 도움없이 생성, 노출, 관리, 제거될 수 있으나",
    "VoiceChromePresenter",
    "를 사용하면 복잡한 사용 로직을 사용자를 대신해 관리해줍니다.",
    "NuguVoiceChrome VoiceChromePresenter 을 사용하기 위해 먼저 NuguUIKit 와 NuguClientKit 을 import 해줍니다.",
    "import NuguClientKit\nimport NuguUIKit",
    "그리고 NuguVoiceChrome 를 노출할 owner 의 코드에 다음과 같이 NuguVoiceChrome VoiceChromePresenter variable 을 initialize 해줍니다.",
    "private lazy var voiceChromePresenter: VoiceChromePresenter = {\n        VoiceChromePresenter(\n            viewController: self,\n            nuguVoiceChrome: nuguVoiceChrome,\n            nuguClient: NuguCentralManager.shared.client\n        )\n    }()",
    "viewController : NuguVoiceChrome 을 add / insert 할 parentView 를 소유하고 있는 viewController 입니다. ViewController 대신에 view 를 인자로 직접 설정할 수도 있습니다.",
    "nuguClient : NuguVoiceChrome 을 대신 제어하기 위해 전달해야하는 NuguClient 객체입니다. SampleApp 코드에서는 NuguCentralManager 가 가지고 있습니다.",
    "VoiceChromePresenter 는 NuguVoiceChrome 을 노출하고 제거하는 함수를 제공하고 있습니다.",
    "do {\n            // NuguVoiceChrome 노출\n            try voiceChromePresenter.presentVoiceChrome()\n            // 성공 시 음성 인식을 시작해주어야 합니다.\n        } catch {\n            switch error {\n            // Network issue 로 정상적으로 VoiceChrome 을 작동할 수 없는 경우\n            case VoiceChromePresenterError.networkUnreachable: break\n            // 이미 VoiceChrome 이 노출되어 있을 경우\n            case VoiceChromePresenterError.alreadyShown: break\n            // VoiceChrome 을 add 할 superView 가 존재하지 않을 경우\n            case VoiceChromePresenterError.superViewNotExsit: break\n                log.error(error)\n            }\n        }",
    "// NuguVoiceChrome 제거\nvoiceChromePresenter.dismissVoiceChrome()",
    "VoiceChromeDelegate 를 설정해주고, 전달받은 delegate 상황을 핸들링하여야 합니다.",
    "voiceChromePresenter.delegate = self\n\n// MARK: - VoiceChromePresenterDelegate\n\nextension MainViewController: VoiceChromePresenterDelegate {\n    func voiceChromeWillShow() {\n        // VoiceChrome 이 노출되기 전에 NuguButton 을 비활성화 시켜줍니다. \n        nuguButton.isActivated = false\n    }\n\n    func voiceChromeWillHide() {\n        // VoiceChrome 이 제거되기 전에 NuguButton 을 활성화 시켜줍니다. \n        nuguButton.isActivated = true\n    }\n\n    func voiceChromeChipsDidClick(chips: NuguChipsButton.NuguChipsButtonType) {\n        chipsDidSelect(selectedChips: chips)\n    }\n}"
  ]
},
    {
  "title": "NUGU 사용자 인터페이스 > NuguButton",
  "hash": "#nugubutton",
  "sentences": [
    "NuguButton",
    "NuguButton",
    "은 음성 인식을 시작하고, Wake up 감지 가능 상태를 표현하기 위해 제공되는 버튼입니다.",
    "NuguButton",
    "은 코드, IBOutlet 상관없이 생성하여 사용 가능합니다.",
    "public var nuguButtonType: NuguButtonType(fab/button, blue/white 설정 가능)",
    "public var isActivated: Bool",
    "public override var isEnabled: Bool",
    "// Wake up detector 활성화 표현을 위한 flip animation 을 활성화합니다.\n    public func startFlipAnimation() \n    // Wake up detector 활성화 표현을 위한 flip animation 을 활성화합니다.\n    public func stopFlipAnimation() \n    // NuguButton 이 비활성화 되었을때 진행되는 NuguButton의 animation 을 pause 시킵니다.\n    public func pauseDeactivateAnimation()"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/phonecall",
  "order": 168,
  "indexes": [
    {
  "title": "PhoneCall",
  "hash": "",
  "sentences": [
    "PhoneCall",
    "전화 수/발신 기능 제어를 위한 규격"
  ]
},
    {
  "title": "PhoneCall > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.3 입니다.",
    "1.0 | 2020.07.06 | 규격 추가",
    "1.1 | 2020.08.28 | SendCandidates directive 에 clientSearchTargetList 추가",
    "1.2 | 2020.11.02 | Context 에 searchScene 추가SendCandidates directive 에 searchScene 추가SendCandidates directive 의 clientSearchTargetList 삭제Context 에 recipient 추가MakeCallSucceeded event 추가",
    "1.3 | 2022.02.15 | Context,SendCandidates intent에 “SAVE_CONTACT”, “BLOCK”, “EXACT_ONE” 추가Contact Object 에 isBlocked 추가Person Object에 poiId 추가BlockNumber 디렉티브 추가"
  ]
},
    {
  "title": "PhoneCall > State Diagram",
  "hash": "#state-diagram",
  "sentences": [
    "State Diagram"
  ]
},
    {
  "title": "PhoneCall > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "PhoneCall > PhoneCallAgent 사용",
  "hash": "#phonecallagent-사용",
  "sentences": [
    "PhoneCallAgent 사용",
    "PhoneCall interface 규격에 따른 디바이스의 동작 제어는 PhoneCallAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient 생성시 PhoneCallAgent 를 추가합니다.",
    "class MyPhoneCallClient: PhoneCallClient {\n    ...\n}\nNuguAndroidClient().Builder()\n            .addAgentFactory(PhoneCallAgent.NAMESPACE, object : AgentFactory<PhoneCallAgent> {\n                override fun create(container: SdkContainer): PhoneCallAgent = with(container) {\n                    PhoneCallAgent(\n                        MyPhoneCallClient(),\n                        getContextManager(),\n                        getMessageSender(),\n                        getAudioSeamlessFocusManager(),\n                        DefaultFocusChannel.COMMUNICATIONS_CHANNEL_NAME,\n                        getDirectiveSequencer(),\n                        getInteractionControlManager()\n                    )\n                }\n            })",
    "NuguAndroidClient instance 를 통해 PhoneCallAgent instance 에 접근할 수 있습니다.",
    "val phoneCallAgent = nuguAndroidClient.getAgent(PhoneCallAgent.NAMESPACE)",
    "NuguClient instance 를 통해 PhoneCallAgent instance 에 접근할 수 있습니다.",
    "let phoneCallAgent = nuguClient.phoneCallAgent",
    "CapabilityFactory::makeCapability 함수로 PhoneCallAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto phonecall_handler(std::shared_ptr<IPhoneCallHandler>(\n        CapabilityFactory::makeCapability<PhoneCallAgent, IPhoneCallHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(phonecall_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "PhoneCall > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "통화 상태 정보를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android",
    "iOS",
    "PhoneCallClient 를 구현합니다.",
    "class MyPhoneCallClient: PhoneCallClient {\n    override fun getContext(): Context {\n        ...\n    }\n\n    ...\n}",
    "PhoneCallAgentDelegate 를 추가합니다.",
    "class MyPhoneCallAgentDelegate: PhoneCallAgentDelegate {\n    func phoneCallAgentRequestContext() -> PhoneCallContext {\n        ...\n    }\n\n    ...\n}\nphoneCallAgent.delegate = self"
  ]
},
    {
  "title": "PhoneCall > 발신",
  "hash": "#발신",
  "sentences": [
    "발신",
    "전화 발신이",
    "SendCandidates",
    ",",
    "MakeCall",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "PhoneCallClient 를 구현합니다.",
    "class MyPhoneCallClient: PhoneCallClient {\n    override fun sendCandidates(payload: SendCandidatesPayload, callback: Callback) {\n        // 연락처 검색 기능을 구현\n        ...\n    }\n\n    override fun makeCall(payload: MakeCallPayload, callback: Callback) {\n        // 전화 발신 기능을 구현\n        ...\n    }\n    ...\n}",
    "PhoneCallAgentDelegate 를 추가합니다",
    "class MyPhoneCallAgentDelegate: PhoneCallAgentDelegate {\n    func phoneCallAgentDidReceiveSendCandidates(item: PhoneCallCandidatesItem, dialogRequestId: String) {\n        // 연락처 검색 기능을 구현\n        ...\n    }\n\n    func phoneCallAgentDidReceiveMakeCall(callType: PhoneCallType, recipient: PhoneCallPerson, dialogRequestId: String) -> PhoneCallErrorCode? {\n        // 전화 발신 기능을 구현\n        ...\n    }\n\n    ...\n}\nphoneCallAgent.delegate = self",
    "IPhoneCallListener 를 추가합니다.",
    "class MyPhoneCallListener : public IPhoneCallListener {\npublic:\n    ...\n\n    void processSendCandidates(const std::string& payload) override\n    {\n        ...\n    }\n    \n    void processMakeCall(const std::string& payload) override\n    {\n        ...\n    }\n\n    ...\n};\nauto phonecall_listener(std::make_shared<MyPhoneCallListener>());\nCapabilityFactory::makeCapability<PhoneCallAgent, IPhoneCallHandler>(phonecall_listener.get());"
  ]
},
    {
  "title": "PhoneCall > 수신",
  "hash": "#수신",
  "sentences": [
    "수신",
    "수신 전화에 대한 수락이",
    "AcceptCall",
    "directive 로 거절이",
    "EndCall",
    "directive 로 요청될 수 있습니다.",
    "iOS 는 수신 수락/거절 기능을 제공하지 않습니다.",
    "Android",
    "Linux",
    "PhoneCallClient 를 구현합니다.",
    "class MyPhoneCallClient: PhoneCallClient {\n    override fun acceptCall(payload: AcceptCallPayload) {\n        // 수신 수락 기능을 구현\n        ...\n    }\n\n    override fun makeCall(payload: MakeCallPayload, callback: Callback) {\n        // 수신 거절 기능을 구현\n        ...\n    }\n    ...\n}",
    "IPhoneCallListener 를 추가합니다.",
    "class MyPhoneCallListener : public IPhoneCallListener {\npublic:\n    ...\n\n    void processAcceptCall(const std::string& payload)\n    {\n        ...\n    }\n    \n    ...\n};\nauto phonecall_listener(std::make_shared<MyPhoneCallListener>());\nCapabilityFactory::makeCapability<PhoneCallAgent, IPhoneCallHandler>(phonecall_listener.get());"
  ]
},
    {
  "title": "PhoneCall > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"PhoneCall\": {\n    \"version\": \"1.1\",\n    \"state\": \"{{STRING}}\",\n    \"template\": {\n      \"intent\": \"{{STRING}}\",\n      \"callType\": \"{{STRING}}\",\n      \"recipientIntended\": {\n        \"name\": \"{{STRING}}\",\n        \"label\": \"{{STRING}}\"\n      },\n      \"searchScene\": \"{{STRING}}\",\n      \"candidates\": [Person]\n    },\n    \"recipient\": {\n        \"name\": \"{{STRING}}\",\n        \"token\": \"{{STRING}}\",\n        \"isMobile\": \"{{STRING}}\",\n        \"isRecentMissed\": \"{{STRING}}\"\n    },\n    \"numberBlockable\": \"{{STRING}}\"\n  }\n}",
    "state | string | Y | IDLEOUTGOINGINCOMINGESTABLISHED",
    "template | object | N | Play 에서 진행중인 intent 를 알 수 있도록 SendCandidates event 에서 전달받은 data 를 유지해야 함",
    "template.intent | string | N | candidates의 용도- CALL : 전화걸어줘- SEARCH : 찾아줘- HISTORY : 최근 통화 목록- REDIAL : 재발신- MISSED : 부재중통화- EXACT_ONE : 전화추천 (전달된 candidates에 새로운 수신자 후보를 추가하지 않고 동명이 있을 경우 하나만 전달)- SAVE_CONTACT- BLOCK- NONE",
    "template.callType | string | N | NORMAL : 일반 전화SPEAKER : 스피커폰VIDEO : 비디오콜CALLAR : 콜라",
    "template.recipientIntended | object | N | 발화에서 분석된 recipient 정보",
    "template.recipientIntended.name | string | N | 검색에 요청할때 사용된 상대방 이름   (NLU 분석으로 나온 이름)",
    "template.label | string | N | NLU 분석 결과 label (집, 회사, …) 정규화되어 있지 않고, 사용자 발화에서 분석된 값을 그대로 보냄",
    "template.searchScene | string | N | SendCandidates 참조",
    "template.candidates | array of Person | N | 화면에 검색 결과 리스트를 디스플레이하는 중에만 context에 추가",
    "recipient | object | N | 통화 상대방에 대한 정보 수신중(INCOMING) 상태에서는 발신자 정보를 세팅 (CallArrived Event의 caller 정보)",
    "recipient.name | string | N | 통화 상대방의 이름",
    "recipient.token | string | N | 통화 상대방을 식별하기 위한 unique 값",
    "recipient.isMobile | string | N | 통화 상대방 전화번호가 모바일 폰인지 여부 (TRUE/FALSE)",
    "recipient.isRecentMissed | string | N | 통화 상대방과의 가장 최근 통화가 부재중 통화인지 여부- TRUE : 수신 중인 전화번호의 가장 최근 수신 이력이 있지만 못받은 경우- FALSE : 수신 중인 전화번호의 수신 이력이 없거나, 있는데 부재중 통화가 아닌 경우",
    "numberBlockable | string | N | 수신차단 전화번호 추가 가능 여부 (수신차단 번호가 1,000개 초과하면 false)TRUE, FALSE(default)"
  ]
},
    {
  "title": "PhoneCall > Common Objects",
  "hash": "#common-objects",
  "sentences": [
    "Common Objects"
  ]
},
    {
  "title": "PhoneCall > Person",
  "hash": "#person",
  "sentences": [
    "Person",
    "하나의 연락처를 나타내는 포맷",
    "{\n  \"name\": \"{{STRING}}\",\n  \"type\": \"{{STRING}}\",\n  \"profileImgUrl\": \"{{STRING}}\",\n  \"category\": \"{{STRING}}\",\n  \"address\": {\n    \"road\": \"{{STRING}}\",\n    \"jibun\": \"{{STRING}}\"\n  },\n  \"businessHours\": {\n    \"open\": \"{{STRING}}\",\n    \"close\": \"{{STRING}}\",\n    \"info\": \"{{STRING}}\"\n  },\n  \"history\": {\n    \"time\": \"{{STRING}}\",\n    \"type\": \"{{STRING}}\",\n    \"callType\": \"{{STRING}}\"\n  },\n  \"numInCallHistory\": \"{{STRING}}\",\n  \"token\": \"{{STRING}}\",\n  \"score\": \"{{STRING}}\",\n  \"contacts\": [Contact],\n  \"poiId\": \"{{STRING}}\"\n}",
    "name | string | Y | candidates가 존재하면 각 candidate는 최소한 이름은 포함해야 함",
    "type | string | Y | recipient candidates의 타입- CONTACT : 연락처 검색- EXCHANGE : exchange 검색- T114 : T114 검색- NONE : 특정 카테고리에 속하지 않음",
    "profileImgUrl | string | N | profile image URL",
    "category | string | N | 업종",
    "address | object | N | 주소",
    "address.road | string | N | 도로명 주소",
    "address.jibun | string | N | 지번 주소",
    "businessHours | object | N | 영업시간",
    "businessHours.open | string | N | 날짜, 시간 정보로 ISO 8601 포맷 (2007-12-03T10:15:30) HH:mm",
    "businessHours.close | string | N | 날짜, 시간 정보로 ISO 8601 포맷 (2007-12-03T10:15:30) HH:mm",
    "businessHours.info | string | N | 부가정보",
    "history | object | N | 통화 기록을 위한 정보",
    "history.time | string | N | 날짜, 시간 정보로 ISO 8601 포맷 (2007-12-03T10:15:30)",
    "history.type | string | N | OUT : 발신 통화 (Outgoing call)- OUT_CANCELED : 발신 연결 안 됨 (Outgoing call canceled)- IN : 수신 통화 (Incoming call)- REJECTED : 수신 거절 (Rejected call)- MISSED : 부재중 통화 (Missed call)- VOICE_MESSAGE : 음성 메시지 (Voice message)- BLOCKED : 수신 차단 (Blocked)",
    "history.callType | string | N | NORMAL : 일반통화- VIDEO : 영상통화- CALLAR : 콜라 영상통화- GROUP : 그룹통화- VOICE_MESSAGE : 음성 메시지 (Voice message)",
    "numInCallHistory | string | N | 발신기록 히스토리에 존재하는 건수 0, 1, 2, … 값을 string 형태로 받음",
    "token | string | N | 사용자 추가 정보를 식별하기 위해 임의로 정의한 key값을 포함 unique 여부는 사용되는 용도에 의해 결정",
    "score | string | N | 검색 결과의 신뢰도",
    "contacts | array of Contact | N | -",
    "poiId | string | N | 상호명 발화시 tmap등을 연결하기 위한 poi_id"
  ]
},
    {
  "title": "PhoneCall > Contact",
  "hash": "#contact",
  "sentences": [
    "Contact",
    "하나의 연락처를 나타내는 포맷",
    "{\n  \"label\": \"{{STRING}}\",\n  \"number\": \"{{STRING}}\",\n  \"isBlocked\": \"{{STRING}}\"\n}",
    "label | string | N | MOBILECOMPANYHOMEUSER_DEFINED : 사용자가 지정한 값도 필요할지 검토 필요",
    "number | string | N | 전화번호",
    "isBlocked | string | N | 수신 차단 여부TRUE, FALSE(default)"
  ]
},
    {
  "title": "PhoneCall > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
},
    {
  "title": "PhoneCall > SendCandidates",
  "hash": "#sendcandidates",
  "sentences": [
    "SendCandidates",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"SendCandidates\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"intent\": \"{{STRING}}\",\n    \"recipientIntended\": {\n      \"name\": \"{{STRING}}\",\n      \"label\": \"{{STRING}}\"\n    },\n    \"callType\": \"{{STRING}}\",\n    \"searchScene\": \"{{STRING}}\",\n    \"candidates\": [array of Person]\n  }\n}",
    "intent | string | Y | CALL : 전화걸어줘SEARCH : 찾아줘HISTORY : 최근 통화 목록REDIAL : 재발신MISSED : 부재중통화NONE",
    "recipientIntended | object | N | 발화에서 분석된 recipient 정보",
    "name | string | N | 검색에 요청할때 사용된 상대방 이름 (NLU 분석으로 나온 이름)",
    "label | string | N | NLU 분석 결과 label (집, 회사, …) 정규화되어 있지 않고, 사용자 발화에서 분석된 값을 그대로 보냄",
    "callType | string | N | NORMAL : 일반 전화SPEAKER : 스피커폰VIDEO : 비디오콜CALLAR : 콜라",
    "searchScene | string | N | 검색 대상과 화면을 정의하기 위해 추가 enum은 아니며 임의의 string이 올 수 있음 → 확장 가능성이 높아서 string으로 정의 (아래에 추가되는 값들은 여러 poc에서 공유해서 사용하는 값으로 추가 시 아래의 리스트를 계속 확장 가능- DEFAULT : 기본 검색 로직- T114ONLY : T114 검색결과만 노출되는 검색 로직- T114INCLUDE : T114 검색결과를 항상 포함하는 검색 로직- T114DIRECT : 긴급전화",
    "candidates | array of Person | N | candidates가 없으면 이 항목이 없어야 함"
  ]
},
    {
  "title": "PhoneCall > MakeCall",
  "hash": "#makecall",
  "sentences": [
    "MakeCall",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"MakeCall\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"recipient\": Person,\n    \"callType\": \"{{STRING}}\"\n  }\n}",
    "recipient | Person | Y | -",
    "callType | string | Y | NORMAL : 일반 전화SPEAKER : 스피커폰VIDEO : 비디오콜CALLAR : 콜라"
  ]
},
    {
  "title": "PhoneCall > EndCall",
  "hash": "#endcall",
  "sentences": [
    "EndCall",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"EndCall\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "PhoneCall > AcceptCall",
  "hash": "#acceptcall",
  "sentences": [
    "AcceptCall",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"AcceptCall\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"speakerPhone\": {{BOOLEAN}}\"\n  }\n}",
    "speakerPhone | bool | Y | 스피커폰으로 받을지 여부"
  ]
},
    {
  "title": "PhoneCall > BlockIncomingCall",
  "hash": "#blockincomingcall",
  "sentences": [
    "BlockIncomingCall",
    "현재 수신 중인 전화 수신 차단 설정",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"BlockIncomingCall\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "PhoneCall > BlockNumber",
  "hash": "#blocknumber",
  "sentences": [
    "BlockNumber",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"BlockNumber\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"number\": \"{{STRING}}\",\n    \"blockType\": \"{{STRING}}\"\n  }\n}",
    "number | string | Y | 전화번호",
    "blockType | string | Y | EXACTPREFIXPOSTFIX"
  ]
},
    {
  "title": "PhoneCall > Events",
  "hash": "#events",
  "sentences": [
    "Events"
  ]
},
    {
  "title": "PhoneCall > CandidatesListed",
  "hash": "#candidateslisted",
  "sentences": [
    "CandidatesListed",
    "검색 결과 리스트가 화면에 보여지는 경우 보내는 Event",
    "Parameter 들은 Context 를 통해 전송되며, 검색 결과가 없는 경우에도 empty 로 전송해야 함.",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"CandidatesListed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "PhoneCall > CallArrived",
  "hash": "#callarrived",
  "sentences": [
    "CallArrived",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"CallArrived\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"caller\": {\n      \"name\": \"{{STRING}}\",\n      \"token\": \"{{STRING}}\",\n      \"isMobile\": \"{{STRING}}\",\n      \"isRecentMisssed\": \"{{STRING}}\"\n    }\n  }\n}",
    "caller | object | Y | 발신자 정보",
    "caller.name | string | N | 이름",
    "caller.token | string | Y | 전화를 건 상대방인 식별하기 위한 unique 값CallArrived Event 후에 응답을 보낼때 해당 Event를 발생시킨 caller를 unique하게 구분하기 위해 SDK에서 생성하는 token 값",
    "caller.isMobile | string | Y | 모바일 폰인지 여부(TRUE/FALSE)",
    "caller.isRecentMissed | string | Y | 가장 최근 통화가 부재중 통화인지 여부- TRUE : 수신 중인 전화번호의 가장 최근 수신 이력이 있지만 못받은 경우- FALSE : 수신 중인 전화번호의 수신 이력이 없거나, 있는데 부재중 통화가 아닌 경우"
  ]
},
    {
  "title": "PhoneCall > CallEnded",
  "hash": "#callended",
  "sentences": [
    "CallEnded",
    "EndCall로 명시적으로 전화를 끊은 경우",
    "ONGOING인 경우는 상대방이 거절하거나 통화중, 전화를 안받는 경우 등 연결이 안되는 모든 상태",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"CallEnded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "PhoneCall > CallEstablished",
  "hash": "#callestablished",
  "sentences": [
    "CallEstablished",
    "상대방이 전화를 받은 경우",
    "AcceptCall이 성공해서 연결된 경우",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"CallEstablished\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "PhoneCall > MakeCallFailed",
  "hash": "#makecallfailed",
  "sentences": [
    "MakeCallFailed",
    "MakeCall이 실패하는 경우 → 기능 상의 이슈로 전화 연결 시도 자체가 실패하는 경우",
    "{\n  \"header\": {\n    \"namespace\": \"PhoneCall\",\n    \"name\": \"MakeCallFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\",\n    \"callType\": \"{{STRING}}\"\n  }\n}",
    "errorCode | string | Y | NO_SYSTEM_PERMISSION : 권한없음CALL_TYPE_NOT_SUPPORTED : 해당 callType 을 지원하지 않음",
    "callType | string | Y | NORMAL : 일반 전화SPEAKER : 스피커폰VIDEO : 비디오콜CALLAR : 콜라"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform",
  "order": 173,
  "indexes": [
    {
  "title": "Platform",
  "hash": "",
  "sentences": [
    "Platform",
    "NUGU SDK는 iOS, Android, Linux 플랫폼을 지원합니다. 각각의 플랫폼에 맞는 언어와 특성을 따르고 있으며, 동일한 구조를 가지고 있는 영역(Common)과 플랫폼 별로 다른 구조를 가진 영역(Depends on platform)이 구분되어 있습니다."
  ]
},
    {
  "title": "Platform > NUGU SDK Architecture",
  "hash": "#nugu-sdk-architecture",
  "sentences": [
    "NUGU SDK Architecture",
    "NUGU SDK를 더 자세히 알아보기 위해서는 각각의 플랫폼 별 페이지를 통해 확인하실 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/distribute-and-manage-a-play/play-operation-policy",
  "order": 106,
  "indexes": [
    {
  "title": "Play 운영 정책",
  "hash": "",
  "sentences": [
    "Play 운영 정책",
    "서비스 중인 Play의 서비스 품질 확보를 위해 NUGU developers에서는 정기 또는 비정기적으로 품질 검사를 실시합니다.",
    "이 과정에서 Play가 정상적으로 동작하지 않거나 VOC를 통해 정상적으로 동작하지 않는 Play로 신고된 경우에는 등록하신 연락처 정보로 Play 서비스 현황에 대한 안내가 발송됩니다.",
    "Play의 정상화 권고 조치를 했음에도 정상화되지 않은 경우에는 효율적인 서비스 운영을 위해 NUGU developers의 내부 운영 기준에 따라 불가피하게 해당 Play의 서비스를 중지하거나 삭제할 수 있습니다.",
    "또한 제공되는 Play의 콘텐츠 품질도 주기적으로 검사하여 적절하지 않거나 미풍양속에 어긋나는 서비스가 발견되는 경우에도 해당 Play를 직권으로 중지, 삭제할 수 있습니다."
  ]
},
    {
  "title": "Play 운영 정책 > Play 직권 중지",
  "hash": "#play-직권-중지-",
  "sentences": [
    "Play 직권 중지",
    "서비스 중인 Play에 다음과 같은 문제가 발생되는 경우에는 NUGU developers 운영자 직권에 의한 중지 대상이 됩니다.",
    "Play가 기술적인 이유에 의해 2회 이상 일정 주기로 정상 제공되지 않은 경우",
    "Play에서 제공되는 콘텐츠가 NUGU developers의 운영 원칙에 부합하지 않는 경우",
    "NUGU developers 운영자는 문제가 되는 Play를 발견하는 즉시 개발자의 이메일 등 연락처를 통해서 해당 이슈를 통보하고, 결과를 받아서 처리하게 됩니다. 다만, 사안이 중대한 경우에는 Play의 서비스를 먼저 중지 조치한 후 개발자에게 통보를 할 수 있습니다.",
    "자신의 Play가 NUGU developers 운영자에 의해 직권 중지된 경우, “1:1 문의하기”를 통해 이의를 제기하면 Play 직권 중지의 해지 프로세스를 따라 재검토한 후 결과를 개발자의 연락처로 통보하게 됩니다.",
    "직권 중지 시 Play는 서비스 중지(Disable) 상태입니다. 개발자가 직접 재개(Enable)할 수 없으며, NUGU developers 운영자의 확인을 거쳐야 상태 변경이 가능합니다."
  ]
},
    {
  "title": "Play 운영 정책 > Play 직권 중지 해지",
  "hash": "#play-직권-중지-해지-",
  "sentences": [
    "Play 직권 중지 해지",
    "NUGU developers 운영자의 직권으로 중지된 Play에 대해 개발자가 1:1 문의하기를 통해 이의를 제기한 경우, 운영자는 해당 이슈가 해결이 되었는지 확인합니다. 이슈가 해결된 Play에 대해서는 업데이트 버전 심사에 준하는 수준의 검증을 진행합니다. 검수 과정에서도 이슈가 발견되지 않으면 Play에 대한 직권 중지는 해제되며, 다시 정상적으로 서비스됩니다. 단, 정상 서비스 배포는 최대 다음 배포일까지 대기한 후에 진행될 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/play-registration-and-review",
  "order": 96,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/play-registration-and-review/play-review",
  "order": 100,
  "indexes": [
    {
  "title": "Play 심사",
  "hash": "",
  "sentences": [
    "Play 심사",
    "Developers Console",
    ">",
    "Play kit",
    ">",
    "Play 관리",
    "심사 착수 후 2~3주(워킹데이 10~15일)입니다.메뉴에서 Play 심사에 필요한 각종 정보(기본 정보, 연동 정보, 배포 정보, 심사 정보)들을 모두 빠짐없이 등록을 한 후에 심사 요청을 하면 Play에 대한 심사가 시작됩니다.(",
    "심사 요청",
    ")",
    "Play 심사 중에는 Play 정보를 수정할 수 없기 때문에 수정이 필요한 경우에는 심사 요청을 취소하고, 정보를 수정하여 다시 요청하면 됩니다.(",
    "심사 취소",
    ")",
    "Play 심사가 시작되면 심사 중으로 상태가 변경되고, 이 과정에서 Play의 정책, 기능, 품질을 종합적으로 검증합니다. 필요시 계정 연동 테스트도 진행합니다.(",
    "심사 정책",
    "/",
    "심사 프로세스",
    ")",
    "Play 심사 기간은 심사 착수 후 2~3주이며, 심사 결과 정상적으로 서비스가 가능하다고 판단하면 심사 완료, 수정이 필요한 경우에는 반려 의견을 드리게 됩니다.",
    "Play 심사 승인이 거절되면 Play 반려 사유 리포트를 Play 기본 정보 등록 시 기입한 담당자 연락처(이메일)로 전달합니다. “Play 반려 사유”에 대한 이슈를 해결한 후 재심사를 요청할 수 있으며, Play 재심사 프로세스는 Play 심사 절차와 동일합니다."
  ]
},
    {
  "title": "Play 심사 > 심사 프로세스",
  "hash": "#심사-프로세스-",
  "sentences": [
    "심사 프로세스",
    "개발 완료 및 충분한 테스트를 마친 Play는",
    "심사 요청",
    "이후 다음의 프로세스에 따라 심사합니다.",
    "심사 소요 기간은 각 기준을 충족했을 때, 심사 착수 후 2~3주(워킹데이 10~15일)입니다.",
    "심사완료 직전, 수정 피드백 반영을 위해 일시 반려할 수 있습니다.",
    "매 단계에서 심사 기준이 충족되지 않는 경우, 피드백과 함께 반려 처리됩니다."
  ]
},
    {
  "title": "Play 심사 > 1. 등록 정보 및 정책 검증 (심사 착수 후 1~2일)",
  "hash": "#1-등록-정보-및-정책-검증-심사-착수-후-12일",
  "sentences": [
    "1. 등록 정보 및 정책 검증 (심사 착수 후 1~2일)",
    "Play 등록 정보 검증\n    \n      등록 정보의 법적 권리 및 사실 여부 확인\n      Play 사용자에게 노출되는 정보의 오탈자 및 내용 적절성 확인",
    "등록 정보의 법적 권리 및 사실 여부 확인",
    "Play 사용자에게 노출되는 정보의 오탈자 및 내용 적절성 확인",
    "정책 검증 (심사 정책에 따름)\n    \n      Play의 호출 이름(Invocation Name) 적합성\n      제공 서비스 및 콘텐츠의 적합성\n      다른 서비스와의 간섭 여부",
    "Play의 호출 이름(Invocation Name) 적합성",
    "제공 서비스 및 콘텐츠의 적합성",
    "다른 서비스와의 간섭 여부"
  ]
},
    {
  "title": "Play 심사 > 2. 기능 및 품질 검증 (4~5일)",
  "hash": "#2-기능-및-품질-검증-45일",
  "sentences": [
    "2. 기능 및 품질 검증 (4~5일)",
    "기능 검증\n    \n      Play Builder에 작성하신 내용을 바탕으로 기능 검증을 수행합니다. 발화 테스트 및 로그 분석을 통해 아래의 기능적 결과가 정상인지 확인합니다.\n        \n          음성 인식(음성 발화 -> text 변환) 결과\n          User Utterance Model(intent, entity) 분석 결과\n          Action Output의 동작 결과\n          Backend Proxy 및 계정 서버(OAuth2.0 연동 시) 연동",
    "Play Builder에 작성하신 내용을 바탕으로 기능 검증을 수행합니다. 발화 테스트 및 로그 분석을 통해 아래의 기능적 결과가 정상인지 확인합니다.\n        \n          음성 인식(음성 발화 -> text 변환) 결과\n          User Utterance Model(intent, entity) 분석 결과\n          Action Output의 동작 결과\n          Backend Proxy 및 계정 서버(OAuth2.0 연동 시) 연동",
    "음성 인식(음성 발화 -> text 변환) 결과",
    "User Utterance Model(intent, entity) 분석 결과",
    "Action Output의 동작 결과",
    "Backend Proxy 및 계정 서버(OAuth2.0 연동 시) 연동",
    "품질 검증\n    \n      기능 동작과 더불어 아래의 품질 기준들을 만족하는지 확인합니다.\n        \n          User Utterance Model(intent, entity) 이 사용자의 예상 발화를 폭넓게 지원해야 한다\n          Action Output 및 서비스Flow가 UX적으로 적합해야 한다.\n          음성 안내 및 기기 동작만으로 Play를 사용하는데 지장이 없어야 합니다. 다음 명령이나 필요 설정, 필수적인 entity를 안내하는지, 전반적인 사용 경험이 자연스러운지 판단합니다.\n          Play 컨셉과 설명에 맞는 기능과 콘텐츠를 충분히 제공하는지 판단합니다.\n          Backend Proxy 및 계정 서버(OAuth2.0 연동 시)가 안정적이어야 합니다.\n          (AudioPlayer Interface사용 시) 오디오 컨트롤 관련 Built-in Intent를 충분히 활용하여 설계하고, 적절한 Action을 설정해야 합니다.\n          (Display Interface사용 시) 각 Action에 적합한 형태의 화면을 제공해야 한다.",
    "기능 동작과 더불어 아래의 품질 기준들을 만족하는지 확인합니다.\n        \n          User Utterance Model(intent, entity) 이 사용자의 예상 발화를 폭넓게 지원해야 한다\n          Action Output 및 서비스Flow가 UX적으로 적합해야 한다.\n          음성 안내 및 기기 동작만으로 Play를 사용하는데 지장이 없어야 합니다. 다음 명령이나 필요 설정, 필수적인 entity를 안내하는지, 전반적인 사용 경험이 자연스러운지 판단합니다.\n          Play 컨셉과 설명에 맞는 기능과 콘텐츠를 충분히 제공하는지 판단합니다.\n          Backend Proxy 및 계정 서버(OAuth2.0 연동 시)가 안정적이어야 합니다.\n          (AudioPlayer Interface사용 시) 오디오 컨트롤 관련 Built-in Intent를 충분히 활용하여 설계하고, 적절한 Action을 설정해야 합니다.\n          (Display Interface사용 시) 각 Action에 적합한 형태의 화면을 제공해야 한다.",
    "User Utterance Model(intent, entity) 이 사용자의 예상 발화를 폭넓게 지원해야 한다",
    "Action Output 및 서비스Flow가 UX적으로 적합해야 한다.",
    "음성 안내 및 기기 동작만으로 Play를 사용하는데 지장이 없어야 합니다. 다음 명령이나 필요 설정, 필수적인 entity를 안내하는지, 전반적인 사용 경험이 자연스러운지 판단합니다.",
    "Play 컨셉과 설명에 맞는 기능과 콘텐츠를 충분히 제공하는지 판단합니다.",
    "Backend Proxy 및 계정 서버(OAuth2.0 연동 시)가 안정적이어야 합니다.",
    "(AudioPlayer Interface사용 시) 오디오 컨트롤 관련 Built-in Intent를 충분히 활용하여 설계하고, 적절한 Action을 설정해야 합니다.",
    "(Display Interface사용 시) 각 Action에 적합한 형태의 화면을 제공해야 한다.",
    "Action Output의 동작 결과",
    "Play Builder만으로 파악할 수 없는 기대 결과는 심사 요청 시 함께 전달해주시면 빠른 검증에 도움이 됩니다.",
    "(예시) 연동되는 IoT기기, OAuth2.0 연동용 테스트 계정, Backend Proxy에서 처리하여 반환되는 Prompt 및 기기 동작 등"
  ]
},
    {
  "title": "Play 심사 > 3. 결과 피드백 및 엔진 튜닝(4~5일)",
  "hash": "#3-결과-피드백-및-엔진-튜닝45일",
  "sentences": [
    "3. 결과 피드백 및 엔진 튜닝(4~5일)",
    "앞선 검증 결과를 개발자에게 전달합니다.\n    \n      심사 합격 및 수정 피드백\n        \n          검증 결과, 심사 합격 기준을 충족한 경우 “심사완료” 상태로 변경합니다.\n          심사 합격 기준을 거의 충족했으나, 일부 수정할 부분이 있는 경우 개별적으로 심사 피드백을 전달합니다. 이 과정에서 빌드 내용 수정이 필요한 경우 일시적으로 반려 처리 할 수 있습니다.\n        \n      \n      심사 불합격\n        \n          검증 결과, 심사 합격 기준을 충족하지 못한 경우 반려 사유와 함께 “심사 반려“ 상태로 변경합니다. 수정 후 재심사요청 하실 수 있으며, 반려 사유에 대한 문의는 Support > 문의사항 을 통해 문의해주세요.\n          Play Builder에 입력된 User Utterance Model을 기반으로, 음성인식 성능을 향상시키고자 기술 검토 및 엔진 튜닝을 진행합니다. Play 서비스 범위에 따라 엔진 튜닝에 추가적인 기간이 소요될 수 있습니다.",
    "심사 합격 및 수정 피드백\n        \n          검증 결과, 심사 합격 기준을 충족한 경우 “심사완료” 상태로 변경합니다.\n          심사 합격 기준을 거의 충족했으나, 일부 수정할 부분이 있는 경우 개별적으로 심사 피드백을 전달합니다. 이 과정에서 빌드 내용 수정이 필요한 경우 일시적으로 반려 처리 할 수 있습니다.",
    "검증 결과, 심사 합격 기준을 충족한 경우 “심사완료” 상태로 변경합니다.",
    "심사 합격 기준을 거의 충족했으나, 일부 수정할 부분이 있는 경우 개별적으로 심사 피드백을 전달합니다. 이 과정에서 빌드 내용 수정이 필요한 경우 일시적으로 반려 처리 할 수 있습니다.",
    "심사 불합격\n        \n          검증 결과, 심사 합격 기준을 충족하지 못한 경우 반려 사유와 함께 “심사 반려“ 상태로 변경합니다. 수정 후 재심사요청 하실 수 있으며, 반려 사유에 대한 문의는 Support > 문의사항 을 통해 문의해주세요.\n          Play Builder에 입력된 User Utterance Model을 기반으로, 음성인식 성능을 향상시키고자 기술 검토 및 엔진 튜닝을 진행합니다. Play 서비스 범위에 따라 엔진 튜닝에 추가적인 기간이 소요될 수 있습니다.",
    "검증 결과, 심사 합격 기준을 충족하지 못한 경우 반려 사유와 함께 “심사 반려“ 상태로 변경합니다. 수정 후 재심사요청 하실 수 있으며, 반려 사유에 대한 문의는 Support > 문의사항 을 통해 문의해주세요.",
    "Play Builder에 입력된 User Utterance Model을 기반으로, 음성인식 성능을 향상시키고자 기술 검토 및 엔진 튜닝을 진행합니다. Play 서비스 범위에 따라 엔진 튜닝에 추가적인 기간이 소요될 수 있습니다.",
    "심사 합격 기준",
    "대표 기능 및 Backend/계정서버 연동 관련 이슈 없음",
    "기본 발화(Play Builder에 입력된 발화) E2E 성공률 95% 이상",
    "확장 발화(기본 발화 외 임의로 생성한 테스트 발화) E2E 성공률 90% 이상",
    "내부 품질 기준 충족"
  ]
},
    {
  "title": "Play 심사 > 4. Play 배포(배포 요청일 전후)",
  "hash": "#4-play-배포배포-요청일-전후",
  "sentences": [
    "4. Play 배포(배포 요청일 전후)",
    "“심사완료” 상태에서 추가적인 수정사항이 없으시다면, 희망하는 배포일자와 함께",
    "배포 신청",
    "해주시면 되며, 해당일자 전후로 Play를 배포합니다.",
    "Play 동작에 이상이 있거나, 내부 사정에 따라 배포가 어려운 경우, 배포 요청일과 실제 배포일이 상이할 수 있습니다."
  ]
},
    {
  "title": "Play 심사 > 심사 정책",
  "hash": "#심사-정책-",
  "sentences": [
    "심사 정책",
    "Play의 심사는 앞선",
    "심사 프로세스",
    "에 따라 이뤄지며, 이 과정에서 기능/품질 수준 외에 반려 사유가 될 수 있는 정책적 기준들은 다음과 같습니다. 본 정책은 수시로 업데이트될 수 있으며, 원활한 심사를 위해 심사 요청 전 자세히 확인하시길 권장합니다.",
    "Play의 호출 이름(Invocation Name) 적합성",
    "제공 서비스 및 콘텐츠의 적합성",
    "다른 서비스와의 간섭 여부"
  ]
},
    {
  "title": "Play 심사 > 1. Play의 호출 이름(Invocation Name) 정책",
  "hash": "#1-play의-호출-이름invocation-name-정책",
  "sentences": [
    "1. Play의 호출 이름(Invocation Name) 정책",
    "Play 세션으로 진입하거나 Play를 바로 사용하기 위해서는 발화문(명령문)의 맨 앞에 호출 이름(Invocation Name)이 필요합니다. NUGU서비스 및 다른 Play와의 충돌이 없도록 다음과 같은 정책으로 심사하고 있습니다.",
    "호출 이름는 유일(Unique) 해야 한다. | 기존 서비스중인 Play의 호출 이름과 같을 수 없고, 완전히 포함하거나 포함될 수 없다.",
    "1개의 Play에 1개의 호출 이름을 등록한다. | 2개 이상의 구분되는 호출 이름을 사용할 수 없으나, 발음 및 사용자 인식상 같은 사용성을 가진다면 운영자가 확인 후 별칭(Alias)을 등록할 수 있다.",
    "지적재산권 분쟁의 소지가 없어야 한다. | 호출 이름에 지적재산권이 있다면, 1) 권리를 득하지 않은 개인/기업인 경우 2) 권리를 득했으나 법적 증빙이 누락된 경우 심사 반려 또는 증빙 요청을 할 수 있다.또한, 일반적인 통념상 특정 기업/브랜드를 상기시킬 경우 위와 준하게 본다.",
    "호출 이름은 3음절 이상, 8음절 이하여야 한다. (한글 표기 기준) | 음성인식 성능 및 다른 명령과의 충돌을 방지하고자 음절 수를 제한한다.",
    "NUGU 서비스명과 중복되지 않아야 한다. | 서비스중/예정인 NUGU서비스의 대표 명칭과 중복을 허용하지 않는다.",
    "NUGU Wake-up word(아리아, 팅커벨)를 사용할 수 없고, NUGU브랜드와 직접적 연관성을 나타낼 수 없다. | NUGU서비스 사용에 혼란을 주지 않기 위해 Wake-up word를 사용할 수 없으며, 마찬가지 이유로 제휴/계약 관계없이 NUGU브랜드를 차용할 수 없다.",
    "일반 명사 또는 범용적인 단어/표현의 단독 사용은 허용하지 않는다. | (예시) 일반 명사 : 레시피, 날씨, 인공지능(예시) 범용적인 단어 : 을지로, 명동, 유재석, 김연아(예시) 범용적인 표현 : 똑똑아, 여보야, 안녕단, 조합을 통해 범용성이 해소된 경우는 허용 가능하다. (예시) 명동 길잡이, 우리집 똑똑이",
    "명사형 단어를 권장하며, 조사나 술어로 끝나는 호출 이름은 지양한다. | 호출 이름에 대한 인식이 잘 되지 않을 수 있다.단 고유한 명칭인 경우 허용한다.(예시) 야놀자",
    "불쾌감 및 사회적 논란을 조장하거나 응급 상황과 관련된 호출 이름은 지양한다. | 욕설, 비하, 성인 단어, 부정적 의미를 내포한 단어, 응급 상황(119, SOS) 관련 단어 등",
    "기억하기 어렵거나, 발음하기 불편한 호출 이름은 지양한다. | (예시) 나는너너는나, 철수책상철책상, 파파파파파",
    "별칭(Alias) 등록",
    "사용자 입장에서 구분하기 어려운 동음이의어나 유사 명칭에 대해 운영자가 직접 검토하고 등록합니다. 별칭 검토 요청은 Support > 문의사항 을 통해 문의해주세요.",
    "(예시) “세계의 날씨”의 별칭 : “세계 날씨“, “3개의 날씨“"
  ]
},
    {
  "title": "Play 심사 > 2. 제공 서비스 및 콘텐츠 적합성 관련 정책",
  "hash": "#2-제공-서비스-및-콘텐츠-적합성-관련-정책",
  "sentences": [
    "2. 제공 서비스 및 콘텐츠 적합성 관련 정책",
    "NUGU developers에서는 다음의 정책에서 금지하는 서비스나 콘텐츠를 제공하거나, 해당하는 서비스로 유도한다고 판단하는 경우, 심사를 보류 또는 반려할 수 있습니다. 서비스중인 Play는 서비스를 정지/차단할 수 있고, 관련 사항은 개발자 계정 내 연락처로 안내 드립니다.",
    "상표권, 지식 재산권 그리고 브랜드 관련 위반 사항\n    \n      NUGU의 브랜드를 명시하거나 NUGU 브랜드로 오인할 수 있는 표현은 허용하지 않습니다. 이는 사용자에게 노출되는 호출 이름, Play설명, Play아이콘, 서비스 및 콘텐츠 내용에 모두 해당합니다. Support > 제휴 제안, 문의 사항을 통해 사전 협의된 경우만 예외적으로 허용할 수 있습니다.\n      타사의 브랜드나 상표권 그리고 지식재산권을 침해하면 안 됩니다. Play에 사용할 브랜드, 상표권 그리고 지식재산권에 대해서 법적인 권리를 가지고 있는 경우에는 심사 과정에서 확인할 수 있도록 관련 증빙을 제출해야 합니다. 심사 요청 시 “심사/배포 정보”에 URL 또는 첨부 파일을 등록할 수 있습니다.",
    "NUGU의 브랜드를 명시하거나 NUGU 브랜드로 오인할 수 있는 표현은 허용하지 않습니다. 이는 사용자에게 노출되는 호출 이름, Play설명, Play아이콘, 서비스 및 콘텐츠 내용에 모두 해당합니다. Support > 제휴 제안, 문의 사항을 통해 사전 협의된 경우만 예외적으로 허용할 수 있습니다.",
    "타사의 브랜드나 상표권 그리고 지식재산권을 침해하면 안 됩니다. Play에 사용할 브랜드, 상표권 그리고 지식재산권에 대해서 법적인 권리를 가지고 있는 경우에는 심사 과정에서 확인할 수 있도록 관련 증빙을 제출해야 합니다. 심사 요청 시 “심사/배포 정보”에 URL 또는 첨부 파일을 등록할 수 있습니다.",
    "연령 제한 현재 Play의 모든 서비스 및 콘텐츠는 ＂전체연령가＂ 등급만을 제공할 수 있습니다.\n    \n      포르노 등 성적인 콘텐츠 금지\n      폭력성 콘텐츠 금지\n      사행성 콘텐츠 금지",
    "포르노 등 성적인 콘텐츠 금지",
    "폭력성 콘텐츠 금지",
    "사행성 콘텐츠 금지",
    "부적절한 콘텐츠 제한 아래 주요 제한사항 외에도 사회적 통념상 부적절한 콘텐츠 운영자의 판단에 따라 제한됩니다.\n    \n      사이비 종교, 인종, 문화, 정치, 성 차별 등 사회적 논란을 조장하거나 불쾌감을 주는 콘텐츠 금지\n      불법 행위(성매매, 무기 제조, 마약 구매, 해킹 등)에 대한 안내 또는 관련 출처 유도 금지\n      사용자의 개인 정보를 불법적으로 수집하는 콘텐츠 금지",
    "사이비 종교, 인종, 문화, 정치, 성 차별 등 사회적 논란을 조장하거나 불쾌감을 주는 콘텐츠 금지",
    "불법 행위(성매매, 무기 제조, 마약 구매, 해킹 등)에 대한 안내 또는 관련 출처 유도 금지",
    "사용자의 개인 정보를 불법적으로 수집하는 콘텐츠 금지",
    "전문 정보(의료/법률) 제공의 제한\n    \n      Play를 통해 의료/법률 정보 및 컨설팅을 제공하는 것은 관련 법규에 따라 제한됩니다.\n      NUGU play로 의료/법률 관련 서비스를 제공하기 위해서는 Play설명 및 Prompt를 통해 면책 문구를 충분히 고지해야 합니다.\n        \n          이 Play는 참고용 의료 정보만을 제공하며, 의료 진단이나 치료는 반드시 전문의와 상담해주세요.",
    "Play를 통해 의료/법률 정보 및 컨설팅을 제공하는 것은 관련 법규에 따라 제한됩니다.",
    "NUGU play로 의료/법률 관련 서비스를 제공하기 위해서는 Play설명 및 Prompt를 통해 면책 문구를 충분히 고지해야 합니다.\n        \n          이 Play는 참고용 의료 정보만을 제공하며, 의료 진단이나 치료는 반드시 전문의와 상담해주세요.",
    "이 Play는 참고용 의료 정보만을 제공하며, 의료 진단이나 치료는 반드시 전문의와 상담해주세요.",
    "다른 Play 사용 유도 제한 Play에서 별도의 서비스를 제공하지 않고, 단순히 다른 Play를 추천하는 기능만 제공하는 것은 금지합니다. Play 사용 중 다른 Play를 호출할 때 금전적 보상을 해주는 형태도 금지합니다.",
    "미지원 기능에 대한 제한 및 별도 협의\n    \n      현재 Play 내 구매(in app purchase) 기능을 제공하고 있지 않습니다. Play 내 결제/구매는 준비중이며, 그 전까지는 모두 무료로만 제공할 수 있습니다. 단, 기부를 위한 Play는 Support > 제휴제안을 통해 문의해주세요.\n      현재 모든 광고를 허용하지 않고 있습니다. 수익을 위해 광고 제공이 꼭 필요한 경우, Support > 문의사항이나 제휴제안을 통해 문의해주세요.\n      NUGU developers에서 지원하지 않는 언어로만 구성된 경우 심사 반려될 수 있습니다.",
    "현재 Play 내 구매(in app purchase) 기능을 제공하고 있지 않습니다. Play 내 결제/구매는 준비중이며, 그 전까지는 모두 무료로만 제공할 수 있습니다. 단, 기부를 위한 Play는 Support > 제휴제안을 통해 문의해주세요.",
    "현재 모든 광고를 허용하지 않고 있습니다. 수익을 위해 광고 제공이 꼭 필요한 경우, Support > 문의사항이나 제휴제안을 통해 문의해주세요.",
    "NUGU developers에서 지원하지 않는 언어로만 구성된 경우 심사 반려될 수 있습니다.",
    "추후 위 기능들이 제공될 때, 개발 가이드를 포함하여 본 문서를 업데이트할 예정입니다."
  ]
},
    {
  "title": "Play 심사 > 3. 다른 서비스 간섭 관련 정책",
  "hash": "#3-다른-서비스-간섭-관련-정책",
  "sentences": [
    "3. 다른 서비스 간섭 관련 정책",
    "NUGU play와 기본 NUGU서비스 간 간섭을 방지하고자 아래와 같은 기준으로 심사하고 있으며, 해당할 경우 운영자 의견과 함께 반려될 수 있습니다.",
    "간섭 여부를 판단하는 서비스의 범위\n    \n      Play 심사 요청 시점에 서비스중인 NUGU서비스(Built-in 서비스)",
    "Play 심사 요청 시점에 서비스중인 NUGU서비스(Built-in 서비스)",
    "NUGU 서비스 매뉴얼 페이지를 참고하세요.\n    \n      Play 심사 요청 시점에 서비스중인 다른 Play",
    "Play 심사 요청 시점에 서비스중인 다른 Play",
    "NUGU 모바일앱 > 좌측상단 메뉴바 > “NUGU play”란 페이지를 참고하세요.\n    \n      Play 심사 요청 시점에 개발/심사중인 NUGU서비스 및 다른 Play\n      일반 사용자에게 제공되지 않는 B2B서비스 및 Private Play",
    "Play 심사 요청 시점에 개발/심사중인 NUGU서비스 및 다른 Play",
    "일반 사용자에게 제공되지 않는 B2B서비스 및 Private Play",
    "간섭 여부를 판단하는 기준",
    "- 유사한 명령어로 동작하는 경우- 같은 서비스 범위를 제공하거나 중복되는 콘텐츠를 제공하는 경우- 유사한 UX로 사용자에게 혼란을 줄 수 있는 경우- 유사한 콘셉트로 다른 서비스에 악영향을 줄 수 있는 경우",
    "유사한 명령어로 동작하나, 호출 이름(Invocation Name)으로 명확한 구분이 가능한 경우- 라디오 서비스(“라디오 틀어줘”)– BTN울림 Play(“BTN울림에서 라디오 틀어줘”)같은 서비스 범위를 제공하나 중복되지 않는 콘텐츠를 제공하는 경우- 누구백과 서비스(날짜별 별자리 정보)– 별천지 Play(계절별 별자리 제공)유사한 콘셉트이나 다른 서비스와 상호 보완적이거나 다양성을 늘려주는 경우- 날씨 서비스(국내 날씨 정보)– 세계의날씨 Play(국외 날씨 정보)Private Play로, 해당 사용자그룹이 다른 서비스와의 간섭에 영향이 없는 경우"
  ]
},
    {
  "title": "Play 심사 > 심사 요청",
  "hash": "#심사-요청-",
  "sentences": [
    "심사 요청",
    "개발 완료 및 충분한 테스트를 마친 Play는 Play정보 등록 이후 서비스 적합성에 대해 심사 요청하여 승인을 받아야 합니다.",
    "등록/심사 요청 페이지 하단에 위치한",
    "심사요청",
    "버튼을 클릭하여 Play의 심사를 요청합니다.",
    "심사 요청과 동시에 Play 상태는 심사 대기로 전환되고, Play 심사 담당자에게 심사 요청 사항이 자동으로 전달됩니다. Play 상태는",
    "Developers Console",
    ">",
    "Play kit",
    ">",
    "Play 관리",
    "페이지에서 확인할 수 있습니다.",
    "심사 요청된 Play 정보를 운영자가 검토하여 필수 정보가 누락된 경우에는 본격적인 심사 과정을 진행하기 전에 반려할 수 있습니다.\n반려된 경우에는 등록 현황에 반려 상태로 표시됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/play-registration-and-review/play-smarthome-play",
  "order": 98,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/before-start/play",
  "order": 14,
  "indexes": [
    {
  "title": "Play",
  "hash": "",
  "sentences": [
    "Play"
  ]
},
    {
  "title": "Play > Play",
  "hash": "#play",
  "sentences": [
    "Play",
    "Play는 NUGU 플랫폼의 엔진들과 통신해 서비스를 제공하는 단위로서, 사용자와 상호 작용하여 의도를 이해하고 그에 맞는 적절한 답변을 주거나 명령을 수행합니다.",
    "Play로 서비스를 제공하기 위해서는 사용자의 발화를 이해하여 의도를 파악하고 그에 맞는 답변을 제공해야 합니다. 즉, 서비스 제공자는 사용자의 발화를 예상하고 이 발화들의 의도에 맞는 기능들을 정의해야 합니다."
  ]
},
    {
  "title": "Play > Play 타입",
  "hash": "#play-타입",
  "sentences": [
    "Play 타입",
    "NUGU play kit에서 만들 수 있는 Play는 사용 대상에 따라 다음 두 가지로 구분됩니다."
  ]
},
    {
  "title": "Play > Public Play",
  "hash": "#public-play",
  "sentences": [
    "Public Play",
    "NUGU 사용자 모두가 사용할 수 있는 Play입니다.",
    "추후 공개 예정인 스토어에 Play가 등록되면 NUGU 사용자가 선택할 수 있습니다.",
    "스토어가 공개되기 전까지는 선택 과정 없이 바로 사용할 수 있습니다."
  ]
},
    {
  "title": "Play > Private Play",
  "hash": "#private-play",
  "sentences": [
    "Private Play",
    "등록된 디바이스 혹은 초대된 사용자만 사용할 수 있는 Play입니다.",
    "예를 들어, 회사 내에서만 혹은 가족/친구끼리만 사용하는 Play로도 활용할 수 있습니다.",
    "특정 디바이스를 등록하거나 제한된 사용자만 초대하는 것은 NUGU biz에서 설정할 수 있습니다."
  ]
},
    {
  "title": "Play > Play 호출 이름(Invocation name)",
  "hash": "#play-호출-이름invocation-name",
  "sentences": [
    "Play 호출 이름(Invocation name)",
    "Play 호출 이름은 사용자가 Play를 호출하기 위해 발화하는 고유한 이름을 말합니다. 사용자가 Play 호출 이름을 발화하면 해당 Play의 세션으로 진입하여 해당 Play의 기능을 사용할 수 있게 됩니다. 호출 이름은 Play Builder를 통해 Play를 만든 후, NUGU play kit에서 심사요청서를 작성할 때 입력할 수 있으며, 심사 단계에서 호출이름을 검토합니다.",
    "Play 생성 시에 이 호출 이름을 정의해야 하고, 호출 이름에 대한 자세한 내용은 호출 이름 정의하기를 참고하면 됩니다."
  ]
},
    {
  "title": "Play > Play 시작",
  "hash": "#play-시작",
  "sentences": [
    "Play 시작",
    "다음의 두 가지 발화 방법으로 Play를 시작할 수 있습니다."
  ]
},
    {
  "title": "Play > 1) Play 호출 이름 + Start(시작) / Open(열어줘)",
  "hash": "#1-play-호출-이름--start시작--open열어줘",
  "sentences": [
    "1) Play 호출 이름 + Start(시작) / Open(열어줘)",
    "Built-in Intent인 ‘Open’ 또는 ‘Start’를 사용하여 특정한 기능 수행 요청 없이 Play를 호출할 수 있습니다. ‘Open’에 해당하는 발화 예시로 ‘열어’, ‘오픈’이 있으며, ‘Start’에는 ‘시작’, ‘스타트’, ‘실행’이 해당됩니다."
  ]
},
    {
  "title": "Play > 2) Play 호출 이름 + 해당 Play의 Intent",
  "hash": "#2-play-호출-이름--해당-play의-intent",
  "sentences": [
    "2) Play 호출 이름 + 해당 Play의 Intent",
    "실행하고자 하는 Play의 기능을 호출 이름에 이어서 발화하여 Play를 시작할 수 있습니다. Play가 시작되며 곧바로 해당 Play의 Intent가 수행됩니다. 호출 이름과 Intent 사이에 ‘에게/에서/한테/로’와 같은 조사를 넣어 발화하거나 Entity를 함께 발화할 수도 있습니다.",
    "Welcome 메시지",
    "Play가 실행될 때에는 Welcome 메시지로 응답하여 Play가 시작되었다는 것을 사용자가 인지할 수 있도록 합니다. 단조롭게 느껴지지 않도록 Welcome 메시지는 2~3개 중 하나를 교차 사용합니다. Welcome 메시지는 필수 요소는 아니며, 각 Play 서비스의 상황에 맞게 제공 여부를 판단해 적용합니다.",
    "예)\n사용자: 아리아, 워커힐 실행해줘\nNUGU: 워커힐에 오신 것을 환영합니다."
  ]
},
    {
  "title": "Play > Play 종료",
  "hash": "#play-종료",
  "sentences": [
    "Play 종료",
    "다음의 네 가지 방법으로 Play를 종료할 수 있습니다."
  ]
},
    {
  "title": "Play > 1) Play 호출이름 + Stop(그만) / Close(닫아줘)",
  "hash": "#1-play-호출이름--stop그만--close닫아줘",
  "sentences": [
    "1) Play 호출이름 + Stop(그만) / Close(닫아줘)",
    "Play 호출이름에 Built-in Intent인 ‘Stop’ 또는 ‘Close’를 사용하여 Play를 종료할 수 있습니다. ‘Stop’에 해당하는 발화 예시로는 ‘그만’, ‘정지’, ‘중지’, ‘종료’, ‘멈춰’, ‘스탑’, ‘끝’이 있으며, ‘Close’에 해당하는 예시에는 ‘닫기’, ‘닫아’가 있습니다."
  ]
},
    {
  "title": "Play > 2) 세션 대기 상황에서 Stop(그만) / Close(닫아줘)",
  "hash": "#2-세션-대기-상황에서-stop그만--close닫아줘",
  "sentences": [
    "2) 세션 대기 상황에서 Stop(그만) / Close(닫아줘)",
    "세션 대기 상황에서 NUGU 에이전트가 Listening 상태인 경우, Play 호출이름을 포함하지 않아도 ‘Stop’ 또는 ‘Close’를 발화하여 Play를 종료할 수 있습니다.",
    "“그만” > Play 종료됨"
  ]
},
    {
  "title": "Play > 3) 세션 대기 상황에서 미지원 발화(Fallback) 연속 발생 시",
  "hash": "#3-세션-대기-상황에서-미지원-발화fallback-연속-발생-시",
  "sentences": [
    "3) 세션 대기 상황에서 미지원 발화(Fallback) 연속 발생 시",
    "사용자 발화가 Play 내에 정의된 Intent가 아닌 경우 Fallback으로 처리되며, Fallback Action에서 정의한 수만큼 연속으로 Fallback이 발생하면 Play가 종료됩니다.",
    "NUGU: (Listening 상태)\n사용자: 음악 틀어줘\nNUGU: 워커힐에서는 제공하지 않는 기능이에요. 무엇을 더 도와드릴까요? (Fallback 1회)\nNUGU: (Listening 상태)\n사용자: 음악 틀어줘\nNUGU: 워커힐에서는 제공하지 않는 기능이에요. 워커힐을 종료할게요. (Fallback 2회)"
  ]
},
    {
  "title": "Play > 4) 세션 대기 상황에서 미발화(Silence) 발생 시",
  "hash": "#4-세션-대기-상황에서-미발화silence-발생-시",
  "sentences": [
    "4) 세션 대기 상황에서 미발화(Silence) 발생 시",
    "미발화(Silence) 발생 시 Play가 종료됩니다.",
    "Closing 메시지",
    "Play가 종료될 때에도 Closing 메시지를 재생하여 Play가 종료되었다는 것을 사용자가 인지할 수 있게 합니다. Welcome 메시지와 마찬가지로, 단조롭게 느껴지지 않도록 2~3개 중 하나를 교차 사용합니다. Closing 메시지는 필수 요소는 아니며, 각 Play 서비스의 상황에 맞게 제공 여부를 판단해 적용합니다.",
    "예)",
    "사용자: 아리아, 워커힐 종료해줘",
    "NUGU: 워커힐을 종료할게요."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/manage-poc/poc",
  "order": 146,
  "indexes": [
    {
  "title": "PoC 관리",
  "hash": "",
  "sentences": [
    "PoC 관리",
    "NUGU SDK를 탑재하는 디바이스 혹은 앱 개발을 위해 등록된 POC 정보를 확인하거나, 관련 정보를 수정할 수 있습니다.",
    "Developers Console",
    ">",
    "SDK",
    ">",
    "PoC 관리",
    "메뉴에서 확인할 수 있습니다."
  ]
},
    {
  "title": "PoC 관리 > PoC 현황",
  "hash": "#poc-현황",
  "sentences": [
    "PoC 현황",
    "NUGU developers의 계정으로 개발중이거나 서비스중인 PoC 목록을 확인할 수 있습니다."
  ]
},
    {
  "title": "PoC 관리 > PoC 관리",
  "hash": "#poc-관리",
  "sentences": [
    "PoC 관리"
  ]
},
    {
  "title": "PoC 관리 > 제휴 정보",
  "hash": "#제휴-정보",
  "sentences": [
    "제휴 정보",
    "제휴 담당자",
    "해당 PoC를 관리할 수 있는 담당자들의 목록입니다. 성명, NUGU developers 계정, 연락처, 이메일 정보를 확인 할 수 있습니다.",
    "계약기간",
    "NUGU SDK 이용 계약 기간을 확인할 수 있습니다. SKT 담당자와 체결한 계약에 의거하여 기간이 표시됩니다.",
    "계약서",
    "SKT 담당자와 체결한 계약서 내용이 첨부됩니다.",
    "소개자료",
    "개발중이거나 서비스중인 디바이스 및 앱에 대한 소개자료를 별도로 전달해주셨을 경우 첨부됩니다.",
    "계약 상태",
    "해당 PoC의 계약 상태를 표시합니다. 계약 전 / 계약 완료 / 계약 종료 3가지 상태를 나타냅니다.",
    "SKT 담당자",
    "SKT 내부의 제휴 담당자의 정보를 표시합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/powercheck-interface",
  "order": 89,
  "indexes": [
    {
  "title": "PowerCheck Interface",
  "hash": "",
  "sentences": [
    "PowerCheck Interface",
    "NUGU스마트홈 PowerCheck Interface는 NUGU스마트홈에 등록된 SmartHomeDevice의 전력량관련 조회방식에 대한 설명입니다. 스마트홈 기기의 사용전력량, 목표전력량 등의 조회 기능을 지원합니다."
  ]
},
    {
  "title": "PowerCheck Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "PowerCheck Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "PowerCheck Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"PLUG\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyNameSuggestion\": \"모니터\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerCheck\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "SmartHomeDevice Attribute Parameters",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다. customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "PowerCheck Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU스마트홈 PowerCheck Capability는 소모 전력량을 조회하는 AskPower와 목표사용전력량을 조회하는 AskPowerTarget Directive를 지원합니다."
  ]
},
    {
  "title": "PowerCheck Interface > AskPower",
  "hash": "#askpower",
  "sentences": [
    "AskPower",
    "Directive 정보",
    "SmartHomeDevice의 사용 전력량을 조회한다.",
    "Capability : PowerCheck",
    "Directive : AskPower",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 전력사용량 조회해줘",
    "아리아, {FriendlyName} 전기사용량 조회해줘.",
    "아리아, {DeviceType} 이번 달 전력사용량 조회."
  ]
},
    {
  "title": "PowerCheck Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/PowerCheck/directives/AskPower)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"PowerCheck\",\n      \"smartHomeDirective\": \"AskPower\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"PLUG\",\n        \"deviceTypeName\": \"example_device_type\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"모니터\",\n        \"manufacturer\": \"example_manufacturer\",\n        \"supportedCapabilities\": {\n          \"powerCheck\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "PowerCheck Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"powerConsumption\": \"30\", // directive 마다 필요한 property 채워서 응답.\n        \"month\": \"3\"\n      }\n    }\n  ]\n}",
    "AskPower Directive Response parametert details",
    "powerConsumption | SmartHomeDevice의 전력사용량값. kW 단위로 응답해야 합니다. | double",
    "month | 몇월 전력사용량인지에 대한 정보입니다. | int"
  ]
},
    {
  "title": "PowerCheck Interface > AskPowerTarget",
  "hash": "#askpowertarget",
  "sentences": [
    "AskPowerTarget",
    "Directive 정보",
    "SmartHomeDevice에 설정된 목표전력사용량을 조회한다.",
    "Capability : PowerCheck",
    "Directive : AskPowerTarget",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 목표 전력사용량 조회해줘",
    "아리아, {FriendlyName} 설정된 목표 전기사용량 조회해줘.",
    "아리아, {DeviceType} 이번 달 목표 전력사용량 조회."
  ]
},
    {
  "title": "PowerCheck Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/PowerCheck/directives/AskPowerTarget)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"PowerCheck\",\n      \"smartHomeDirective\": \"AskPowerTarget\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"PLUG\",\n        \"deviceTypeName\": \"example_device_type\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"모니터\",\n        \"manufacturer\": \"example_manufacturer\",\n        \"supportedCapabilities\": {\n          \"powerCheck\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "PowerCheck Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"targetPowerConsumption\": \"300\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "AskPowerTarget Directive Response parameter details",
    "targetPowerConsumption | SmartHomeDevice에 설정된 목표 전력 사용량 값.kW 단위로 응답해야 합니다. | double"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/powercontrol-interface",
  "order": 90,
  "indexes": [
    {
  "title": "PowerControl Interface",
  "hash": "",
  "sentences": [
    "PowerControl Interface",
    "NUGU 스마트홈 PowerControl Capability Interface는 NUGU 스마트홈에 등록된 SmartHomeDevice의 전원제어방식에 대한 설명입니다. 전원을 켜고 끄거나 동작을 시작, 중지할 수 있는 모든 종류의 SmartHomeDevice를 지원합니다."
  ]
},
    {
  "title": "PowerControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "PowerControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "PowerControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"LIGHT\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyNameSuggestion\": \"안방\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
},
    {
  "title": "PowerControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU SmartHome PowerControl Capability는 전원을 켜는 TurnOn, 전원을 끄는 TurnOff Directive를 지원합니다."
  ]
},
    {
  "title": "PowerControl Interface > TurnOn",
  "hash": "#turnon",
  "sentences": [
    "TurnOn",
    "Directive 정보",
    "SmartHomeDevice의 전원을 켠다.",
    "Capability : PowerControl",
    "Directive : TurnOn",
    "Voice Command",
    "아리아. {FriendlyName} {DeviceType} 전원 켜줘.",
    "아리아, {FriendlyName} 켜줘",
    "아리아, {DeviceType} 켜"
  ]
},
    {
  "title": "PowerControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "(POST, /nugu/v1/capabilities/PowerControl/directives/TurnOn)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"PowerControl\",\n      \"smartHomeDirective\": \"TurnOn\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"deviceTypeName\": \"example_device_type\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"안방\",\n        \"manufacturer\": \"example_manufacturer\",\n        \"supportedCapabilities\": {\n          \"powerControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "PowerControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {} // directive 마다 필요한 property 채워서 응답\n    }\n  ]\n}"
  ]
},
    {
  "title": "PowerControl Interface > TurnOff",
  "hash": "#turnoff",
  "sentences": [
    "TurnOff",
    "Directive 정보",
    "SmartHomeDevice의 전원을 끈다.",
    "Capability : PowerControl",
    "Directive : TurnOff",
    "Voice Command",
    "아리아. {FriendlyName} {DeviceType} 전원 꺼줘.",
    "아리아, {FriendlyName} 꺼줘",
    "아리아, {DeviceType} 꺼"
  ]
},
    {
  "title": "PowerControl Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "(POST, /nugu/v1/capabilities/PowerControl/directives/TurnOff)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"PowerControl\",\n      \"smartHomeDirective\": \"TurnOff\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"deviceTypeName\": \"example_device_type\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"안방\",\n        \"manufacturer\": \"example_manufacturer\",\n        \"supportedCapabilities\": {\n          \"powerControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "PowerControl Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {} // directive 마다 필요한 property 채워서 응답\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/private-play",
  "order": 111,
  "indexes": [
    {
  "title": "Private Play",
  "hash": "",
  "sentences": [
    "Private Play",
    "NUGU biz kit의 Biz 전용 디바이스와, 등록된 Biz 사용자(이용 권한을 획득한 사용자)만 이용할 수 있는 Play입니다. Biz 사용자에게 등록된 Private Play는 NUGU App에서 확인할 수 있으며, 일반 사용자에게는 노출되지 않습니다."
  ]
},
    {
  "title": "Private Play > 1. Private Play 등록 하기",
  "hash": "#1-private-play-등록-하기",
  "sentences": [
    "1. Private Play 등록 하기",
    "Play Builder에서 만든 Play를, NUGU play kit에서 Private Play 속성으 등록 할 수 있습니다. Play 등록 시, Play 공개 유형을 “Private”으로 선택하여 등록하면 됩니다. 자세한 내용은",
    "Play 정보 등록",
    "참고하세요."
  ]
},
    {
  "title": "Private Play > 2. Biz 사용자의 Private play 확인",
  "hash": "#2-biz-사용자의-private-play-확인",
  "sentences": [
    "2. Biz 사용자의 Private play 확인",
    "배포된 Private Play는 Biz 사용자의 NUGU APP 화면에서 다음과 같은 방법으 확인 가능합니다."
  ]
},
    {
  "title": "Private Play > 1) NUGU APP의 NUGU play 목록에서 확인",
  "hash": "#1-nugu-app의-nugu-play-목록에서-확인",
  "sentences": [
    "1) NUGU APP의 NUGU play 목록에서 확인",
    "TID 기준으로 등록된 Biz 사용자의 APP화면에 NUGU play 목록을 펼쳐 볼 때 해당 Private Play를 확인 할 수 있습니다. 해당 Private Play는 초대 받아 권한을 받은 사용자에게만 노출됩니다.",
    "Play를 클릭하여, 해당 Play의 상세정보를 확인 할 수 있습니.",
    "해당 Play에 대한 기본적인 정보의 조회가 가능하며, OAuth 계정 연동을 허용한 Play의 경우, “계정 연동” 버튼로 사용자의 계정을 로그인하여 Play를 이용할 수 있습니다. 자세한 내용은 OAuth 2.0 연동하기 를 참고해주세요."
  ]
}
  ]
},
  {
  "url": "/document-staging/reference",
  "order": 209,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/play-registration-and-review/register-a-play",
  "order": 97,
  "indexes": [
    {
  "title": "Play 정보 등록",
  "hash": "",
  "sentences": [
    "Play 정보 등록",
    "개발 완료된 Play는",
    "Developers Console",
    ">",
    "Play kit",
    ">",
    "Play 관리",
    ">",
    "Play 등록",
    "버튼을 통해 Play를 등록하고 관련 정보를 입력해야 합니다.",
    "⁣1.",
    "Play 등록하기",
    "버튼을 클릭하세요. Play Builder에서 개발한 Play 리스트 팝업이 표시됩니다.",
    "⁣2. 등록할 Play의 타입을 결정하고",
    "다음",
    "버튼을 클릭하여 Play의 Snapshot 버전을 선택하는 화면으로 이동합니다. 일반적인 Play는 Custom 타입이며, Play Builder에 smarthome play 타입으로 만들어진 Play는 Pre-Built-in입니다.",
    "Smarthome 타입의 경우 Pre-built Play Builder로 스마트홈 Play 만들기를 참고하세요.",
    "⁣3. 등록할 Snapshot 버전을 선택하고 확인 버튼을 클릭하여, Play 이름/ID 생성 화면으로 이동합니다.",
    "⁣4. 사용자에게 노출될 Play 서비스명과, 고유한 Play ID를 생성합니다.",
    "Play 서비스명은 Play Builder에서의 Play Name과 다르게 Developers에서 지정하는 이름이며, NUGU APP을 포함한 서비스 화면 노출 용도로 활용됩니다.",
    "Play 서비스 ID는 개별 Play를 구분하는 고유ID이며, 한 번 저장한 후에는 변경이 불가능합니다. Play 서비스ID는 reverse domain name 표기 형태로 입력해야 하며, 다른 Play에서 이미 사용 중인 서비스ID는 등록할 수 없습니다. (입력 예 : com.example.myPlay)",
    "Play 서비스명과 Play 서비스 ID를 입력하여 넘어가면,  배포를 위한 4단계의 정보 입력 화면이 생성됩니다. Play 정보 등록은 총 4단계이며, 1단계 기본 정보 입력 → 2단계 연동 정보 입력 → 3단계 배포/심사 정보 → 4단계 등록/심사 요청의 순서로 진행됩니다."
  ]
},
    {
  "title": "Play 정보 등록 > 기본 정보",
  "hash": "#기본-정보-",
  "sentences": [
    "기본 정보",
    "Play 기본 정보는 Play 관련 필수 정보로 아래의 내용들을 등록해야 합니다. 입력을 완료하면",
    "다음",
    "버튼을 클릭합니다.",
    "① Play 공개 유형",
    "Play 타입은 Public Play와 Private Play로 구분됩니다. Play의 서비스 대상이 NUGU 전체 회원일 경우에는 Public Play를, Play 사용 권한을 부여 받은 특정인 또는 개인을 대상으로 할 경우에는 Private Play를 선택합니다. Play 타입은 심사 승인 이후에는 변경이 불가능하므로 신중하게 결정해야 합니다. Private Play 타입의 Play는 NUGU biz kit에서 사용합니다.",
    "②  Play 호출 이름",
    "사용자가 Play를 시작하기 위해 부를 때 사용하는 이름입니다. 반드시 3자 이상의 한글로만 등록해야 하며, 가능하면 8자 이하로 기억하고 부르기 쉬운 단어를 사용하는 것이 좋습니다. Play 호출 이름은 Play 심사 항목이기 때문에 신청하신 이름을 그대로 사용할 수 있다고 보장하지 않습니다. 널리 쓰이는 일반적인 이름이나 타사명, 서비스에 해당하는 용어 또는 이와 유사한 호출 이름은 사용할 수 없기 때문에,심사를 하면서 운영자가 별도로 연락을 드릴 수도 있습니다. 효과적인 호출 이름을 등록할 수 있도록 먼저 [",
    "작성 가이드 보기",
    "]를 읽어보신 후에 등록 절차를 진행해주시길 권장합니다.",
    "③ Play 설명",
    "등록하고자 하는 Play에 대한 설명(서비스 설명)을 기재합니다. Play 심사 시 Play에 대해서 파악을 할 수 있는 영역이므로, 자신의 Play의 특징이나 서비스 콘셉트 등을 쉽게 파악할 수 있도록 작성해 주세요. 설명은 최대 200자까지 입력할 수 있습니다.",
    "④ 제작사명",
    "Play를 개발한 주체(개인, 회사 또는 단체)의 이름 또는 별칭을 입력합니다. 등록된 내용은 NUGU App과 추후 Play Ground에 노출됩니다. 법인의 경우에는 Play 승인 과정에서 관련 자료(예: 법인 등록증, 사업자등록증 등)를 요청할 수 있습니다. 제작사명은 최대 30자까지 입력할 수 있습니다.",
    "⑤ 담당자 이메일",
    "연락 가능한 서비스 담당자의 이메일 정보를 입력합니다. 입력한 이메일로 Play에 대한 주요 내용(심사 승인, 반려, 상태 변경, 주요 공지)이 전달됩니다. 법인인 경우에는 개인 이메일 보다는 개발, CS 등 폭넓은 영역에서 의견을 받을 수 있는 대표 이메일 계정을 입력해주시는 편이 좋습니다."
  ]
},
    {
  "title": "Play 정보 등록 > 호출 이름 정의하기",
  "hash": "#호출-이름-정의하기-",
  "sentences": [
    "호출 이름 정의하기"
  ]
},
    {
  "title": "Play 정보 등록 > Play 호출 이름의 필수 조건",
  "hash": "#play-호출-이름의-필수-조건",
  "sentences": [
    "Play 호출 이름의 필수 조건",
    "Play 호출 이름 정의 시 다음의 조건을 만족해야 합니다.",
    "3음절 이상 8음절 이하여야 합니다.",
    "하나의 Play에는 하나의 호출 이름만 지정합니다.",
    "서술어가 포함된 문장은 사용하지 않습니다. 예외적으로, Play 개발자가 보유한 상표명이나 지적재산권이 있을 경우 심사 후 허용이 가능합니다. (예: 야놀자)",
    "단체 또는 개인의 지적재산권을 침해하지 않아야 합니다.",
    "서비스 기능을 유추할 수 없는 호출 이름은 불가합니다.",
    "기존 NUGU에서 제공하고 있는 도메인명은 사용할 수 없습니다.\n예) 날씨, 알람, 음악, 쇼핑, 타이머, 에이에스엠알, 마이큐앤에이, 감성대화, 무드등, 뉴스, 라디오",
    "이미 사용되고 있는 서비스명/브랜드명은 사용할 수 없습니다.\n예) 구글캘린더, 도미노피자, 멜론, 뮤직메이트, 비비큐, 비티비연동, 삼성증권, 십일번가, 케이비국민은행, 케이이비하나은행, 팟빵, 홈픽택배, 누구",
    "NUGU 에이전트의 호출어는 사용할 수 없습니다. (예: 아리아, 팅커벨)",
    "알파벳, 숫자, 기호가 사용된다면 모두 한글발음으로 사용합니다.(기호는 가능한 한 사용하지 않을 것을 권장합니다.)",
    "조사로 끝나는 단어는 허용하지 않습니다. “~에게, ~에서” 등의 조사가 포함될 경우 NUGU 기능에 영향을 줄 수 있습니다.",
    "호칭, 일반 명사, 범용 문구의 단독 사용은 허용하지 않습니다. 단, 조합되는 경우는 가능합니다.\n    \n      임의의 단어나, 문구의 추가(예: 김동진의 팟캐스트)\n      고유의 브랜드 이름을 추가(예: 도미노피자, 미스터피자)",
    "임의의 단어나, 문구의 추가(예: 김동진의 팟캐스트)",
    "고유의 브랜드 이름을 추가(예: 도미노피자, 미스터피자)",
    "기존 Play명과 중복되지 않아야 합니다.",
    "사용 불가한 호출 이름과 유사 발음으로 인식될 수 있는지 확인합니다.\n예) 으막(“음악”이라는 NUGU에서 제공하고 있는 도메인명으로 인식될 수 있습니다. 또한 도메인명은 호출이름으로 사용할 수 없습니다.",
    "불쾌감을 줄 수 있는 단어(비속어, 욕설 등)는 사용할 수 없습니다. 이러한 단어는 승인 심사를 통해 거절될 수 있습니다",
    "Play 호출 이름은 위 조건을 기준으로 사용 승인 심사를 진행하게 되며, 조건에 적합하지 않은 경우에는 승인 허가가 거절될 수 있습니다.",
    "또한, 각 사안의 예외 상황도 고려하여 심사하고 있음을 밝힙니다."
  ]
},
    {
  "title": "Play 정보 등록 > 권장 사항",
  "hash": "#권장-사항",
  "sentences": [
    "권장 사항",
    "다음의 사항을 참고하여 Play 호출 이름 작성하기를 권장합니다.",
    "호출 이름이 브랜드 또는 지적 자산에 해당하는 고유한 이름(예: “스타벅스”, “멜론”)이어야 하지 않는다면, 해당 Play의 서비스 기능을 이름에 포함시켜 더 적합한 호출 이름을 제공할 수 있도록 합니다.\n    \n      홈픽택배, 11번가 쇼핑, 데일리브리핑, 오늘의 운세",
    "홈픽택배, 11번가 쇼핑, 데일리브리핑, 오늘의 운세",
    "Play 호출 이름을 발화한 후 이어서 발화하는 “오픈”, ”열어”, ”시작”, ”스타트”, ”실행” 등의 Intent를 원활하게 발음할 수 있는 이름으로 정하는 것이 좋습니다."
  ]
},
    {
  "title": "Play 정보 등록 > 연동 정보",
  "hash": "#연동-정보-",
  "sentences": [
    "연동 정보",
    "사용자에게 제공할 Play 타입을 선택하고, 제공하려는 Play의 사용자 계정이 NUGU 사용자 계정과 연결이 필요할 경우 계정 연동에 관련된 정보를 입력합니다.",
    "계정 연동 여부(OAuth 연동 여부)",
    "사용자 계정 체계를 필요로 하지 않는 Play 서비스라면, [미사용]을 선택하면 됩니다.",
    "계정 연동 여부(OAuth 연동 여부)",
    "제공하려는 Play의 사용자 계정과 NUGU 사용자 계정의 연결이 필요할 경우, 계정 연동에서 [사용]을 선택하고, 다음 정보를 등록합니다. 계정 연동에 대한 자세한 내용은",
    "[계정 연동 가이드 보기]",
    "를 참고하세요.",
    "ⓐ 로그인 URL",
    "사용자가 계정을 연동할 수 있도록 이동하는 URL을 등록합니다.",
    "ⓑ 클라이언트ID",
    "계정 인증 시 HTTP 요청에 필요한 클라이언트ID를 입력합니다. 클라이언트 ID는 인증 서버 구축 시 생성한 값입니다.",
    "ⓒ 개인정보정책제공 URL",
    "제공하는 Play의 개인 정보 보호 정책 관련 내용을 제공하는 페이지 URL을 입력합니다. 이 내용은 NUGU App 및 추후 Play Ground에서 보여집니다.",
    "ⓓ 권한 범위",
    "사용자 계정 연결 시 발급되는 Access Token의 사용 범위를 추가합니다. 선택 항목이며, 최대 5개까지 입력 가능합니다.",
    "ⓔ Redirect URL",
    "계정 승인 절차 완료 후 이동하는 페이지 URL(HTTPS)를 표시합니다.(기본 제공)",
    "ⓕ Access Token URL",
    "Access Token을 발급 받을 수 있는 URL을 입력합니다.",
    "ⓖ Access token 재발급 URL(선택)",
    "Access Token을 갱신할 수 있는 URL을 입력합니다.",
    "ⓗ 클라이언트 secret",
    "Access Token을 획득 시 HTTP 요청에 필요한 클라이언트 secret을 입력합니다. 클라이언트 secret은 인증 서버를 구축할 때 생성한 값입니다.",
    "ⓘ 클라이언트 인증 정보 전송 방식(선택)",
    "인증 서버의 인터페이스 구현에 맞는 클라이언트 인증 정보 전송 방식을 선택합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/reference/register-icon",
  "order": 212,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/release-note",
  "order": 208,
  "indexes": [
    {
  "title": "Release note",
  "hash": "",
  "sentences": [
    "Release note"
  ]
},
    {
  "title": "Release note > Change Log",
  "hash": "#change-log",
  "sentences": [
    "Change Log",
    "Android, iOS, Linux 의 자세한 변경사항은 Github 에서 확인하실 수 있습니다."
  ]
},
    {
  "title": "Release note > 2022-11-21",
  "hash": "#2022-11-21",
  "sentences": [
    "2022-11-21",
    "Capability interface - Display, ASR, Text, PhoneCall, Message, MediaPlayer, Routine, Message 업데이트"
  ]
},
    {
  "title": "Release note > 2021-10-01",
  "hash": "#2021-10-01",
  "sentences": [
    "2021-10-01",
    "시작하기(iOS)에 권장 버전 정보 추가",
    "테스트 환경 설정(iOS) 가이드 주소값 수정",
    "Platform 에 따른 Capability interface 지원 현황(iOS) 수정"
  ]
},
    {
  "title": "Release note > 2021-08-10",
  "hash": "#2021-08-10",
  "sentences": [
    "2021-08-10",
    "템플릿 내 누구버튼 컬러 변경(Android) 가이드 추가",
    "시작하기(iOS) 업데이트",
    "iOS 구성요소 다이어그램, 컴포넌트 설명 업데이트"
  ]
},
    {
  "title": "Release note > 2021-07-14",
  "hash": "#2021-07-14",
  "sentences": [
    "2021-07-14",
    "시작하기(iOS) 업데이트",
    "NUGU 서비스 관리 web server 연동(iOS) 변경 사항 업데이트",
    "NUGU Display의 노출과 제어(iOS) 변경 사항 업데이트",
    "NUGU 사용자 인터페이스(iOS) 변경 사항 업데이트",
    "Dark Mode 지원(iOS) 가이드 추가",
    "Dark Mode 지원(Android) 가이드 추가",
    "TemplateHandler(Android) 변경 사항 업데이트"
  ]
},
    {
  "title": "Release note > 2021-06-02",
  "hash": "#2021-06-02",
  "sentences": [
    "2021-06-02",
    "Capability interface - Location, Extension, Bluetooth, Mic, Screen, Battery, Sound, Message 업데이트"
  ]
},
    {
  "title": "Release note > 2021-05-31",
  "hash": "#2021-05-31",
  "sentences": [
    "2021-05-31",
    "Capability interface - ASR 1.6 업데이트",
    "Capability interface - Chips 1.2 업데이트",
    "Capability interface - Display 1.7 업데이트"
  ]
},
    {
  "title": "Release note > 2021-05-20",
  "hash": "#2021-05-20",
  "sentences": [
    "2021-05-20",
    "체험판과 정식판 안내 추가",
    "체험판 신청하기 절차 안내 추가",
    "Authentication NUGU계정 미사용, 체험판 안내 추가",
    "시작하기(iOS) 체험판 안내 추가",
    "시작하기(Android) 체험판 안내 추가",
    "시작하기(Linux) 체험판 안내 추가"
  ]
},
    {
  "title": "Release note > 2021-03-30",
  "hash": "#2021-03-30",
  "sentences": [
    "2021-03-30",
    "iOS 1.0 으로 업그레이드 문서 추가"
  ]
},
    {
  "title": "Release note > 2021-03-25",
  "hash": "#2021-03-25",
  "sentences": [
    "2021-03-25",
    "Capability interface - AudioPlayer 1.6 업데이트",
    "Capability interface - ASR 1.5 업데이트",
    "Capability interface - Message 1.4 업데이트",
    "Capability interface - Routine 추가",
    "Capability interface - Utilitity 추가"
  ]
},
    {
  "title": "Release note > 2021-03-11",
  "hash": "#2021-03-11",
  "sentences": [
    "2021-03-11",
    "시작하기(iOS) 변경 사항 업데이트",
    "NUGU 서비스 관리 web server 연동(iOS) 변경 사항 업데이트"
  ]
},
    {
  "title": "Release note > 2021-02-15",
  "hash": "#2021-02-15",
  "sentences": [
    "2021-02-15",
    "NUGU 음성인식 사용하기(Android) 업데이트"
  ]
},
    {
  "title": "Release note > 2021-02-01",
  "hash": "#2021-02-01",
  "sentences": [
    "2021-02-01",
    "테스트 환경 설정(iOS) 가이드 주소값 수정"
  ]
},
    {
  "title": "Release note > 2021-01-15",
  "hash": "#2021-01-15",
  "sentences": [
    "2021-01-15",
    "NUGU 사용자 인터페이스(iOS) 가이드 추가"
  ]
},
    {
  "title": "Release note > 2021-01-14",
  "hash": "#2021-01-14",
  "sentences": [
    "2021-01-14",
    "NUGU 사용자 인터페이스(Android) 가이드 추가"
  ]
},
    {
  "title": "Release note > 2021-01-06",
  "hash": "#2021-01-06",
  "sentences": [
    "2021-01-06",
    "Linux System Requirements 지원 platform 업데이트",
    "Linux 구성요소 다이어그램, 컴포넌트 설명, 의존성 목록 업데이트",
    "Linux 시작하기 NUGU 음성인식 사용 example 업데이트",
    "Capability Interface - Extension Linux example 추가",
    "Capability Interface - Chips Linux example 추가"
  ]
},
    {
  "title": "Release note > 2021-01-04",
  "hash": "#2021-01-04",
  "sentences": [
    "2021-01-04",
    "Android 구성요소 중 NuguUXKit 설명 업데이트",
    "NUGU Display의 노출과 제어(Android) 가이드 추가",
    "Display Template(UX) 가이드 추가"
  ]
},
    {
  "title": "Release note > 2020-12-29",
  "hash": "#2020-12-29",
  "sentences": [
    "2020-12-29",
    "iOS 구성요소 다이어그램, 컴포넌트 설명 업데이트",
    "NUGU Display의 노출과 제어(iOS) 가이드 추가"
  ]
},
    {
  "title": "Release note > 2020-12-23",
  "hash": "#2020-12-23",
  "sentences": [
    "2020-12-23",
    "iOS Configuration 파일 설정하기 가이드 추가",
    "Configuration 파일 기반으로 iOS 로그인 추가 가이드 수정",
    "Android Configuration 파일 설정하기 가이드 추가",
    "Configuration 파일 기반으로 Android 로그인 추가 가이드 수정"
  ]
},
    {
  "title": "Release note > 2020-12-14",
  "hash": "#2020-12-14",
  "sentences": [
    "2020-12-14",
    "AudioPlayer interface 1.4 -> 1.5 업데이트",
    "Display interface 누락된 directive json 추가",
    "ASR interface 1.3 -> 1.4 업데이트",
    "Text interface 1.3 -> 1.5 업데이트",
    "MediaPlayer interface 1.1 추가 업데이트"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/releases",
  "order": 107,
  "indexes": [
    {
  "title": "Release note",
  "hash": "",
  "sentences": [
    "Release note"
  ]
},
    {
  "title": "Release note > Version 2.1.0",
  "hash": "#version-210",
  "sentences": [
    "Version 2.1.0",
    "업데이트일 : 2021년 10월 21일"
  ]
},
    {
  "title": "Release note > 1. 2021년 Developers 고도화 내용 현행화",
  "hash": "#1-2021년-developers-고도화-내용-현행화",
  "sentences": [
    "1. 2021년 Developers 고도화 내용 현행화",
    "NUGU biz kit 고도화에 의한 메뉴 위치, UI에 대한 내용 전체 현행화"
  ]
},
    {
  "title": "Release note > 2. 스마트홈 Play 등록, 테스트 가이드 추가",
  "hash": "#2-스마트홈-play-등록-테스트-가이드-추가",
  "sentences": [
    "2. 스마트홈 Play 등록, 테스트 가이드 추가",
    "Play 정보 등록 (smarthome play) 내용 추가 : 자세히 알아보기"
  ]
},
    {
  "title": "Release note > Version 2.0.0",
  "hash": "#version-200",
  "sentences": [
    "Version 2.0.0",
    "업데이트일 : 2021년 8월 12일"
  ]
},
    {
  "title": "Release note > 1. 향상/변경된 기능",
  "hash": "#1-향상변경된-기능",
  "sentences": [
    "1. 향상/변경된 기능",
    "NUGU biz kit 고도화에 의한 용어, 기능변경 및 Biz API 지원 추가 : 자세히 알아보기"
  ]
},
    {
  "title": "Release note > Version 1.9.0",
  "hash": "#version-190",
  "sentences": [
    "Version 1.9.0",
    "업데이트일 : 2019년 12월 19일"
  ]
},
    {
  "title": "Release note > 1. 새로운 기능",
  "hash": "#1-새로운-기능",
  "sentences": [
    "1. 새로운 기능",
    "Fallback 시, 사용자 발화를 Backend proxy에서 분석할 수 있도록 _UNRESOLVED_ Entity 제공"
  ]
},
    {
  "title": "Release note > 2. 향상/변경된 기능",
  "hash": "#2-향상변경된-기능",
  "sentences": [
    "2. 향상/변경된 기능",
    "Directive로 응답하는 Action의 응답 유형에 ‘대기’를 허용"
  ]
},
    {
  "title": "Release note > Version 1.8.0",
  "hash": "#version-180",
  "sentences": [
    "Version 1.8.0",
    "업데이트일 : 2019년 11월 4일"
  ]
},
    {
  "title": "Release note > 1. 향상/변경된 기능",
  "hash": "#1-향상변경된-기능-1",
  "sentences": [
    "1. 향상/변경된 기능",
    "Action 목록에서 Root Action 기준으로 접기 기능 추가",
    "Action name 글자 수 제한 확",
    "Root Action에서 정의한 예외 상황(exception code)가 Branch에서 노출되도록 변경",
    "Directive를 사용할 때도 ‘대기’를 output 유형으로 선택할 수 있도록 변"
  ]
},
    {
  "title": "Release note > 2. 버그 수정",
  "hash": "#2-버그-수정",
  "sentences": [
    "2. 버그 수정",
    "파라미터에 조사 적용 시, 발화옵션 태그를 무시하도록 변경",
    "훈련 데이터 검증 도구가 발견한 중의성 문장이 없는 경우, 안내 문구 수"
  ]
},
    {
  "title": "Release note > Version 1.7.0",
  "hash": "#version-170",
  "sentences": [
    "Version 1.7.0",
    "업데이트일 : 2019년 9월 26일"
  ]
},
    {
  "title": "Release note > 1. 새로운 기능",
  "hash": "#1-새로운-기능-1",
  "sentences": [
    "1. 새로운 기능",
    "실패 발화 분석 도구에 용언 분석 기능 추가 : 자세히 알아보기"
  ]
},
    {
  "title": "Release note > 2. 향상/변경된 기능",
  "hash": "#2-향상변경된-기능-1",
  "sentences": [
    "2. 향상/변경된 기능",
    "Action명 수정",
    "Action 목록에서 Backend Proxy/Directive 사용 여부 표시"
  ]
},
    {
  "title": "Release note > Version 1.6.0",
  "hash": "#version-160",
  "sentences": [
    "Version 1.6.0",
    "업데이트일 : 2019년 8월 20일"
  ]
},
    {
  "title": "Release note > 1. 새로운 기능",
  "hash": "#1-새로운-기능-2",
  "sentences": [
    "1. 새로운 기능",
    "Play 빌드 Export/Import 기능 추가"
  ]
},
    {
  "title": "Release note > 2. 향상/변경된 기능",
  "hash": "#2-향상변경된-기능-2",
  "sentences": [
    "2. 향상/변경된 기능",
    "저장 속도 향상"
  ]
},
    {
  "title": "Release note > 3. 버그 수정",
  "hash": "#3-버그-수정",
  "sentences": [
    "3. 버그 수정",
    "좌측 LNB 화살표 방향 오류 수정",
    "Built-in Action breadcrumbs 링크 오류 수정"
  ]
},
    {
  "title": "Release note > Version 1.5.0",
  "hash": "#version-150",
  "sentences": [
    "Version 1.5.0",
    "업데이트일 : 2019년 8월 8일"
  ]
},
    {
  "title": "Release note > 1. 새로운 기능",
  "hash": "#1-새로운-기능-3",
  "sentences": [
    "1. 새로운 기능",
    "Play 내에서 공통으로 사용할 수 있는 Global Utterance Parameter 추가"
  ]
},
    {
  "title": "Release note > 2. 향상/변경된 기능",
  "hash": "#2-향상변경된-기능-3",
  "sentences": [
    "2. 향상/변경된 기능",
    "Welcome Action에서 Common Action을 output으로 선택할 수 있도록 변경",
    "Parameter에서 Array 형식 처리할 수 있도록 변경",
    "User Utterance Model Import시 Validation",
    "Entity 허용 문자에 . (dot) 추가",
    "Built-in Entity type 상세화면에서 동의어 노출",
    "NLU function 타입을 ‘DATE’에서 ‘DATETIME’으로 변경"
  ]
},
    {
  "title": "Release note > 3. 버그 수정",
  "hash": "#3-버그-수정-1",
  "sentences": [
    "3. 버그 수정",
    "발화옵션 자동완성 ‘한글 숫자 읽기’ 자동입력 오류 수정",
    "Action 생성 페이지에서, Intent 없을 경우 멈추는 현상 수정"
  ]
},
    {
  "title": "Release note > Version 1.4.0",
  "hash": "#version-140",
  "sentences": [
    "Version 1.4.0",
    "업데이트일 : 2019년 7월 11일"
  ]
},
    {
  "title": "Release note > 1. 새로운 기능",
  "hash": "#1-새로운-기능-4",
  "sentences": [
    "1. 새로운 기능",
    "실패 발화 분석 도구 추가 : 자세히 알아보기"
  ]
},
    {
  "title": "Release note > 2. 향상/변경된 기능",
  "hash": "#2-향상변경된-기능-4",
  "sentences": [
    "2. 향상/변경된 기능",
    "Translator, Normalizer의 Source/Target 최대 글자수를 50에서 200으로 변경"
  ]
},
    {
  "title": "Release note > 3. 버그 수정",
  "hash": "#3-버그-수정-2",
  "sentences": [
    "3. 버그 수정",
    "Prompt 입력창에서 백스페이스 글자 삭제 버그 수정",
    "Translator 이름 중복 버그 수정 및 정렬 수정",
    "학습 문장 분석 도구 내 Intent 미노출 현상 수정",
    "Play 구조에서 Common Action 하위 브랜치 노출"
  ]
},
    {
  "title": "Release note > Version 1.3.0",
  "hash": "#version-130",
  "sentences": [
    "Version 1.3.0",
    "업데이트일 : 2019년 4월 23일"
  ]
},
    {
  "title": "Release note > 1. 새로운 기능",
  "hash": "#1-새로운-기능-5",
  "sentences": [
    "1. 새로운 기능",
    "User Utterance Model 학습 문장 분석 도구 추가 : 자세히 알아보기",
    "합성음 목소리 ‘벨’ 추가 : 자세히 알아보기"
  ]
},
    {
  "title": "Release note > 2. 향상/변경된 기능",
  "hash": "#2-향상변경된-기능-5",
  "sentences": [
    "2. 향상/변경된 기능",
    "자동 처리 조사 추가 ‘예요/이에요’",
    "Common Action 내에서 Utterance Parameter 정의할 수 있도록 수정",
    "학습문장 Export 파일 이름 변경",
    "Action의 Prompt 하나를 Silent Prompt로 지정하면, 모두 Silent Prompt로 변경되도록 수정",
    "Root Common Action끼리 Parameter 공유되지 않도록 변경"
  ]
},
    {
  "title": "Release note > 3. 버그 수정",
  "hash": "#3-버그-수정-3",
  "sentences": [
    "3. 버그 수정",
    "Intent 리스트 최종 수정 시간이 정확히 표시 안되는 현상 수정",
    "자동완성 UI 수정",
    "일부 단어 Entity 검색 안되는 버그 수정",
    "여러 개의 Response Filter를 적용할 때 멈추는 현상 수정"
  ]
},
    {
  "title": "Release note > Version 1.2.0",
  "hash": "#version-120",
  "sentences": [
    "Version 1.2.0",
    "업데이트일 : 2019년 3월 12일"
  ]
},
    {
  "title": "Release note > 1. 새로운 기능",
  "hash": "#1-새로운-기능-6",
  "sentences": [
    "1. 새로운 기능",
    "Action 중복 생성을 줄이기 위한 Common Action 추가 : 자세히 알아보기",
    "Play 내에서 공통으로 사용할 수 있는 Global Backend Parameter 추가 : 자세히 알아보기",
    "Response에서 효과음 추가 : 자세히 알아보기"
  ]
},
    {
  "title": "Release note > 2. 향상/변경된 기능",
  "hash": "#2-향상변경된-기능-6",
  "sentences": [
    "2. 향상/변경된 기능",
    "Utterance Parameter에 Entity mapping 방식 변경 : 자세히 알아보기",
    "Entity value 및 동의어 입력 시 허용 특수기호 추가\n\n    ’ (Apostrophe), & (Ampersand), - (Hyphen)",
    "저장 버튼 동작 수정",
    "Entity value 및 동의어 입력 시 띄어쓰기 허용",
    "여러 Prompt 등록 후 하나를 Silent prompt로 지정하면 모두 Silent prompt로 변경",
    "히스토리에 Snapshot ID 노출",
    "Exception prompt 3개 이상 입력 허용"
  ]
},
    {
  "title": "Release note > 3. 버그 수정",
  "hash": "#3-버그-수정-4",
  "sentences": [
    "3. 버그 수정",
    "Entity Type의 BID_QT에 숫자 보강",
    "Utterance parameter에 mapping할 Entity 사라지는 현상 수정"
  ]
},
    {
  "title": "Release note > Version 1.1.0",
  "hash": "#version-110",
  "sentences": [
    "Version 1.1.0",
    "업데이트일 : 2018년 12월 13일"
  ]
},
    {
  "title": "Release note > 1. 새로운 기능",
  "hash": "#1-새로운-기능-7",
  "sentences": [
    "1. 새로운 기능",
    "멀티턴 대화 지원 (Response + Branch Action) : 자세히 알아보기",
    "AudioPlayer Interface용 Display Interface 추가 : 자세히 알아보기",
    "다른 Intent 에서 Entity type 더 가져오기 기능 추가 : 자세히 알아보기",
    "Silent Prompt : 자세히 알아보기"
  ]
},
    {
  "title": "Release note > 2. 향상/변경된 기능",
  "hash": "#2-향상변경된-기능-7",
  "sentences": [
    "2. 향상/변경된 기능",
    "Entity value 및 동의어 입력 시 특수기호 허용 제외\n\n    _ (Underbar)",
    "Entity value 및 동의어 입력 시 띄어쓰기 허용"
  ]
},
    {
  "title": "Release note > 3. 버그 수정",
  "hash": "#3-버그-수정-5",
  "sentences": [
    "3. 버그 수정",
    "Fallback 처리 되어야 하는 발화들이 특정 Custom Intent로 분석되는 현상 수정",
    "상세 페이지에서 Ctrl(Cmd) + A 키가 동작하지 않는 현상 수정"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/response-with-branch-actions",
  "order": 34,
  "indexes": [
    {
  "title": "Response + Branch Action (멀티턴 대화)",
  "hash": "",
  "sentences": [
    "Response + Branch Action (멀티턴 대화)",
    "지금까지는 Response 혹은 Branch Action만을 이용하여 대화를 구성하는 법을 알아보았습니다. 이렇게 만들어진 Play는 싱글턴의 대화만을 구성할 수 있습니다. Action Tree를 복잡하게 구성하여도 Tree의 끝 Action만 Response를 갖기 때문에 결국은 싱글턴의 대화만 이루어지며, 세션 안에서 여러 번의 싱글턴 대화를 반복할 뿐 기존 대화의 컨텍스트를 이어갈 수는 없습니다.",
    "그러나, Output의 세번째 유형 Response + Branch Action을 통해서는 컨텍스트를 이어 가는 멀티턴 대화를 구성할 수 있습니다. Response + Branch Action이 선택된 Action은 Response를 내보낸 뒤에 사용자의 발화를 다시 듣고, Branch Action 중 조건을 만족시키는 Action으로 이동합니다.",
    "Response + Branch Action는 세 요소로 구성됩니다.",
    "Response",
    "Branch Action",
    "Reprompt"
  ]
},
    {
  "title": "Response + Branch Action (멀티턴 대화) > Response의 특성",
  "hash": "#response의-특성",
  "sentences": [
    "Response의 특성",
    "Response + Branch Action의 Response는 대기 Prompt만 사용할 수 있습니다. 이 대기 Prompt 발화 후에는 세션 초기로 돌아가지 않고, 직전 사용자 발화 정보를 유지한 채 사용자 발화를 다시 듣는 대기상태로 이동합니다. 이 대기 상태에서 사용자가 새로운 Intent를 발화하거나 Entity만을 발화를 한 경우, 그 Intent/Entity가 precondition으로 지정된 Branch Action이 있는 지 순차적으로 탐색하여 조건을 만족시키는 Action으로 이동하게 됩니다."
  ]
},
    {
  "title": "Response + Branch Action (멀티턴 대화) > Branch Action의 특성",
  "hash": "#branch-action의-특성-",
  "sentences": [
    "Branch Action의 특성",
    "Response + Branch Action의 Branch Action은 Default 지정이 필수가 아닙니다. Branch Action의 precondition을 하나도 만족시키지 못한 경우 Default Branch로 이동하며, Default Branch가 없을 경우 Reprompt를 발화합니다.",
    "Branch Action을 만들 때, precondition으로 사용할 Entity가 첫 Intent에 없으면 Branch Action의 precondition을 정의할 수 없습니다. 이 경우, Utterance Parameter의 Entity mapping 팝업 창에서 ‘다른 Intent의 Entity Type 더 불러오기’ 버튼을 눌러, Play 내 모든 Entity Type을 가져 온 다음 원하는 Entity Type을 Utterance Parameter에 매핑하여 사용할 수 있습니다.",
    "다른 Intent에서 Entity type 더 불러와서 Utterance Parameter에 mapping을 한 후에는, 불러온 Intent 수정이 되지 않습니다. 해당 Intent를 수정하기 위해서는 Entity mapping을 끊어줘야 합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/routine",
  "order": 171,
  "indexes": [
    {
  "title": "Routine",
  "hash": "",
  "sentences": [
    "Routine",
    "루틴을 실행하기 위한 규격"
  ]
},
    {
  "title": "Routine > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.3 입니다.",
    "1.0 | 2020.11.10 | 규격 추가",
    "1.1 | 2020.11.13 | Context 의 actions 에 postDelayInMilliseconds 추가Start directive 의 actions 에 postDelayInMilliseconds 추가",
    "1.2 | 2020.12.10 | Context 의 routineActivity 에 INTERRUPTED 추가",
    "1.3 | 2022.10.11 | context와 Start directive에 routineId, routineType, routineListType 필드 추가muteDelayInMilliseconds, Move 디렉티브, MoveSucceeded/MoveFailed 이벤트 추가"
  ]
},
    {
  "title": "Routine > State Diagram",
  "hash": "#state-diagram",
  "sentences": [
    "State Diagram"
  ]
},
    {
  "title": "Routine > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface",
    "Routine 은 정해진 Action 을 SDK 내부에서 순차적으로 실행하며 Application 에서 처리할 별도의 interface 가 없습니다."
  ]
},
    {
  "title": "Routine > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Routine\": {\n    \"version\": \"1.3\",\n    \"token\": \"{{STRING}}\",\n    \"name\": \"{{STRING}}\",\n    \"routineId\": \"{{STRING}}\",\n    \"routineType\": \"{{STRING}}\",\n    \"routineListType\": \"{{STRING}}\",\n    \"routineActivity\": \"{{STRING}}\",\n    \"currentAction\": {{LONG}},\n    \"actions\": [\n      {\n        \"type\": \"{{STRING}}\",\n        \"text\": \"{{STRING}}\",\n        \"data\": { # object },\n        \"playServiceId\": \"{{STRING}}\",\n        \"token\": \"{{STRING}}\",\n        \"muteDelayInMilliseconds\": {{LONG}},\n        \"postDelayInMilliseconds\": {{LONG}},\n        \"actionTimeoutInMilliseconds\": {{LONG}}\n      }\n    ]\n  }\n}",
    "token | string | N | Routine.Play Directive에서 전달한 루틴을 식별하기 위한 unique한 string연속된 루틴 간에 동일한 token을 전달하지 않도록 주의",
    "name | string | N | 디스플레이가 있는 디바이스에서 현재 루틴의 이름을 보여주기 위해 사용됨",
    "routineId | string | N | 루틴이 가지는 고유한 id",
    "routineType | string | N | VOICESCHEDULEALARM_OFFAPP_START",
    "routineListType | string | N | USERPRESETRECOMMEND**",
    "routineActivity | string | Y | IDLE : 루틴을 한번도 실행하지 않은 경우PLAYING : 루틴이 실행되고 있는 경우INTERRUPTED : 루틴이 어떤 이유로든 중단된 경우FINISHED : 마지막 액션까지 정상적으로 실행이 종료된 경우STOPPED : 끝까지 실행하지 못하고 종료된 경우SUSPENDED : 끝까지 실행하지 못하고 종료된 경우</p><p>SUSPENDED - BREAK에 의해 action 리스트 중간에서 실행을 쉬고 있는 경우",
    "currentAction | long | N | 현재 실행 중인 Action의 순서 1부터 시작하며, 마지막 Action의 값은 actions 의 개수와 같아야 함",
    "actions | list | N | Start Directive 참조"
  ]
},
    {
  "title": "Routine > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
},
    {
  "title": "Routine > Start",
  "hash": "#start",
  "sentences": [
    "Start",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"Start\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"name\": \"{{STRING}}\",\n    \"routineId\": \"{{STRING}}\",\n    \"routineType\": \"{{STRING}}\",\n    \"actions\": [\n      {\n        \"type\": \"{{STRING}}\",\n        \"text\": \"{{STRING}}\",\n        \"data\": {},\n        \"playServiceId\": \"{{STRING}}\",\n        \"token\": \"{{STRING}}\",\n        \"muteInMilliseconds\": {{LONG}},\n        \"postDelayInMilliseconds\": {{LONG}},\n        \"actionTimeoutInMilliseconds\": {{LONG}}\n      }\n    ],\n    \"source\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | 전달하는 루틴을 식별하기 위한 unique string",
    "actions | list | Y | 루틴을 구성하는 Action을 포함하는 list",
    "actions.type | string | Y | 전송하는 Event TypeTEXT : Text.TextInput으로 “text” 파라미터 전송DATA : Routine.ActionTriggered Event로 data를 전송",
    "actions.text | string | N | type 이 TEXT 일 때 필수 값 Action을 실행하기 위한 발화",
    "actions.data | object | N | type 이 DATA 일 때 필수 값 ActionTriggered Event를 전송할때 함께 전송하는 데이터 ActionTriggered Event의 “data” 파라미터에 이 object를 그대로 복사해서 전송",
    "actions.playServiceId | string | N | text 또는 event를 실행하는 Play Service IdTEXT는 이 값이 없으면 라우팅 로직대로 라우팅",
    "actions.token | string | N | Text.TextInput event 의 “token” parameter 로 전달해야 함",
    "actions.muteDelayInMilliseconds | long | N | 응답에 TTS.Speak Directive가 없는 경우 다음 action을 실행할때까지 기다려야 하는 시간",
    "actions.postDelayInMilliseconds | long | N | 해당 Action 의 ActionTriggered event 요청으로 전달받은 모든 directive 를 실행한 후 다음 Action 의 ActionTriggered event 를 요청하기 전까지 강제로 설정하는 delay 시간단위 : msecdefault : 0 (delay가 없음)",
    "actions. actionTimeoutInMilliseconds | long | N | 현재 action이 AudioPlayer를 사용해서 미디어를 재생하는 경우에만 사용됨",
    "source | string | N | TextInput Source 입력 사용 가능한 값은 Text Interface에 정의됨"
  ]
},
    {
  "title": "Routine > Stop",
  "hash": "#stop",
  "sentences": [
    "Stop",
    "현재 실행 중인 루틴을 종료",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"Stop\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | context에서 현재 동작 중인 루틴의 token 값을 사용"
  ]
},
    {
  "title": "Routine > Continue",
  "hash": "#continue",
  "sentences": [
    "Continue",
    "현재 실행 중인 루틴을 이어서 실행",
    "실행 중인 Action은 멈추고 다음 Action부터 실행됨",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"Continue\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | context에서 현재 동작 중인 루틴의 token 값을 사용"
  ]
},
    {
  "title": "Routine > Move",
  "hash": "#move",
  "sentences": [
    "Move",
    "루틴에 포함된 임의의 액션의 위치로 이동",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"Move\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"position\": {{LONG}}\n  }\n}",
    "playServiceId | string | Y | context에서 현재 동작 중인 루틴의 token 값을 사용",
    "position | string | Y | 이동하고자 하는 action 위치를 지정(currentAction 기준)"
  ]
},
    {
  "title": "Routine > Events",
  "hash": "#events",
  "sentences": [
    "Events"
  ]
},
    {
  "title": "Routine > Started",
  "hash": "#started",
  "sentences": [
    "Started",
    "루틴의 첫번째 Action을 실행하기 전에 전달",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"Started\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Routine > Failed",
  "hash": "#failed",
  "sentences": [
    "Failed",
    "루틴 실행이 실패하는 경우",
    "Routine.Play, Routine.Continue Directive의 응답으로 전송 가능",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"Failed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"errorMessage\": \"{{STRING}}\"\n  }\n}",
    "errorMessage | string | Y |  "
  ]
},
    {
  "title": "Routine > Finished",
  "hash": "#finished",
  "sentences": [
    "Finished",
    "마지막 Action까지 정상적으로 실행이 종료된 경우 발생",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"Finished\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Routine > Stopped",
  "hash": "#stopped",
  "sentences": [
    "Stopped",
    "모든 Action이 실행되기 전에 Routine.Stop Directive 또는 시스템 이슈로 종료된 경우",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"Stopped\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.3\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Routine > ActionTriggered",
  "hash": "#actiontriggered",
  "sentences": [
    "ActionTriggered",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"ActionTriggered\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"data\": {}\n  }\n}",
    "data | object | Y | DATA type의 Action에서 보낼 데이터"
  ]
},
    {
  "title": "Routine > MoveSucceeded",
  "hash": "#movesucceeded",
  "sentences": [
    "MoveSucceeded",
    "루틴 수행 중에 Move 디렉티브가 전송되었고 이동도 성공하는 경우",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"MoveSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Routine > MoveFailed",
  "hash": "#movefailed",
  "sentences": [
    "MoveFailed",
    "실행 중인 루틴이 없는데 Move 디렉티브가 전송되는 경우, 루틴이 실행 중인데 이동에 실패하는 경우",
    "{\n  \"header\": {\n    \"namespace\": \"Routine\",\n    \"name\": \"MoveFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"errorMessage\": \"{{STRING}}\"\n  }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz/manage-shared-device/runtimelibrary-error",
  "order": 113,
  "indexes": [
    {
  "title": "Visual C++ 런타임라이브러리 (x86) 오류",
  "hash": "",
  "sentences": [
    "Visual C++ 런타임라이브러리 (x86) 오류",
    "Device Setup Tool 설치 시 발생하는 Visual C++ 런타임라이브러리 (x86) 관련 오류입니다."
  ]
},
    {
  "title": "Visual C++ 런타임라이브러리 (x86) 오류 > 오류 증상",
  "hash": "#오류-증상",
  "sentences": [
    "오류 증상",
    "설치 중 “Visual C++ 런타임라이브러리(x86) 구성 요소를 설치 하지 못했습니다. “라는 메세지와 함께 Device Setup Tool 설치 실패하게 됩니다.",
    "install.log",
    "The following properties have been set:\nProperty: [AdminUser] = true {boolean}\nProperty: [InstallMode] = HomeSite {string}\nProperty: [NTProductType] = 1 {int}\nProperty: [ProcessorArchitecture] = AMD64 {string}\nProperty: [VersionNT] = 10.0.0 {version}\nRunning checks for package 'Microsoft .NET Framework 4.6.1(x86 및 x64)', phase BuildList\nReading value 'Release' of registry key 'HKLM\\Software\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full'\nRead integer value 528049\nSetting value '528049 {int}' for property 'DotNet461Full_Release'\nReading value 'v4' of registry key 'HKLM\\SOFTWARE\\Microsoft\\NET Framework Setup\\OS Integration'\nRead integer value 1\nSetting value '1 {int}' for property 'DotNet461Full_OSIntegrated'\nReading value 'Release' of registry key 'HKLM\\Software\\Microsoft\\NET Framework Setup\\NDP\\v4\\Full\\1042'\nRead integer value 528049\nSetting value '528049 {int}' for property 'DotNet461FullLangPack_Release'\nReading value 'LCID' of registry key 'HKLM\\SYSTEM\\CurrentControlSet\\Control\\MUI\\UILanguages\\ko-KR'\nRead integer value 1042\nSetting value '1042 {int}' for property 'DotNet461FullLangPack_OS_LCID'\nReading value 'v4' of registry key 'HKLM\\SOFTWARE\\Microsoft\\NET Framework Setup\\OS Integration'\nRead integer value 1\nSetting value '1 {int}' for property 'DotNet461FullLangPack_OSIntegrated'\nThe following properties have been set for package 'Microsoft .NET Framework 4.6.1(x86 및x64)'\nProperty: [DotNet461FullLangPack_OSIntegrated] = 1 {int}\nProperty: [DotNet461FullLangPack_OS_LCID] = 1042 {int}\nProperty: [DotNet461FullLangPack_Release] = 528049 {int}\nProperty: [DotNet461Full_OSIntegrated] = 1 {int}\nProperty: [DotNet461Full_Release] = 528049 {int}\nRunning checks for command 'DotNetFX461\\NDP461-KB3102436-x86-x64-AllOS-ENU.exe'\nResult of running operator 'ValueEqualTo' on property 'InstallMode' and value 'HomeSite': true\nResult of checks for command 'DotNetFX461\\NDP461-KB3102436-x86-x64-AllOS-ENU.exe' is 'Bypass'\nRunning checks for command 'DotNetFX461\\NDP461-KB3102438-Web.exe'\nResult of running operator 'ValueNotEqualTo' on property 'InstallMode' and value 'HomeSite': false\nResult of running operator 'ValueGreaterThanEqualTo' on property 'DotNet461Full_Release' and value '394254': true\nResult of checks for command 'DotNetFX461\\NDP461-KB3102438-Web.exe' is 'Bypass'\nRunning checks for command 'DotNetFX461\\NDP461-KB3102436-x86-x64-AllOS-KOR.exe'\nResult of running operator 'ValueGreaterThanEqualTo' on property 'DotNet461FullLangPack_Release' and value '394254': true\nResult of checks for command 'DotNetFX461\\NDP461-KB3102436-x86-x64-AllOS-KOR.exe' is 'Bypass'\nRunning checks for command 'DotNetFX461\\NDP461-KB3102436-x86-x64-AllOS-KOR.exe'\nResult of running operator 'ValueGreaterThanEqualTo' on property 'DotNet461FullLangPack_Release' and value '394254': true\nResult of checks for command 'DotNetFX461\\NDP461-KB3102436-x86-x64-AllOS-KOR.exe' is 'Bypass'\n'Microsoft .NET Framework 4.6.1(x86및 x64)' RunCheck result: No Install Needed\nRunning checks for package 'Visual C++ \"14\"런타임라이브러리(x86)', phase BuildList\nRunning MsiProductCheck with ProductCode '{7B77DE7F-5219-435E-9CE1-FC77F1D4CCAD}'\nMsiQueryProductState returned '-1'\nSetting value '-1 {int}' for property 'VCRedistInstalled'\nThe following properties have been set for package 'Visual C++ \"14\" 런타임라이브러리(x86)':\nProperty: [VCRedistInstalled] = -1 {int}\nRunning checks for command 'vcredist_x86\\vc_redist.x86.exe'\nResult of running operator 'ValueGreaterThanEqualTo' on property 'VCRedistInstalled' and value '3': false\nResult of running operator 'ValueEqualTo' on property 'AdminUser' and value 'false': false\nSkipping FailIf because Property 'Version9X' was not defined\nResult of running operator 'VersionLessThan' on property 'VersionNT' and value '6.00': false\nResult of checks for command 'vcredist_x86\\vc_redist.x86.exe' is 'Install'\n'Visual C++ \"14\" 런타임라이브러리(x86)' RunCheck result: Install Needed\nInstallation of components 'Visual C++ \"14\"런타임라이브러리(x86)' was accepted.\nCopying files to temporary directory \"C:\\Users\\SKTELE~1\\AppData\\Local\\Temp\\VSD4598.tmp\\\"\nDownloading files to \"C:\\Users\\SKTELE~1\\AppData\\Local\\Temp\\VSD4598.tmp\\\"\n(2021-01-12 오후 2:51:40) Downloading 'vcredist_x86\\vc_redist.x86.exe' from 'https://aka.ms/vs/15/release/27012.06/VC_Redist.x86.exe' to 'C:\\Users\\SKTELE~1\\AppData\\Local\\Temp\\VSD4598.tmp\\'\nDownload completed at 2021-01-12 오후 2:51:45\nVerifying file integrity of C:\\Users\\SKTELE~1\\AppData\\Local\\Temp\\VSD4598.tmp\\vcredist_x86\\vc_redist.x86.exe\nWinVerifyTrust returned 0\nFile trusted\nRunning checks for package 'Visual C++ \"14\"런타임라이브러리(x86)', phase BeforePackage\nRunning MsiProductCheck with ProductCode '{7B77DE7F-5219-435E-9CE1-FC77F1D4CCAD}'\nMsiQueryProductState returned '-1'\nSetting value '-1 {int}' for property 'VCRedistInstalled'\nThe following properties have been set for package 'Visual C++ \"14\" 런타임라이브러리(x86)':\nProperty: [VCRedistInstalled] = -1 {int}\nRunning checks for command 'vcredist_x86\\vc_redist.x86.exe'\nResult of running operator 'ValueGreaterThanEqualTo' on property 'VCRedistInstalled' and value '3': false\nResult of running operator 'ValueEqualTo' on property 'AdminUser' and value 'false': false\nSkipping FailIf because Property 'Version9X' was not defined\nResult of running operator 'VersionLessThan' on property 'VersionNT' and value '6.00': false\nResult of checks for command 'vcredist_x86\\vc_redist.x86.exe' is 'Install'\n'Visual C++ \"14\" 런타임라이브러리(x86)' RunCheck result: Install Needed\nVerifying file integrity of C:\\Users\\SKTELE~1\\AppData\\Local\\Temp\\VSD4598.tmp\\vcredist_x86\\vc_redist.x86.exe\nWinVerifyTrust returned 0\nFile trusted\nInstalling using command 'C:\\Users\\SKTELE~1\\AppData\\Local\\Temp\\VSD4598.tmp\\vcredist_x86\\vc_redist.x86.exe' and parameters ' /q '\nProcess exited with code 1638\nStatus of package 'Visual C++ \"14\" 런타임라이브러리(x86)' after install is 'InstallFailed"
  ]
},
    {
  "title": "Visual C++ 런타임라이브러리 (x86) 오류 > 오류 원인",
  "hash": "#오류-원인",
  "sentences": [
    "오류 원인",
    "Clickonce를 통해 배포하면서 의존 라이브러리 체크를 진행하게 되는데, 통합 ‘Visual C++ “14” 런타임 라이브러리(x86)’ 가 설치되어 있는 PC의 경우 설치 되어 있지 않다고 판단하여 “Visual C++ “14” 런타임 라이브러리(x86)” 설치 시도하고, 설치 중 해당 라이브러리 중복으로 인하여 설치 오류가 발생하게 됩니다. (Clickonce의 버그로 보고됨)"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/screen",
  "order": 163,
  "indexes": [
    {
  "title": "Screen",
  "hash": "",
  "sentences": [
    "Screen",
    "디바이스의 디스플레이를 제어하기 위한 규격"
  ]
},
    {
  "title": "Screen > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.0 입니다.",
    "1.0 | 2020.03.02 | 규격 추가"
  ]
},
    {
  "title": "Screen > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Screen > ScreenAgent 사용",
  "hash": "#screenagent-사용",
  "sentences": [
    "ScreenAgent 사용",
    "Screen interface 규격에 따른 디바이스의 동작 제어는 ScreenAgent 가 처리합니다.",
    "iOS/Linux 는 ScreenAgent 를 지원하지 않습니다.",
    "Android",
    "NuguAndroidClient instance 를 통해 ScreenAgent instance 에 접근할 수 있습니다.",
    "val screenAgent = nuguAndroidClient.getAgent(DefaultScreenAgent.NAMESPACE)",
    "NuguAndroidClient 생성시 Screen 을 추가합니다.",
    "class MyScreen: Screen {\n    ...\n}\nNuguAndroidClient.Builder(...)\n    .enableScreen(MyScreen())"
  ]
},
    {
  "title": "Screen > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "디바이스의 디스플레이 상태를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android",
    "Screen 을 구현합니다.",
    "class MyScreen: Screen {\n    override fun getSettings(): Settings {\n        ...\n    }\n    ...\n}"
  ]
},
    {
  "title": "Screen > 디스플레이 제어",
  "hash": "#디스플레이-제어",
  "sentences": [
    "디스플레이 제어",
    "디바이스의 디스플레이 제어가",
    "TurnOn",
    "/",
    "TurnOff",
    "/",
    "SetBrightness",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "Screen 을 구현합니다.",
    "class MyScreen: Screen {\n    override fun turnOn(brightness: Long): Boolean {\n        ...\n    }\n\n    override fun turnOff(): Boolean {\n        ...\n    }\n\n    override fun setBrightness(brightness: Long): Boolean {\n        ...\n    }\n\n    ...\n}"
  ]
},
    {
  "title": "Screen > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Screen\": {\n    \"version\": \"1.0\",\n    \"state\": \"{{STRING}}\",\n    \"brightness\": {{LONG}}\n  }\n}",
    "state | enum | Y | ON, OFF",
    "brightness | long | Y | 0 ~ 100"
  ]
},
    {
  "title": "Screen > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive"
  ]
},
    {
  "title": "Screen > TurnOn",
  "hash": "#turnon",
  "sentences": [
    "TurnOn",
    "{\n  \"header\": {\n    \"namespace\": \"Screen\",\n    \"name\": \"TurnOn\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"brightness\": {{LONG}}\n  }\n}",
    "brightness | long | Y | 1 ~ 100"
  ]
},
    {
  "title": "Screen > TurnOff",
  "hash": "#turnoff",
  "sentences": [
    "TurnOff",
    "{\n  \"header\": {\n    \"namespace\": \"Screen\",\n    \"name\": \"TurnOff\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/sdk-design-guide",
  "order": 201,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/session",
  "order": 167,
  "indexes": [
    {
  "title": "Session",
  "hash": "",
  "sentences": [
    "Session",
    "Play 와 Client 간의 세션을 유지하기 위한 규격"
  ]
},
    {
  "title": "Session > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.0 입니다.",
    "1.0 | 2020.06.05 | 규격 추가"
  ]
},
    {
  "title": "Session > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Session > SessionAgent 사용",
  "hash": "#sessionagent-사용",
  "sentences": [
    "SessionAgent 사용",
    "Session interface 규격에 따른 디바이스의 동작 제어는 SessionAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 SessionAgent instance 에 접근할 수 있습니다.",
    "val sessionAgent = nuguAndroidClient.getAgent(SessionAgent.NAMESPACE)",
    "보이스 크롬 UI 구성을 위해 TTS interface, ASR interface, Chips interface, Session interface 를 병합해주는 DialogUXStateAggregator 를 제공합니다.",
    "NuguClient instance 를 통해 SessionAgent instance 에 접근할 수 있습니다.",
    "let sessionAgent = nuguClient.sessionAgent",
    "보이스 크롬 UI 구성을 위해 TTS interface, ASR interface, Chips interface, Session interface 를 병합해주는 DisplayStateAggregator 를 제공합니다.",
    "NuguClient instance 를 통해 DialogStateAggregator instance 에 접근할 수 있습니다.",
    "let dialogStateAggregator = nuguClient.dialogStateAggregator",
    "CapabilityFactory::makeCapability 함수로 SessionAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto session_handler(std::shared_ptr<ISessionHandler>(\n        CapabilityFactory::makeCapability<SessionAgent, ISessionHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(session_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "Session > 세션 상태 정보",
  "hash": "#세션-상태-정보",
  "sentences": [
    "세션 상태 정보",
    "세션 유지상태 정보를 확인할 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "DialogUXStateAggregatorInterface.Listener 를 추가합니다.",
    "val listener = object: DialogUXStateAggregatorInterface.Listener {\n    override fun onDialogUXStateChanged(newState: DialogUXState, dialogMode: Boolean, chips: RenderDirective.Payload?, sessionActivated: Boolean) {\n        ...\n    }\n}\nnuguAndroidClient.addDialogUXStateListener(listener)",
    "DialogStateDelegate 를 추가합니다.",
    "class MyDialogStateDelegate: DialogStateDelegate {\n    func dialogStateDidChange(_ state: DialogState, isMultiturn: Bool, chips: [ChipsAgentItem.Chip]?, sessionActivated: Bool) {\n        ...\n    }\n}\ndialogStateAggregator.add(delegate: MyDialogStateDelegate())",
    "ISessionListener 를 추가합니다.",
    "class MySessionListener : public ISessionListener {\npublic:\n    ...\n\n    void onState(SessionState state, const std::string& dialog_id) override\n    {\n        ...\n    }\n\n    ...\n};\nauto session_listener(std::make_shared<MySessionListener>());\nCapabilityFactory::makeCapability<SessionAgent, ISessionHandler>(session_listener.get());"
  ]
},
    {
  "title": "Session > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Session\": {\n    \"version\": \"1.1\",\n    \"list\": [\n      {\n        \"sessionId\": \"{{STRING}}\",\n        \"playServiceId\": \"{{STRING}}\"\n      }\n    ]\n  }\n}",
    "list | array | N | 현재 활성화 되어 있는 세션 리스트",
    "list.sessionId | string | Y | -",
    "list.playServiceId | string | Y | -"
  ]
},
    {
  "title": "Session > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/settimecontrol-interface",
  "order": 91,
  "indexes": [
    {
  "title": "SetTimeControl Interface",
  "hash": "",
  "sentences": [
    "SetTimeControl Interface",
    "NUGU스마트홈 SetTimeControl Capability Interface는 NUGU 스마트홈에 등록된 SmartHomeDevice의 제어시간설정방식에 대한 설명입니다. 스마트홈 기기의 종료예약설정 등을 관리할 수 있습니다."
  ]
},
    {
  "title": "SetTimeControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "SetTimeControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "SetTimeControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"AIR_CONDITIONER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyNameSuggestion\": \"거실\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"setTimeControl\": {} // 이 속성이 존재해야 setTimeControl Capability 사용 가능.\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "SmartHomeDevice Attribute Parameters",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "SetTimeControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU SmartHome SetTimeControl Capability는 종료예약을 설정하는 SetEndTime과 설정된 종료예약을 취소하는 CancelEndTime을 지원합니다."
  ]
},
    {
  "title": "SetTimeControl Interface > SetEndTime",
  "hash": "#setendtime",
  "sentences": [
    "SetEndTime",
    "Directive 정보",
    "SmartHomeDevice를 사용자가 발화한 시간에 맞춰 종료 예약 설정한다.",
    "Capability : SetTimeControl",
    "Directive : SetEndTime",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 1시간 후에 종료예약 설정해줘.",
    "아리아, {FriendlyName} {DeviceType} 3시로 종료예약해줘.",
    "아리아, {DeviceType} 1시간 30분 후 종료예약 설정."
  ]
},
    {
  "title": "SetTimeControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/SetTimeControl/directives/SetEndtime)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"SetTimeControl\",\n      \"smartHomeDirective\": \"SetEndtime\",\n      \"parameters\": {\n        \"dateTime\": \"2019-10-01T15:50\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"example_device_type\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example_manufacturer\",\n        \"supportedCapabilities\": {\n          \"setTimeControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "SetEndTime Directive Request parameter details",
    "dateTime | SmartHomeDevice에 설정하고자 하는 종료예약의 시간정보입니다. | string"
  ]
},
    {
  "title": "SetTimeControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"dateTime\": \"2019-10-01T15:50\"\n      }\n    }\n  ]\n}"
  ]
},
    {
  "title": "SetTimeControl Interface > CancelEndTime",
  "hash": "#cancelendtime",
  "sentences": [
    "CancelEndTime",
    "Directive 정보",
    "SmartHomeDevice에 설정된 종료예약을 취소한다.",
    "Capability : SetTimeControl",
    "Directive : CancelEndTime",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 종료예약 취소해줘.",
    "아리아, {FriendlyName} {DeviceType} 꺼짐예약 삭제해줘.",
    "아리아, {DeviceType} 종료예약 취소."
  ]
},
    {
  "title": "SetTimeControl Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/SetTimeControl/directives/CancelEndtime)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"SetTimeControl\",\n      \"smartHomeDirective\": \"CancelEndtime\",\n      \"parameters\": {}\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"example_device_type\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example_manufacturer\",\n        \"supportedCapabilities\": {\n          \"setTimeControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "SetTimeControl Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n      }\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-parameters/slot-filling-prompt",
  "order": 27,
  "indexes": [
    {
  "title": "필수 Entity 정의하기 (Slot-Filling Prompt)",
  "hash": "",
  "sentences": [
    "필수 Entity 정의하기 (Slot-Filling Prompt)",
    "User Utterance Model을 정의하다 보면 사용자로부터 추가로 정보를 받아야만 처리할 수 있는 Intent가 있을 수 있습니다. 가령, 알람을 맞춰달라는 Intent를 처리하고자 한다면, ‘몇 시’라는 정보(Entity)가 꼭 필요합니다.",
    "사용자가 단순히 ‘알람 설정해줘’ 라고만 말했다면, 몇 시로 설정할 것인지 되물어야 합니다. 이렇게 추가 정보를 꼭 받아야만 해당 Intent를 처리할 수 있는 경우에는 사용자에게 되물어서 그 값을 받을 수 있습니다. 이렇게 사용자에게 추가 정보(Entity)를 받기 위해 되묻는 물음을 Slot-Filling Prompt(부족한 정보 재질의)라고 합니다.",
    "Slot-Filling Prompt를 통해 Entity를 다시 받기 위해서는 Utterance Parameter에 Entity를 매핑한 후 ‘필수’ 박스에 체크를 해야합니다.",
    "Utterance Parameter 등록 및 매핑에 대한 자세한 내용은 Parameter 사용하기를 참고하세요."
  ]
},
    {
  "title": "필수 Entity 정의하기 (Slot-Filling Prompt) > 필수 Entity 정의하기",
  "hash": "#필수-entity-정의하기",
  "sentences": [
    "필수 Entity 정의하기",
    "⁣1. Play Builder 좌측 메뉴에서",
    "Actions",
    ">",
    "Custom Actions",
    "를 클릭한 후, Slot-Filling Prompt를 설정할 Action을 선택합니다.\n⁣2. 응답에 필요한 정보 가져오기 영역에서 Slot-Filling Prompt를 통해 Entity를 다시 받을 Utterance Parameter에 Entity를 매핑한 후 ‘필수’ 박스에 체크합니다.",
    "⁣3. 이후 Slot-filling Prompt를 입력합니다.",
    "Slot-filling Prompt는 다른 Prompt와 달리 마지막 발화부터 입력하는 스택 구조이며 LIFO(Last In First Out)로 동작합니다. 여러 개의 Prompt를 입력하면 가장 마지막에 입력한 Prompt부터 차례대로 사용자에게 응답하게 됩니다.",
    "이 Prompt에 대해 사용자의 응답이 Entity Type에 속하지 않은 값일 경우(위의 예에서 시간이 아니라 날짜를 얘기한 경우) 그 다음 순서의 발화가 나가게 됩니다. 마지막에는 사용자가 입력한 첫 Prompt가 나가게 되며, 이 Prompt는 종료 Prompt로 동작하여 Play 세션을 종료합니다.",
    "종료 Prompt에 대한 자세한 내용은 Prompt의 유형을 참고하세요."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play",
  "order": 56,
  "indexes": [
    {
  "title": "Pre-built Play Builder로 스마트홈 Play 만들기",
  "hash": "",
  "sentences": [
    "Pre-built Play Builder로 스마트홈 Play 만들기",
    "NUGU 스마트홈을 활용해 SmartHome Play 제작하면 NUGU 클라이언가 탑재된 다양한 기기(NUGU 스피커, T map, B tv STB, T 전화 )등에서 음성 인터페이스를 활용하여 스마트홈 기기들을 제어하고 확인할 수 있습니다. 이 문서에서는 NUGU스마트홈을 통해 서비스를 제공하고 싶은 IoT Service Provider에게 규격 및 개발 가이드와 API 레퍼런스, 샘플코드, NUGU SmartHome Play Builder 사용 가이드 등을 제공합니다. NUGU스마트홈은 계속 개발되고 있으며, 관련 규격들은 지속적으로 업데이트됩니다."
  ]
},
    {
  "title": "Pre-built Play Builder로 스마트홈 Play 만들기 > SmartHome Play 만들기",
  "hash": "#smarthome-play-만들기",
  "sentences": [
    "SmartHome Play 만들기",
    "SmartHome Play는 스마트홈 관련 기능에 대해 사용자 발화 및 처리로직들이 사전에 정의되어 있는 Prebuilt 유형의 Play입니다. 따라서 SmartHome Play는 별도로 UtteranceModel 및 Action정의를 하실 필요가 없이 OAUTH 연동 및 SmartHomeBackendProxy 구현만으로 제작할 수 있습니다. SmartHome Play 역시 NUGU Developers 내 Play Builder를 활용해 만들 수 있으며 Play 생성 시 Play 유형을 SmartHome으로 선택해야 합니다. SmartHome Play를 만들기 위한 순서 및 자세한 내용을 아래를 참조하시기 바랍니다.UtteranceModel 및 Action정의를 하실 필요가 없이 OAUTH 연동 및 SmartHomeBackendProxy 구현만으로 제작할 수 있습니다. SmartHome Play 역시 NUGU Develpers 내 Play Builder를 활용해 만들 수 있으며 Play 생성 시 Play 유형을 SmartHome으로 선택해야 합니다. SmartHome Play를 만들기 위한 순서 및 자세한 내용을 아래를 참조하시기 바랍니다.",
    "NUGU developers를 통해",
    "Play Builder",
    "에 접속해주세요.",
    "Play Builder에서 우측 하단 Play 생성”+ 버튼”을 선택 해 새로운 Play를 제작합니다. Play유형은 SmartHome으로 선택한 후 Play이름을 입력해야 합니다. Play이름은 Play Builder 내에서 사용할 이름입니다. 사용자에게 공개하게 될 Play의 이름은 별도로 등록하게 됩니다.",
    "Play Builder를 통해 기본정보를 입력해주세요. 기본정보는 Play이름, Play별칭, 외부 연동 서버(Backend proxy)설정, OAuth정보로 구성되어 있습니다.",
    "Oauth 정보 : SmartHome Play의 경우 IoT ServiceProvider의 사용자 계정 인증을 NUGU의 사용자 계정과 연동해야 하므로 인증서버 연동이 필수적으로 필요하며 해당 연동은 OAUTH 2.0 규격에 따라 아래 정보가 필요합니다.",
    "Clinet ID",
    "Client Secret",
    "Redirect URI",
    "Auth URI",
    "Token Endpoint (Token URI)",
    "Token Refresh URI",
    "Grant Type",
    "Scope",
    "외부 연동 서버(backend proxy) 설정 : NUGU의 사용자 발화체계 및 Action 로직을 IoT Service와 연동해 줄 BackendProxy 서버의 개발이 필수입니다.",
    "SmartHome BackendProxy는 Discovery와 Control 2개의 역할을 수행합니다. 자세한 내용은 아래",
    "Discovery",
    "와",
    "Control",
    "을 참조해주세요.",
    "Play의 기본정보 입력을 마친 후 빌드/History 메뉴를 통해 Play빌드를 진행합니다. Play를 빌드한 시점을 기준으로 입력된 정보로 NUGU developers에서 Play의 등록 및 심사를 진행하실 수 있습니다. 만약 Play의 기본정보가 변경될 경우 새로 빌드하고 이를 NUGU developers에서 재등록 혹은 업데이트를 진행해야 합니다.",
    "SmartHome Play의 빌드를 마친 후 NUGU developers의 관리 > Play등록 메뉴에서 Play등록하기를 통해 Play를 등록 및 심사 요청해야 합니다.",
    "Play타입을 Smarthome으로 선택하면 Play Builder를 통해 제작한 SmartHome Play의 리스트를 불러올 수 있습니다. SmartHome Play의 심사 프로세스는 Custom Play와 동일하지만 Play 심사를 위한 등록 정보는 일부 차이가 있습니다.",
    "SmartHome Play의 빌드를 마친 후 NUGU developers의 관리 > Play등록 메뉴에서 Play등록하기를 통해 Play를 등록 및 심사 요청해야 합니다. Play타입을 Smarthome으로 선택하면 Play Builder를 통해 제작한 SmartHome Play의 리스트를 불러올 수 있습니다. SmartHome Play의 심사 프로세스는 Custom Play와 동일하지만 Play 심사를 위한 등록 정보는 일부 차이가 있습니다.",
    "SmartHome Play를 등록한 후 심사대기 및 심사 중 상태일 때 NUGU 클라이언트가 탑재된 기기를 통해 테스트를 진행할 수 있습니다. SmartHome Play를 제작한 NUGU Developers의 T ID와 동일한 T ID로 NUGU 모바일 앱에 접속해 스마트홈 메뉴에서 신규 기기 등록하기를 선택하면 심사 중인 IoT ServiceProvider의 SmartHome Play가 보이고 사용자 계정 연동을 통해 스마트홈 기기를 NUGU 앱에 등록해 테스트를 진행할 수 있습니다. 자세한 내용은 다음 링크를 참고해 주세요.",
    "Play 정보 등록 (smarthome play)",
    "Key Terms",
    "Discovery - 사용자가 발화로 제어 가능한 디바이스를 탐색하는 기능. Discovery 를 위해서는 Discovery 요청을 처리할 수 있는 SmartHomeBackendProxy 서버를 개발해야 함. Discovery 가 된 디바이스는 NUGU App 의 스마트홈에 노출되며 별칭을 설정하여 발화로 제어할 수 있어야 함. 제어를 위해서는 Control 요청을 처리하는 SmartHomeBackendProxy 서버를 개발해야 함.",
    "Control - SmartHomeBackendProxy 가 받게 되는 기기 제어 요청. 이 요청을 처리하기 위해서는 기기를 제어하기 위한 SmartHomeBackendProxy 서버를 개발해야 함.",
    "SmartHomeBackendProxy - Discovery, Control 요청을 처리하는 서버.",
    "OAuth2 - OAuth2 인증에 필요한 정보 입력 필요.",
    "NUGU SmartHome Platform은 지금도 계속해서 개발되고 있습니다. 현재 NUGU SmartHome Platform 에 등록되지 않은 스마트홈 기기 유형 및 기능에 대한 문의 및 요청은 NUGU developers Support 내에 문의사항 / 제휴제안을 통해 등록해주세요."
  ]
},
    {
  "title": "Pre-built Play Builder로 스마트홈 Play 만들기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "SmartHome Play의 동작을 위해서는 SmartHomeServiceProvider의 SmartHomeDevice 정보를 NUGU스마트홈에 등록해야 합니다. 일반 사용자가 NUGU스마트홈에 SmartHomeDevice를 등록하려면 NUGU App의 스마트홈 메뉴에서 “신규 디바이스 등록하기” 기능을 사용해야 합니다. “신규 디바이스 등록하기”를 선택한 후 SmartHome Play를 선택하면 해당 SmartHome Play의 SmartHomeServiceProvider가 제공하는 계정연동(OAUTH 2.0) 웹페이지로 이동하고 계정 연동을 통해 SmartHomeServiceProvider에 등록된 SmartHomeDevice 정보를 불러오게 됩니다. 불러온 SmartHomeDevice 정보 중 사용자가 선택해 등록한 SmartHomeDevice는 NUGU스마트홈을 통해 제어할 수 있게 됩니다. 사용자가 NUGU App을 통해 SmartHome Play의 SmartHomeDevice를 등록하려고 하면 NUGU스마트홈은 SmartHomeServiceProvider에게 Discovey를 요청하고 SmartHomeServiceProvider는 아래 예시와 같이 NUGU스마트홈에 등록할 수 있는 모든 SmartHomeDevice 정보를 응답해야 합니다."
  ]
},
    {
  "title": "Pre-built Play Builder로 스마트홈 Play 만들기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"userIdentifier\": \"t6Pv9PLAEmYZilNiloUUnZbVDjXgvUCzwpWY1tPq (optional, e.g. hue whitelist identifier)\",\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "Pre-built Play Builder로 스마트홈 Play 만들기 > Discovery Response Sample",
  "hash": "#discovery-response-sample",
  "sentences": [
    "Discovery Response Sample",
    "{\n  \"devices\": [\n    {\n      \"id\": \"D1234567\",\n      \"type\": \"AIR_CONDITIONER\",\n      \"modelName\": \"example model name\",\n      \"friendlyNameSuggestion\": \"거실\",\n      \"manufacturer\": \"example manufacturer\",\n      \"supportedCapabilities\": {\n        \"airflowControl\": {\n          \"supportedAirflowTypes\": [\"강\", \"강풍\", \"미풍\", \"수면\", \"약\", \"약풍\", \"자동\", \"자동풍\"]\n        },\n        \"airQualityCheck\": {},\n        \"endTimeControl\": {},\n        \"modeControl\": {\n          \"supportedModes\": [\"무풍모드\", \"냉방모드\", \"수면모드\"]\n        },\n        \"powerControl\": {},\n        \"temperatureControl\": {}\n      },\n      \"customData\": {\n        ...\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
},
    {
  "title": "Pre-built Play Builder로 스마트홈 Play 만들기 > Control",
  "hash": "#control",
  "sentences": [
    "Control",
    "NUGU스마트홈에 등록된 SmartHomeDevice에 제어 요청이 올 경우 NUGU스마트홈은 내부 로에 따라 제어 대상 및 제어 명령을 확정 짓고 Discovery단계에서 등록된 정보를 활용해 SmartHomeServiceProvider에게 제어 명령을 전달합니다. 이때 제어 명령을 실제로 수신하는 것은 SmartHome Play를 제작할 당시에 입력한 SmartHomePlayBackendProxy입니다. 제어명령은 SmartHomeDeviceType과 SmartHomeCapability, SmartHomeDirective로 정리되어 요청되며, SmartHomeCapability, SmartHomeDirective에 따라 부가 정보가 포함되기도 합니다."
  ]
},
    {
  "title": "Pre-built Play Builder로 스마트홈 Play 만들기 > Control Request 예시",
  "hash": "#control-request-예시",
  "sentences": [
    "Control Request 예시",
    "(POST, /nugu/v1/capabilities/{Capability}/directives/{Directive})",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"TemperatureControl\",\n      \"smartHomeDirective\": \"SetTemperature\",\n      \"parameters\": {\n        \"temperatureLevel\": 22\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"D83077224431\",\n        \"type\": \"에어컨\",\n        \"model\": null,\n        \"friendlyName\": \"거실\",\n        \"customData\": {}\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"a5a250af-48f7-4ceb-b099-ea6753afa570\",\n      \"accessToken\": \"DUMMY_ACCESS_TOKEN\",\n      \"userIdentifier\": \"SERVICE_PROVIDER_USER_ID (optional, e.g. Hue whitelist Identifier)\"\n    }\n  }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomeattribute",
  "order": 94,
  "indexes": [
    {
  "title": "SmartHomeAttribute",
  "hash": "",
  "sentences": [
    "SmartHomeAttribute",
    "NUGU스마트홈을 통해 스마트홈 기기를 제어할 때 Capability나 Directive에 따라 포함되는 Attributes가 있습니다. SmartHome Attributes는 다양한 사용자 발화에 대응하여 아래와 같이 사용자 발화 데이터를 정규화하여 SmartHomeBackendProxy에 제어 요청을 보낼 때 포함합니다. IoT ServiceProvider는 지원하고자 하는 기능에 맞는 Directive가 어떠한 Attribute를 갖는지 확인하고 지원할 Attribute를 선택해야 합니다."
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute List",
  "hash": "#attribute-list",
  "sentences": [
    "Attribute List",
    "airflowType | 설정하고자 하는 airflowType의 사용자 발화 정보.해당 parameter의 value는 Device Discovery 당시 Response한 supprtedAirflowTypes 중 하나로 요청됩니다.",
    "airflowDelta | airflowType을 몇 단계 조절할지에 대한 사용자 발화 정보입니다.해당 parameter가 없을 경우에는 1단계를 올리도록 설정해야 합니다.",
    "brightnessLevel | 사용자가 SmartHomeDevice에 설정하고자 하는 밝기의 발화 정보입니다.1부터 100까지 설정할 수 있습니다.",
    "brightnessDelta | 설정 밝기를 몇 단계 조절지에 대한 사용자 발화 정보입니다.해당 정보가 없을 경우 1단계를 올리도록 설정합니다.",
    "colorType | 사용자가 SmartHomeDevice에 설정하고자 하는 색상 정보입니다.",
    "deviceTemperatureLevel | 사용자가 SmartHomeDevice에 설정하고자 하는 자체설정온도의 발화정보입니다.",
    "humidityLevel | 사용자가 SmartHomeDevice에 설정하고자 하는 습도의 발화 정보입니다.%단위입니다.",
    "humidityDelta | 설정습도를 몇 % 조절지에 대한 사용자 발화 정보입니다.해당 정보가 없을 경우 humidityStep만큼 올리도록 설정합니다.",
    "mode | 설정하고자 하는 mode의 사용자 발화 정보.해당 parameter의 value는 Device Discovery 당시 응답한 supportedModes 중 하나로 요청됩니다.",
    "temperatureLevel | 사용자가 SmartHomeDevice에 설정하고자 하는 온도(섭씨)의 발화 정보입니다.",
    "temperatureDelta | 설정온도를 몇 도(섭씨) 올릴지에 대한 사용자 발화 정보입니다.해당 정보가 없을 경우에는 temperatureStep만큼 올리도록 설정합니다."
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute Details",
  "hash": "#attribute-details",
  "sentences": [
    "Attribute Details",
    "IoT ServiceProvider 및 제품에 따라 지원하는 Attribute 값이 상이할 수 있습니다. 이 경우 하기의 Attribute 중 적합한 값을 선택해 제어할 것을 권장합니다."
  ]
},
    {
  "title": "SmartHomeAttribute > airflowType",
  "hash": "#airflowtype",
  "sentences": [
    "airflowType",
    "설정하고자 하는 풍량 및 풍속의 정보입니다. Device Discovery 당시 응답한 supprtedAirflowTypes 중 하나로 요청됩니다.",
    "지원풍량정보",
    "미풍 | BREEZE",
    "약풍 | LOW",
    "중풍 | MIDDLE",
    "강풍 | HIGH",
    "터보 | TURBO",
    "파워 | POWERWIND",
    "수면풍, 취침풍 | SLEEPINGWIND",
    "쾌면풍 | PLEASANTSLEEP",
    "자연 | NATURALWIND",
    "자동풍 | AUTOWIND",
    "1단(계) | SPEED1",
    "2단(계) | SPEED2",
    "3단(계) | SPEED3",
    "4단(계) | SPEED4",
    "5단(계) | SPEED5"
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시",
  "sentences": [
    "Attribute 사용 예시",
    "SetAirflow Directive Control Request 예시 (POST, /nugu/v1/capabilities/{Capability}/directives/{Directive})",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirflowControl\",\n      \"smartHomeDirective\": \"SetAirflow\",\n      \"parameters\": {\n        \"airflowType\": \"LOW\",\n        \"rawAirflowType\": \"약풍\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyNameSuggestion\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "Related to",
    "AirflowControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > airflowDelta",
  "hash": "#airflowdelta",
  "sentences": [
    "airflowDelta",
    "Airflow를 몇 단계 조절할지에 대한 Attribute value입니다. 해당 Attribute가 없을 경우에는 1단계를 조절하도록 설정해야 합니다.",
    "Increase / Decrease를 위한 AirflowType의 세기 단위\n미풍 < 약풍 < 중풍 < 강풍 < 터보, 1단 < 2단 < 3단 < 4단 < 5단 순으로 조정되며 이외에는 세기 단위에 포함되지 않은 특수풍으로 구분합니다."
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시-1",
  "sentences": [
    "Attribute 사용 예시",
    "IncreaseAirflow Directive Request 예시 (POST, /nugu/v1/capabilities/{Capability}/directives/{Directive})",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"AirflowControl\",\n      \"smartHomeDirective\": \"IncreaseAirflow\"\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyNameSuggestion\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"airflowControl\": {\n            \"supportedAirflowTypes\": [\n              \"HIGH\",\n              \"MIDDLE\",\n              \"LOW\",\n              \"AUTO\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "Related to",
    "AirflowControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > brightnessLevel",
  "hash": "#brightnesslevel",
  "sentences": [
    "brightnessLevel",
    "설정하고자 하는 스마트홈 기기의 밝기 정보입니다. 1부터 100 단계 백분율 정보로 설정할 수 있습니다."
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시-2",
  "sentences": [
    "Attribute 사용 예시",
    "SetBrightness Directive Request 예시 (POST, /nugu/v1/capabilities/{Capability}/directives/{Directive})",
    "{\n  \"version\": 1,\n  \"requestId\": \"201909301991140f5a1e97441fa76a699284bc6035\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"BrightnessControl\",\n      \"smartHomeDirective\": \"SetBrightness\",\n      \"brightnessLevel\": 30\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"deviceModelName\": \"example_device_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"colorControl\": {},\n          \"brightnessControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "Related to",
    "BrightnessControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > brightnessDelta",
  "hash": "#brightnessdelta",
  "sentences": [
    "brightnessDelta",
    "스마트홈 기기에 설정된 밝기를 몇 단계 조절할지에 대한 정보입니다. 해당 정보가 없을 경우 1단계를 조절합니다."
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시-3",
  "sentences": [
    "Attribute 사용 예시",
    "IncreaseBrightness Directive Control Request 예시 (POST, /nugu/v1/capabilities/{Capability}/directives/{Directive})",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019093019f78107f1a36147688c699703f5373a56\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"BrightnessControl\",\n      \"smartHomeDirective\": \"IncreaseBrightness\",\n      \"parameters\": {\n        \"brightnessDelta\": 3\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"123456\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"deviceModelName\": \"example_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"colorControl\": {},\n          \"brightnessControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\",\n      \"userIdentifier\": \"example_\"\n    }\n  }\n}",
    "Related to",
    "BrightnessControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > colorType",
  "hash": "#colortype",
  "sentences": [
    "colorType",
    "스마트홈 기기에 설정하고자 하는 색상 정보입니다. RGB 값으로 색 정보를 표현합니다.",
    "파란색 | BLUE | #0000ff",
    "녹색 | GREEN | #00ff00",
    "청록색 | CYAN | #00ffff",
    "민트색 | MINT | #4affee",
    "하늘색 | SKY_BLUE | #94e1ff",
    "보라색 | PURPLE | #ab23ff",
    "라벤더색 | LAVENDER | #eaebff",
    "쿨 화이트 | COOL_WHITE | #f5f3ff",
    "살색 | SALMON | #fe8374",
    "금색 | GOLD | #fed500",
    "빨간색 | RED | #ff0000",
    "자홍색 | MAGENTA | #ff00ff",
    "진홍색 | CRIMSON | #ff1846",
    "웜 화이트 | WARM_WHITE | #ff952b",
    "오렌지색 | ORANGE | #ffa600",
    "아이보리색 | SOFTWHITE | #ffaa57",
    "핑크색 | PINK | #ffbfcc",
    "화이트 | WHITE | #ffd0a4",
    "주광색 | DAY_LIGHT | #ffecde",
    "노란색 | YELLOW | #ffff00",
    "터키색 | TURQUOISE | #4affef",
    "연보라 | LIGHT_PURPLE | #eaebfe"
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시-4",
  "sentences": [
    "Attribute 사용 예시",
    "ChangeColor Directive Request 예시 (POST, /nugu/v1/capabilities/ColorControl/directives/ChangeColor)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190930213631c172b5214d4abfdbeb5804d8d80d\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"ColorControl\",\n      \"smartHomeDirective\": \"ChangeColor\",\n      \"parameters\": {\n        \"colorType\": \"#ffff00\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"12345\",\n        \"deviceTypeCode\": \"LIGHT\",\n        \"friendlyName\": \"거실\",\n        \"deviceTypeName\": \"조명\",\n        \"deviceModelName\": \"example_device_model_name\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"supportedCapabilities\": {\n          \"powerControl\": {},\n          \"colorControl\": {},\n          \"colorControl\": {\n            \"supportedColorTypes\": [\n              \"BLUE\",\n              \"GREEN\",\n              \"CYAN\",\n              \"MINT\",\n              \"SKYBLUE\",\n              \"PURPLE\",\n              \"LAVENDER\",\n              \"COOL_WHITE\",\n              \"SALMON\",\n              \"GOLD\",\n              \"RED\",\n              \"MAGENTA\",\n              \"CRIMSON\",\n              \"WARM_WHITE\",\n              \"ORANGE\",\n              \"SOFTWHITE\",\n              \"PINK\",\n              \"WHITE\",\n              \"DAY_LIGHT\",\n              \"YELLOW\",\n              \"TURQUOISE\",\n              \"LIGHT_PURPLE\"\n            ] // 지원 가능한 ColorType 타입 참고.\n          },\n          \"brightnessControl\": {}\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "Related to",
    "ColorControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > deviceTemperatureLevel",
  "hash": "#devicetemperaturelevel",
  "sentences": [
    "deviceTemperatureLevel",
    "스마트홈 기기 자체에 설정하고자 하는 온도 정보입니다. 냉장고, 오븐 등과 같이 스마트홈 기기가 자체 온도를 가질 경우를 지원합니다."
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시-5",
  "sentences": [
    "Attribute 사용 예시",
    "SetDeviceTemperatureLevel Directive Request 예시 (POST, /nugu/v1/capabilities/{Capability}/directives/{Directive})",
    "{\n  \"version\": 1,\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"DeviceTemperatureControl\",\n      \"smartHomeDirective\": \"SetDeviceTemperature\",\n      \"parameters\": {\n        \"temperatureLevel\": \"120.0\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"12345678\",\n        \"deviceTypeCode\": \"OVEN\",\n        \"deviceModelName\": \"example oven\",\n        \"friendlyName\": \"조리실\",\n        \"deviceTypeName\": \"오븐\",\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "Related to",
    "DeviceTemperatureControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > humidityLevel",
  "hash": "#humiditylevel",
  "sentences": [
    "humidityLevel",
    "스마트홈 기기에 설정하고자 하는 습도 정보입니다. 백분율 단위로 표현합니다."
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시-6",
  "sentences": [
    "Attribute 사용 예시",
    "SetHumidity Directive Request 예시 (POST, /nugu/v1/capabilities/HumidityControl/directives/SetHumidity)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"HumidityControl\",\n      \"smartHomeDirective\": \"SetHumidity\",\n      \"parameters\": {\n        \"humidityLevel\": \"40\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"D1234567\",\n        \"type\": \"DEHUMIDIFICATION\",\n        \"modelName\": \"example dehumidification\",\n        \"friendlyNameSuggestion\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"humidityControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "Related to",
    "HumidityControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > humidityDelta",
  "hash": "#humiditydelta",
  "sentences": [
    "humidityDelta",
    "스마트홈 기기에 설정된 습도를 몇 % 조절할지에 대한 정보입니다. 백분율 단위로 표현합니다."
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시-7",
  "sentences": [
    "Attribute 사용 예시",
    "IncreaseHumidity Directive Request 예시 (POST, /nugu/v1/capabilities/HumidityControl/directives/IncreaseHumidity)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"HumidityControl\",\n      \"smartHomeDirective\": \"IncreaseHumidity\",\n      \"parameters\": {\n        \"humidityDelta\": \"10\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"D1234567\",\n        \"type\": \"DEHUMIDIFICATION\",\n        \"modelName\": \"example dehumidification\",\n        \"friendlyNameSuggestion\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"humidityControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "Related to",
    "HumidityControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > mode",
  "hash": "#mode",
  "sentences": [
    "mode",
    "스마트홈 기기를 특정 모드로 설정하고자 할 때 제어 대상 스마트홈 기기에 설정할 모드 정보입니다. NUGU스마트홈에서 지원하는 SmartHomeDeviceType별 모드 정보는 아래와 같습니다.",
    "냉방모드 | COLD",
    "난방모드 | HEAT",
    "제습모드 | DEHUMIDITY",
    "송풍모드 | AIR_BLAST",
    "쾌적모드 | COMFORT",
    "쾌적뽀송모드 | COMFORT_SOFT",
    "스마트쾌적모드 | SMART_COMFORT",
    "둘레바람모드 | INDIRECT_WIND",
    "아기모드 | BABY",
    "자동모드 | AUTO",
    "아로마모드 | AROMA",
    "절전모드 | ENERGY_SAVING",
    "실내난방모드 | HEAT_ROOM",
    "외출모드 | OUTSIDE",
    "온수전용모드 | HOTWATER_ONLY",
    "온돌난방모드 | HEAT_FLOOR",
    "수동모드 | HAND",
    "급속모드 | RAPIDITY",
    "황사모드 | YELLOW_DUST",
    "취침모드 | SLEEP",
    "청정모드 | CLEAN",
    "정음모드 | SILENT",
    "저소음모드 | LOW_NOISE",
    "가습청정모드 | HUMIDIFICATION_AIR_CLEAN",
    "순환청정모드 | CIRCULAR_AIR_CLEAN",
    "베이비케어모드 | BABY_CARE",
    "듀얼청정모드 | DUAL_AIR_CLEAN",
    "공부모드 | STUDY",
    "터보모 | TURBO",
    "에어워셔모드 | AIR_WASHER",
    "HEPA에어워셔모드 | HEPA_AIR_WASHER",
    "공기청정모드 | AIR_CLEAN",
    "포시즌모드 | FOUR_SEASON",
    "쾌적제습모드 | COMPORT_DEHUMIDIFICATION",
    "빨래건조모드 | WASHING_DRY",
    "쾌면모드 | SLEEP",
    "자동제습모드 | AUTO_DEHUMIDIFICATION",
    "수동제습모드 | HAND_DEHUMIDIFICATION",
    "의류건조모드 | CLOTHES_DRY",
    "신발건조모드 | SHOES_DRY",
    "정숙모드 | QUIET",
    "연속제습모드 | CONTINUITY_DEHUMIDIFICATION",
    "연속모드 | CONTINUITY",
    "정숙연속모드 | QUIET_CONTINUITY",
    "급속냉동모드 | RAPID_FREEZE",
    "특급모드 | EXPRESS",
    "스마트파워모드 | SMART_POWER",
    "차일드락모드 | CHILD_LOCK",
    "음소거모드 | MUTE",
    "반복예약난방모드 | REPEAT_BOOKING_HEAT",
    "온수모드 | HOTWATER",
    "자동무풍모드 | AUTO_NOWIND",
    "24시간 예약난방모드 | 24_PREHEATING",
    "냉방PMV모드 | COOLING_PMV",
    "쾌속모드 | FAST",
    "스마트 모드 | SMART"
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시-8",
  "sentences": [
    "Attribute 사용 예시",
    "SetMode Directive Request 예시 (POST, /nugu/v1/capabilities/ModeControl/directives/SetMode)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"ModeControl\",\n      \"smartHomeDirective\": \"SetMode\",\n      \"parameters\": {\n        \"mode\": \"COLD\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"modeControl\": {\n            \"supportedModes\": [\n              \"COLD\",\n              \"DEHUMIDITY\",\n              \"COMFORT\",\n              \"AIR_BLAST\",\n              \"ENERGY_SAVING\"\n            ]\n          }\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        }\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "Related to",
    "ModeControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > temperatureLevel",
  "hash": "#temperaturelevel",
  "sentences": [
    "temperatureLevel",
    "스마트홈 기기에 설정하고자 하는 주변 온도 정보입니다. 섭씨 온도 단위를 지원합니다."
  ]
},
    {
  "title": "SmartHomeAttribute > Attribute 사용 예시",
  "hash": "#attribute-사용-예시-9",
  "sentences": [
    "Attribute 사용 예시",
    "SetTemperature Directive Request 예시 (POST, /nugu/v1/capabilities/TemperatureControl/directives/SetTemperature)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"TemperatureControl\",\n      \"smartHomeDirective\": \"SetTemperature\",\n      \"parameters\": {\n        \"temperatureLevel\": \"20\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"temperatureControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "Related to",
    "TemperatureControl Interface"
  ]
},
    {
  "title": "SmartHomeAttribute > temperatureDelta",
  "hash": "#temperaturedelta",
  "sentences": [
    "temperatureDelta",
    "스마트홈 기기의 설정된 온도를 조절하기 위한 단위 표현입니다. 섭씨 온도 단위를 지원합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability",
  "order": 80,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype",
  "order": 57,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomeerror",
  "order": 95,
  "indexes": [
    {
  "title": "SmartHomeError",
  "hash": "",
  "sentences": [
    "SmartHomeError",
    "NUGU스마트홈에서 지원하고 있는 Error와 Exception에 대한 내용입니다. ServiceProvider는 SmartHomeBackendProxy 구현 시 아래 리스트를 참조하여 SmartHomeDevice 제어 및 상태 조회 시 발생하는 오류 혹은 예외상황에 맞는 error code를 응답해야 합니다."
  ]
},
    {
  "title": "SmartHomeError > Error Response Format",
  "hash": "#error-response-format",
  "sentences": [
    "Error Response Format",
    "SmartHome의 Error는 SmartHomeBackendProxy에서 모든 처리가 불가한 Global-level error와 SmartHomeDevice 제어 시에 발생하는 다양한 원인의 Error인 Device-level error로 구분됩니다. 아래 Global-level error와 Device-level error의 예시 format을 참조해주세요."
  ]
},
    {
  "title": "SmartHomeError > Global-level error",
  "hash": "#global-level-error",
  "sentences": [
    "Global-level error",
    "Service Provider에 공통 exception으로 처리하고자 하는 경우 사용합니다.",
    "예1",
    "예2",
    "예3",
    "{\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\",\n  \"error\": {\n    \"code\": 401, // HTTP status code\n    \"message\": \"invalid token\"\n  }\n}",
    "{\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\",\n  \"error\": {\n    \"code\": 429, // HTTP status code\n    \"message\": \"Too many requests, 요청 한도를 넘었니다.\"\n  }\n}",
    "{\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\",\n  \"error\": {\n    \"code\": 503, // HTTP status code\n    \"message\": \"Service Unavailable, 소프트웨어 업데이트 중입니다.\"\n  }\n}"
  ]
},
    {
  "title": "SmartHomeError > Device-level error",
  "hash": "#device-level-error",
  "sentences": [
    "Device-level error",
    "{\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\",\n  \"data\": [\n    {\n      \"resultCode\": \"NotSupportBrightnessControl\",\n      \"smartHomeDevice\": {\n        ...\n      },\n      \"errorProperties\": {}\n    },\n    {\n      \"resultCode\": \"OK\",\n      \"smartHomeDevice\": {\n        ...\n      },\n      \"properties\": {}\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/sound",
  "order": 165,
  "indexes": [
    {
  "title": "Sound",
  "hash": "",
  "sentences": [
    "Sound",
    "디바이스의 음원 파일 재생을 위한 규격"
  ]
},
    {
  "title": "Sound > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.0 입니다.",
    "1.0 | 2020.04.01 | 규격 추가"
  ]
},
    {
  "title": "Sound > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Sound > SoundAgent 사용",
  "hash": "#soundagent-사용",
  "sentences": [
    "SoundAgent 사용",
    "Sound interface 규격에 따른 디바이스의 동작 제어는 SoundAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 SoundAgent instance 에 접근할 수 있습니다.",
    "val soundAgent = nuguAndroidClient.getAgent(DefaultSoundAgent.NAMESPACE)",
    "NuguAndroidClient 생성시 SoundProvider 를 추가합니다.",
    "class MySoundProvider: SoundProvider {\n    ...\n}\nNuguAndroidClient.Builder(...)\n    .enableSound(MySoundProvider())",
    "NuguClient instance 를 통해 SoundAgent instance 에 접근할 수 있습니다.",
    "let soundAgent = nuguClient.soundAgent",
    "CapabilityFactory::makeCapability 함수로 SoundAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto sound_handler(std::shared_ptr<ISoundHandler>(\n        CapabilityFactory::makeCapability<SoundAgent, ISoundHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(sound_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "Sound > 재생",
  "hash": "#재생",
  "sentences": [
    "재생",
    "디바이스 음원 재생이",
    "Beep",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "SoundProvider 를 구현합니다.",
    "class MySoundProvider: SoundProvider {\n    override fun getContentUri(name: SoundProvider.BeepName): URI {\n        return URI.create(\n            Uri.parse(ContentResolver.SCHEME_ANDROID_RESOURCE + \"://\" + context.packageName + \"/\" + R.raw.responsefa\n                .toString()\n        );\n    }\n}",
    "SoundAgentDelegate 를 추가합니다.",
    "class MySoundAgentDelegate: SoundAgentDelegate {\n    func soundAgentDidChange(state: SoundState, dialogRequestId: String) {\n        ...\n    }\n}\nsoundAgent.delegate = MySoundAgentDelegate()",
    "ISoundListener 를 추가합니다.",
    "class MySoundListener : public ISoundListener {\npublic:\n    ...\n\n    void handleBeep(BeepType beep_type) override\n    {\n        ...\n    }\n};\nauto sound_listener(std::make_shared<MySoundListener>());\nCapabilityFactory::makeCapability<SoundAgent, ISoundHandler>(sound_listener.get());"
  ]
},
    {
  "title": "Sound > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Sound\": {\n    \"version\": \"1.0\"\n  }\n}"
  ]
},
    {
  "title": "Sound > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
},
    {
  "title": "Sound > Beep",
  "hash": "#beep",
  "sentences": [
    "Beep",
    "Beep 유형의 음원 재생 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"Sound\",\n    \"name\": \"Beep\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"beepName\": \"{{STRING}}\"\n  }\n}",
    "beepName | string | Y | RESPONSE_FAIL: Play 응답 실패"
  ]
},
    {
  "title": "Sound > Event",
  "hash": "#event",
  "sentences": [
    "Event"
  ]
},
    {
  "title": "Sound > BeepSucceeded",
  "hash": "#beepsucceeded",
  "sentences": [
    "BeepSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Sound\",\n    \"name\": \"BeepSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/source-code",
  "order": 200,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/speaker",
  "order": 160,
  "indexes": [
    {
  "title": "Speaker",
  "hash": "",
  "sentences": [
    "Speaker",
    "디바이스의 볼륨을 제어하기 위한 규격"
  ]
},
    {
  "title": "Speaker > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.2 입니다.",
    "1.0 | 2020.03.13 | 규격 추가",
    "1.1 | 2020.06.22 | Context 의 volumes.name 목록 변경",
    "1.2 | 2020.06.26 | Context 에 defaultVolumeLevel 필드 추가Context 의 volumnes 에 group 필드 추가"
  ]
},
    {
  "title": "Speaker > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Speaker > SpeakerAgent 사용",
  "hash": "#speakeragent-사용",
  "sentences": [
    "SpeakerAgent 사용",
    "Speaker interface 규격에 따른 디바이스의 동작 제어는 SpeakerAgent 가 처리합니다.",
    "iOS 는 SpeakerAgent 를 지원하지 않습니다.",
    "Android",
    "Linux",
    "NuguAndroidClient instance 를 통해 SpeakerAgent instance 에 접근할 수 있습니다.",
    "val speakerAgent = nuguAndroidClient.getAgent(DefaultSpeakerAgent.NAMESPACE)",
    "NuguAndroidClient 에 볼륨 제어를 위한 기본 Speaker 구현이 포함되어 있습니다.",
    "Speaker 을 직접 구현하려면 NuguAndroidClient 생성시 SpeakerFactory 를 추가합니다.",
    "class MySpeaker: Speaker {\n    ...\n}\nNuguAndroidClient.Builder(...)\n    .speakerFactory(object : SpeakerFactory {\n        override fun createNuguSpeaker(): Speaker? = MySpeaker()\n\n        override fun createAlarmSpeaker(): Speaker? = MySpeaker()\n\n        override fun createCallSpeaker(): Speaker? = MySpeaker()\n\n        override fun createExternalSpeaker(): Speaker? = MySpeaker()\n\n        override fun createSpeaker(type: Speaker.Type): Speaker? {\n            return when (type) {\n                Speaker.Type.NUGU -> MySpeaker()\n                Speaker.Type.ALARM -> MySpeaker()\n                else -> MySpeaker()\n            }\n        }\n    })",
    "CapabilityFactory::makeCapability 함수로 SpeakerAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto speaker_handler(std::shared_ptr<ISpeakerHandler>(\n        CapabilityFactory::makeCapability<SpeakerAgent, ISpeakerHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(speaker_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "Speaker > Context 구성",
  "hash": "#context-구성",
  "sentences": [
    "Context 구성",
    "Play 에서 디바이스의 볼륨을 제어하기 위해서는 디바이스의 볼륨 정보를",
    "Context",
    "에 포함시켜 주어야 합니다.",
    "Android",
    "Linux",
    "각 Speaker.Type 의 Speaker 를 구현합니다.",
    "class MySpeaker: Speaker {\n    override fun getSpeakerSettings(): Speaker.SpeakerSettings? {\n        ...\n    }\n}",
    "SpeakerType 의 SpeakerInfo 를 설정합니다.",
    "speaker_handler->setSpeakerInfo(speakers)"
  ]
},
    {
  "title": "Speaker > 볼륨 제어",
  "hash": "#볼륨-제어",
  "sentences": [
    "볼륨 제어",
    "디바이스의 볼륨 제어가",
    "SetVolume",
    "directive 로 요청될 수 있습니다.",
    "디바이스의 볼륨 음소거 제어가",
    "SetMute",
    "directive 로 요청될 수 있습니다.",
    "Android",
    "Linux",
    "Speaker 를 구현합니다.",
    "class MySpeaker: Speaker {\n    override fun setVolume(volume: Int, rate: Rate = Rate.FAST): Boolean {\n        ...\n    }\n\n    override fun setMute(mute: Boolean): Boolean {\n        ...\n    }\n\n    ...\n}",
    "ISpeakerListener 를 추가합니다.",
    "class MySpeakerListener : public ISpeakerListener {\npublic:\n    ...\n\n    void requestSetMute(const std::string &ps_id, SpeakerType type, bool mute) override\n    {\n        ...\n    }\n\n    void requestSetVolume(const std::string &ps_id, SpeakerType type, int volume, bool linear) override\n    {\n        ...\n    }\n};\nauto speaker_listener(std::make_shared<MySpeakerListener>());\nCapabilityFactory::makeCapability<SpeakerAgent, ISpeakerHandler>(speaker_listener.get());"
  ]
},
    {
  "title": "Speaker > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Speaker\": {\n    \"version\": \"1.0\",\n    \"volumes\": [\n      {\n        \"name\": \"{{STRING}}\",\n        \"group\": \"{{STRING}}\",\n        \"volume\": {{LONG}},\n        \"minVolume\": {{LONG}},\n        \"maxVolume\": {{LONG}},\n        \"defaultVolumeStep\": {{LONG}},\n        \"defaultVolumeLevel\": {{LONG}},\n        \"muted\": {{BOOLEAN}}\n      }\n    ]\n  }\n}",
    "volumes | array of object | N | 볼륨 조절 불가한 경우는 전달하지 않음",
    "volumes.name | string | Y | NUGU(MUSIC+VOICE_COMMAND)MUSICRINGTONECALLNOTIFICATIONALARMVOICE_COMMANDNAVIGATIONSYSTEM_SOUNDReference: https://source.android.com/devices/audio/attributes#contexts",
    "volumes.group | string | N | volume의 group 값으로 영문자와 숫자를 이용하여 구성할 수 있음.(Play에서는 group 값을 mapping하여 TTS를 만들 때 사용할 수 있음) grouping 되어 있지 않은 경우는 전달하지 않음 Reference: https://source.android.com/devices/automotive/audio#volume-and-groups",
    "volumes.volume | long | N | 현재 설정된 볼륨 볼륨 조절 불가한 경우는 전달하지 않음",
    "volumes.minVolume | long | N | 설정 가능한 최대 볼륨 볼륨 조절 불가한 경우는 전달하지 않음",
    "volumes.maxVolume | long | N | 설정 가능한 최소 볼륨 볼륨 조절 불가한 경우는 전달하지 않음",
    "volumes.defaultVolumeStep | long | N | 기본 볼륨 단계 볼륨 조절 불가한 경우는 전달하지 않음",
    "volumnes.defaultVolumeLevel | long | N | 기본 볼륨 값 볼륨 조절 불가한 경우는 전달하지 않음 version 1.2 이전에서는 전달하지 않음",
    "volumes.muted | boolean | N | 음소거 상태 음소거 설정이 불가한 경우는 전달하지 않음"
  ]
},
    {
  "title": "Speaker > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive"
  ]
},
    {
  "title": "Speaker > SetVolume",
  "hash": "#setvolume",
  "sentences": [
    "SetVolume",
    "{\n  \"header\": {\n    \"namespace\": \"Speaker\",\n    \"name\": \"SetVolume\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"rate\": \"{{STRING}}\",\n    \"volumes\": [\n      {\n        \"name\": \"{{STRING}}\",\n        \"volume\": {{LONG}}\n      }\n    ]\n  }\n}",
    "name | string | Y | Context 참조",
    "rate | string | N | SLOW, FAST- SLOW: 점진적으로 변경 (max 값으로 설정하는 시나리오에서 사용)- FAST : 바로 변경",
    "volume | long | Y | 설정할 volume"
  ]
},
    {
  "title": "Speaker > SetMute",
  "hash": "#setmute",
  "sentences": [
    "SetMute",
    "{\n  \"header\": {\n    \"namespace\": \"Speaker\",\n    \"name\": \"SetVolume\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"rate\": \"{{STRING}}\",\n    \"volumes\": [\n      {\n        \"name\": \"{{STRING}}\",\n        \"mute\": {{BOOLEAN}}\n      }\n    ]\n  }\n}",
    "name | string | Y | Context 참조",
    "mute | boolean | Y | true / false"
  ]
},
    {
  "title": "Speaker > Event",
  "hash": "#event",
  "sentences": [
    "Event"
  ]
},
    {
  "title": "Speaker > SetVolumeSucceeded",
  "hash": "#setvolumesucceeded",
  "sentences": [
    "SetVolumeSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Speaker\",\n    \"name\": \"SetVolumeSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Speaker > SetVolumeFailed",
  "hash": "#setvolumefailed",
  "sentences": [
    "SetVolumeFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Speaker\",\n    \"name\": \"SetVolumeFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "Speaker > SetMuteSucceeded",
  "hash": "#setmutesucceeded",
  "sentences": [
    "SetMuteSucceeded",
    "{\n  \"header\": {\n    \"namespace\": \"Speaker\",\n    \"name\": \"SetMuteSucceeded\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/ios/start",
  "order": 175,
  "indexes": [
    {
  "title": "시작하기",
  "hash": "",
  "sentences": [
    "시작하기"
  ]
},
    {
  "title": "시작하기 > Step 1: 최소 요구사항 확인하기",
  "hash": "#step-1-최소-요구사항-확인하기",
  "sentences": [
    "Step 1: 최소 요구사항 확인하기",
    "Xcode 11.0 or later",
    "Swift 5.1",
    "iOS 12.0+ (v1.3.0 or more) iOS 10.0+ (less than v1.3.0)",
    "macOS 10.15.0+ (v1.4.0 or more) including mac catalyst",
    "tvOS 13.0+ (v1.4.0 or more)",
    "iOS Nugu SDK 는 1.2.8 이상에서 다양한 인터페이스와 안정성을 보장합니다. \niOS12 이상에서는 최신 버전을, iOS11 미만에서는 1.2.8 사용을 권장합니다."
  ]
},
    {
  "title": "시작하기 > Step 2: NUGU SDK 설치하기",
  "hash": "#step-2-nugu-sdk-설치하기",
  "sentences": [
    "Step 2: NUGU SDK 설치하기",
    "Cocoapods",
    "Carthage",
    "Podfile에 다음과 같이 의존성을 추가합니다.",
    "target '{Your_Application}' do\n  pod 'NuguClientKit'\nend",
    "터미널을 열어 Podfile이 있는 프로젝트 경로에서 아래 Script를 실행합니다.",
    "$ pod install",
    "Cartfile에 다음과 같이 의존성을 추가합니다.",
    "github \"nugu-developers/nugu-ios\"",
    "터미널을 열어 Podfile이 있는 프로젝트 경로에서 아래 Script를 실행합니다.",
    "carthage update"
  ]
},
    {
  "title": "시작하기 > Step 3: 프로젝트 설정하기",
  "hash": "#step-3-프로젝트-설정하기",
  "sentences": [
    "Step 3: 프로젝트 설정하기"
  ]
},
    {
  "title": "시작하기 > PoC 정보 입력하기",
  "hash": "#poc-정보-입력하기",
  "sentences": [
    "PoC 정보 입력하기",
    "NUGU PoC를 생성하기 위해서는 NUGU Developers를 통해 제휴가 필요합니다.\n더 자세한 내용은 NUGU SDK 소개에서 확인이 가능합니다.",
    "체험판은 체험판 신청을 통해 발급 가능합니다.",
    "발급받은 PoC 정보를 확인하기 위해서",
    "NUGU SDK PoC목록",
    "으로 이동해서 Client ID, Client Secret, Redirect URI 정보를 확인하세요.",
    "체험판은 체험판 신청 내역에서 확인 가능합니다.",
    "NUGU SDK를 사용하는 앱 간에 URL Scheme 충돌을 방지하기 위해,\nRedirect URI는 nugu.user.{client-id}://auth로 설정하는 것을 권고합니다.",
    "체험판은 Redirect URI가 필요하지 않습니다."
  ]
},
    {
  "title": "시작하기 > info.plist 파일에 URL Scheme 추가",
  "hash": "#infoplist-파일에-url-scheme-추가",
  "sentences": [
    "info.plist 파일에 URL Scheme 추가",
    "info.plist",
    "파일에 다음과 같이 URL Scheme을 추가합니다.",
    "info.plist",
    "<dict>\n  <key>CFBundleURLTypes</key>\n  <array>\n    <dict>\n    <key>CFBundleURLSchemes</key>\n    <array>\n      <string>nugu.user.{client-id}</string>\n    </array>\n    </dict>\n  </array>\n</dict>"
  ]
},
    {
  "title": "시작하기 > Configuration 파일 설정하기",
  "hash": "#configuration-파일-설정하기",
  "sentences": [
    "Configuration 파일 설정하기"
  ]
},
    {
  "title": "시작하기 > 다운로드 받기",
  "hash": "#다운로드-받기",
  "sentences": [
    "다운로드 받기",
    "NUGU SDK PoC목록",
    "에서 nugu-config.plist 파일을 다운로드 받습니다.",
    "체험판은 체험판 신청 내역에서 nugu-config.plist 파일을 다운로드 받습니다."
  ]
},
    {
  "title": "시작하기 > 설정하기",
  "hash": "#설정하기",
  "sentences": [
    "설정하기",
    "다운로드 받은 파일을 Application 에 복사하고 target 으로 추가합니다.",
    "Example : {application path}/Supporting Files/nugu-config.plist",
    "ConfigurationStore",
    "을 초기화 합니다.",
    "AppDelegate.swift",
    "import NuguClientKit\n\nfunc application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey:\nAny]?) -> Bool {\n    ConfigurationStore.shared.configure()\n    return true\n}"
  ]
},
    {
  "title": "시작하기 > 어플리케이션 권한 설정하기",
  "hash": "#어플리케이션-권한-설정하기",
  "sentences": [
    "어플리케이션 권한 설정하기",
    "NUGU 서비스는 음성인식을 위하여 마이크 권한 문구를 Info.plist 파일에 추가합니다.",
    "info.plist",
    "<key>NSMicrophoneUsageDescription</key>\n<string>For speech recognition</string>"
  ]
},
    {
  "title": "시작하기 > Step 4: NUGU 로그인 추가",
  "hash": "#step-4-nugu-로그인-추가",
  "sentences": [
    "Step 4: NUGU 로그인 추가",
    "NUGU 로그인은",
    "NUGU 회원 연동 방식",
    "과",
    "NUGU 회원 미사용 방식",
    "두 가지로 제공됩니다.",
    "체험판은 NUGU 회원 미사용 방식만 가능합니다.",
    "NUGU 서비스를 이용하기 위해서는 OAuth 2.0 인증이 필요합니다.\nOAuth 2.0 API 는 Authentication 에서 확인이 가능합니다."
  ]
},
    {
  "title": "시작하기 > NUGU 회원 연동 방식으로 로그인",
  "hash": "#nugu-회원-연동-방식으로-로그인",
  "sentences": [
    "NUGU 회원 연동 방식으로 로그인",
    "NUGU 회원 연동 방식을 사용하기 위해서는 T아이디 연동이 필요합니다."
  ]
},
    {
  "title": "시작하기 > 앱 델리게이트 연결",
  "hash": "#앱-델리게이트-연결",
  "sentences": [
    "앱 델리게이트 연결",
    "인 앱 브라우저를 통한 인증 결과를",
    "NuguLoginKit",
    "에서 처리하기 위해 다음과 같이",
    "AppDelegate",
    "클래스에 추가해야 합니다.",
    "AppDelegate.swift",
    "import NuguLoginKit\nimport NuguClientKit\n\nfunc application(_ app: UIApplication, open url: URL, options: [UIApplication.OpenURLOptionsKey: Any] = [:]) -> Bool {\n    if ConfigurationStore.shared.isAuthorizationRedirectUrl(url: url) {\n        NuguOAuthClient.handle(url: url)\n        return true\n    }\n    return false\n}"
  ]
},
    {
  "title": "시작하기 > 인 앱 브라우저를 통해 로그인",
  "hash": "#인-앱-브라우저를-통해-로그인",
  "sentences": [
    "인 앱 브라우저를 통해 로그인",
    "PoC 정보를 이용하여 다음과 같이",
    "OAuthManager",
    "를 통해 값을 설정한 후에 인 앱 브라우저(",
    "SFSafariViewController",
    ")를 이용한 T아이 로그인을 시도합니다. 인증 절차가 모두 완료되면 결과를 Closure를 통해 받을 수 있습니다.",
    "ViewController.swift",
    "import NuguLoginKit\nimport NuguClientKit\n\nlazy private(set) var oauthClient: NuguOAuthClient = {\n    do {\n        return try NuguOAuthClient(serviceName: Bundle.main.bundleIdentifier ?? \"NuguSample\")\n    } catch {\n        return NuguOAuthClient(deviceUniqueId: \"{device-unique-id}\")\n    }\n}()\n\nfunc login() {\n    oauthClient.loginWithTid(parentViewController: viewController) { (result) in\n        switch result {\n        case .success(let authInfo):\n            // Save authInfo\n        case .failure(let error):\n            // Occured error\n        }\n    }\n}"
  ]
},
    {
  "title": "시작하기 > 로그인 정보 갱신",
  "hash": "#로그인-정보-갱신",
  "sentences": [
    "로그인 정보 갱신",
    "발급 받은",
    "refresh-token",
    "이 이미 있다면, 이 후에는 인 앱 브라우저 없이 로그인 정보를 갱신할 수 있습니다.",
    "ViewController.swift",
    "func refresh() {\n    oauthClient.loginSilentlyWithTid(refreshToken: refreshToken) { (result) in\n        switch result {\n        case .success(let authInfo):\n            // Save authInfo\n        case .failure(let error):\n            // Occured error\n        }\n    }\n}"
  ]
},
    {
  "title": "시작하기 > NUGU 회원 미사용 방식으로 로그인",
  "hash": "#nugu-회원-미사용-방식으로-로그인",
  "sentences": [
    "NUGU 회원 미사용 방식으로 로그인"
  ]
},
    {
  "title": "시작하기 > 로그인",
  "hash": "#로그인",
  "sentences": [
    "로그인",
    "PoC 정보를 이용하여 다음과 같이",
    "OAuthManager",
    "를 통해 값을 설정한 후 로그인을 시도합니다. 인증 절차가 모두 완료되면 결과를 Closure를 통해 받을 수 있습니다.",
    "ViewController.swift",
    "import NuguLoginKit\nimport NuguClientKit\n\nlazy private(set) var oauthClient: NuguOAuthClient = {\n    do {\n        return try NuguOAuthClient(serviceName: Bundle.main.bundleIdentifier ?? \"NuguSample\")\n    } catch {\n        return NuguOAuthClient(deviceUniqueId: \"{device-unique-id}\")\n    }\n}()\n\nfunc login() {\n    oauthClient.loginAnonymously { (result) in\n        switch result {\n        case .success(let authInfo):\n            // Save authInfo\n        case .failure(let error):\n            // Occured error\n        }\n    }\n}"
  ]
},
    {
  "title": "시작하기 > Step5. NUGU 음성인식 사용하기",
  "hash": "#step5-nugu-음성인식-사용하기",
  "sentences": [
    "Step5. NUGU 음성인식 사용하기"
  ]
},
    {
  "title": "시작하기 > 마이크 권한 획득",
  "hash": "#마이크-권한-획득",
  "sentences": [
    "마이크 권한 획득",
    "음성인식을 요청 하기 전에 마이크 권한을 요청해 획득합니다.",
    "ViewController.swift",
    "AVAudioSession.sharedInstance().requestRecordPermission { hasPermission in }"
  ]
},
    {
  "title": "시작하기 > AVAudioSession 설정",
  "hash": "#avaudiosession-설정",
  "sentences": [
    "AVAudioSession 설정",
    "NUGU 서비스를 이용하기 위해서는",
    "AVAudioSession",
    "의",
    "Category",
    "를",
    ".playAndRecord",
    "로 설정이 필요합니다.",
    "ViewController.swift",
    "func setAudioSession() throws {\n    try AVAudioSession.sharedInstance().setCategory(\n        .playAndRecord,\n        mode: .default,\n        options: [.defaultToSpeaker, .allowBluetoothA2DP]\n    )\n}"
  ]
},
    {
  "title": "시작하기 > NUGU 음성인식 요청",
  "hash": "#nugu-음성인식-요청",
  "sentences": [
    "NUGU 음성인식 요청",
    "음성인식을 요청하기 위해서는 아래와 같은 코드를 작성해야 합니다.",
    "⁣1.",
    "NuguClientKit",
    "을 불러옵니다.",
    "import NuguClientKit",
    "⁣2.",
    "NuguClient",
    "인스턴스를 생성합니다.",
    "let nuguBuilder = NuguClient.Builder()\nlet client = nuguBuilder.build()",
    "⁣3. 로그인 결과로 받은 Access-token을",
    "NuguClientDelegate",
    "로 전달해야 합니다.",
    "func nuguClientRequestAccessToken() -> String? {\n   return \"{access-token}\"\n}",
    "⁣4. NUGU 서버와의 연결 이후 음성인식을 요청합니다.",
    "client.asrAgent.startRecognition(initiator: .user)"
  ]
},
    {
  "title": "시작하기 > 더 알아보기",
  "hash": "#더-알아보기",
  "sentences": [
    "더 알아보기"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/linux/start",
  "order": 197,
  "indexes": [
    {
  "title": "시작하기",
  "hash": "",
  "sentences": [
    "시작하기"
  ]
},
    {
  "title": "시작하기 > Step 1: 최소 요구사항 확인하기",
  "hash": "#step-1-최소-요구사항-확인하기",
  "sentences": [
    "Step 1: 최소 요구사항 확인하기",
    "Ubuntu bionic(18.04)"
  ]
},
    {
  "title": "시작하기 > Step 2: NUGU SDK 설치하기",
  "hash": "#step-2-nugu-sdk-설치하기",
  "sentences": [
    "Step 2: NUGU SDK 설치하기",
    "NUGU SDK for Linux는 설치에 필요한 패키지(",
    "*.deb",
    ") 파일들을 쉽게 다운로드 받을 수 있도록 Ubuntu에서 제공하는",
    "PPA",
    "(",
    "https://launchpad.net",
    ")를 통해 배포하고 있습니다."
  ]
},
    {
  "title": "시작하기 > PPA 추가하기",
  "hash": "#ppa-추가하기",
  "sentences": [
    "PPA 추가하기",
    "아래 명령을 통해 시스템에 PPA를 추가할 수 있습니다.",
    "Ubuntu",
    "Debian",
    "sudo add-apt-repository ppa:nugulinux/sdk\nsudo apt-get update",
    "사용하고 있는 Debian 버전에 따라 NUGU SDK의 Bionic 또는 Xenial PPA 주소를 추가해야 합니다.",
    "# Debian 버전이 Buster일 경우\n$ sudo vi /etc/apt/sources.list.d/nugu.list\ndeb http://ppa.launchpad.net/nugulinux/sdk/ubuntu bionic main\n\n# Debian 버전이 Stretch일 경우\n$ sudo vi /etc/apt/sources.list.d/nugu.list\ndeb http://ppa.launchpad.net/nugulinux/sdk/ubuntu xenial main",
    "이제 NUGU SDK PPA에 대한 인증키를 설치해야 합니다.",
    "sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key 5DE933034EEA59C4\nsudo apt-get update"
  ]
},
    {
  "title": "시작하기 > 패키지 설치하기",
  "hash": "#패키지-설치하기",
  "sentences": [
    "패키지 설치하기",
    "NUGU SDK for Linux는 아래의 패키지들로 구성되어 있습니다.",
    "libnugu | NUGU SDK 동작에 필요한 패키지- shared library(*.so.{version} files)",
    "libnugu-plugins-default | 기본 제공 플러그인 모음 패키지- gstreamer.so, opus.so, portaudio.so 등",
    "libnugu-dev | 빌드에 필요한 패키지- header files, pkg-config(nugu.pc) 및 libnugu.so",
    "libnugu-examples | 예제 프로그램 패키지- 콘솔 기반의 예제 프로그램, OAuth2 클라이언트 예제",
    "아래 명령을 통해 시스템에 설치할 수 있습니다.",
    "sudo apt-get install libnugu libnugu-plugins-default libnugu-dev libnugu-examples"
  ]
},
    {
  "title": "시작하기 > Step 3: 프로젝트 설정하기",
  "hash": "#step-3-프로젝트-설정하기",
  "sentences": [
    "Step 3: 프로젝트 설정하기"
  ]
},
    {
  "title": "시작하기 > PoC 정보 입력하기",
  "hash": "#poc-정보-입력하기",
  "sentences": [
    "PoC 정보 입력하기",
    "NUGU PoC를 생성하기 위해서는 NUGU Developers를 통해 제휴가 필요합니다.\n더 자세한 내용은 NUGU SDK 소개에서 확인이 가능합니다.",
    "체험판은 체험판 신청을 통해 발급 가능합니다.",
    "발급받은 PoC 정보를 확인하기 위해서",
    "NUGU SDK PoC목록",
    "으로 이동해서 Client ID, Client Secret, Redirect URI 정보를 확인하세요.",
    "체험판은 체험판 신청 내역에서 확인 가능합니다.",
    "체험판은 Redirect URI가 필요하지 않습니다."
  ]
},
    {
  "title": "시작하기 > 음성인식 모델 파일 설정하기",
  "hash": "#음성인식-모델-파일-설정하기",
  "sentences": [
    "음성인식 모델 파일 설정하기"
  ]
},
    {
  "title": "시작하기 > 다운로드 받기",
  "hash": "#다운로드-받기",
  "sentences": [
    "다운로드 받기",
    "NUGU SDK PoC목록",
    "에서 음성인식 모델 파일을 다운로드 받습니다.",
    "체험판은 체험판 신청 내역에서 음성인식 모델파일을 다운로드 받습니다."
  ]
},
    {
  "title": "시작하기 > 설정하기",
  "hash": "#설정하기",
  "sentences": [
    "설정하기",
    "다운로드가 완료되면, Linux 디바이스에 임의의 디렉토리를 생성한 후, 아래와 같은 파일명으로 복사해 주시면 됩니다.",
    "nugu_model_wakeup_net.raw - keyword detection에 사용되는 model 파일 (1/2)",
    "nugu_model_wakeup_search.raw - keyword detection에 사용되는 model 파일 (2/2)",
    "nugu_model_epd.raw - VAD(Voice Activity Detection) 에 사용되는 model 파일"
  ]
},
    {
  "title": "시작하기 > OAuth2 client 구현하기",
  "hash": "#oauth2-client-구현하기",
  "sentences": [
    "OAuth2 client 구현하기",
    "NUGU SDK for Linux는 아래의 이유로 인해 iOS, Android와 달리 인증을 위한 기능을 제공하고 있지 않습니다.",
    "Linux 기반의 제품은 대부분 디스플레이가 없어 별도의 연동 어플리케이션을 통한 사용자 인증을 필요로 합니다.",
    "다른 플랫폼과 달리 GUI framework이 다양하기 때문에 표준화된 인증 UI를 SDK에서 제공해 주기 어렵습니다.",
    "하지만, 인증을 쉽게 테스트할 수 있도록 아래의 NUGU SDK for Linux Github에 Python으로 작성된 별도의 웹기반 OAuth2 client 예제를 제공하고 있습니다.",
    "NUGU SDK for Linux OAuth2 client python sample",
    "NUGU SDK for Linux. Contribute to nugu-developers/nugu-linux development by creating an account on GitHub.",
    "NUGU SDK PoC목록",
    "에서 nugu-config.json 파일을 다운로드 받은 후, Client ID, Client Secret 정보를 활용하여 위 OAuth2 client 예제를 통해 인증을 진행할 수 있습니다.",
    "체험판은 체험판 신청 내역에서 nugu-config.json 파일을 다운로드 받습니다."
  ]
},
    {
  "title": "시작하기 > Step 4: NUGU 사용하기",
  "hash": "#step-4-nugu-사용하기",
  "sentences": [
    "Step 4: NUGU 사용하기"
  ]
},
    {
  "title": "시작하기 > GMainLoop 사용하기",
  "hash": "#gmainloop-사용하기",
  "sentences": [
    "GMainLoop 사용하기",
    "NUGU SDK for Linux는 event-driven 방식으로 어플리케이션을 개발할 수 있도록",
    "glib",
    "에서 제공하는",
    "event loop",
    "을 사용하고 있습니다. 따라서",
    "main()",
    "코드는 아래 구조로 작성되어야 합니다.",
    "#include <glib.h>\n\nint main(int argc, char *argv[])\n{\n  GMainLoop *loop;\n\n  /* event loop 생성 */\n  loop = g_main_loop_new (NULL, FALSE);\n\n  /* 사용자의 초기화 코드 등록(nugu sdk 코드 등) */\n\n  /* event loop 시작 */\n  g_main_loop_run (loop);\n\n  /* event loop 해제 */\n  g_main_loop_unref (loop);\n\n  return 0;\n}"
  ]
},
    {
  "title": "시작하기 > NUGU 음성인식 사용하기",
  "hash": "#nugu-음성인식-사용하기",
  "sentences": [
    "NUGU 음성인식 사용하기",
    "음성인식을 요청하기 위해서는 아래와 같은 코드를 작성해야 합니다.",
    "⁣1. 헤더 파일(nugu_client.hh, capability_factory.hh)을 include에 포함시키고,",
    "NuguClientKit, NuguCapability",
    "namespace를 사용하도록 설정합니다.",
    "#include <clientkit/nugu_client.hh>\n#include <capability/capability_factory.hh>\n\nusing namespace NuguClientKit;\nusing namespace NuguCapability;",
    "⁣2.",
    "IASRHandler",
    "객체를 생성하고, 음성인식 모델 파일을 설정합니다.",
    "auto my_asr_listener(std::make_shared<MyASR>());\nauto asr_handler(std::shared_ptr<IASRHandler>(\n   CapabilityFactory::makeCapability<ASRAgent, IASRHandler>(my_asr_listener.get())));\nasr_handler->setAttribute(ASRAttribute { \"/var/lib/nugu/model\", \"CLIENT\", \"PARTIAL\" });",
    "⁣3.",
    "NuguClient",
    "객체를 생성하고,",
    "ASR Capability",
    "추가 후, SDK를 초기화 합니다.",
    "NuguClient* nugu_client = new NuguClient());\nnugu_client->getCapabilityBuilder()\n       ->add(CapabilityType::ASR, my_asr_listener.get())\n       ->construct();\nnugu_client->initialize();",
    "⁣4. 음성인식 기능을 사용하기 위해 OAuth2 access-token 설정 후, NUGU 서비스 연결을 요청합니다.",
    "auto network_manager(nugu_client->getNetworkManager());\nnetwork_manager->setToken(\"...\");\nnetwork_manager->connect();",
    "전체 코드는 Github의 아래 wiki에서 확인할 수 있습니다.",
    "NUGU SDK for Linux Wiki - Create your first application",
    "NUGU SDK for Linux. Contribute to nugu-developers/nugu-linux development by creating an account on GitHub."
  ]
},
    {
  "title": "시작하기 > Build",
  "hash": "#build",
  "sentences": [
    "Build",
    "NUGU SDK for Linux는 빌드 설정을 쉽게 구성할 수 있도록",
    "pkg-config",
    "파일을 제공합니다. 따라서, 아래와 같이",
    "nugu.pc",
    "를 사용해 빌드 명령을 수행할 수 있습니다.",
    "$ g++ -std=c++11 hello.cc `pkg-config --cflags --libs nugu` -o hello"
  ]
},
    {
  "title": "시작하기 > 더 알아보기",
  "hash": "#더-알아보기",
  "sentences": [
    "더 알아보기"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/start",
  "order": 185,
  "indexes": [
    {
  "title": "시작하기",
  "hash": "",
  "sentences": [
    "시작하기"
  ]
},
    {
  "title": "시작하기 > Step 1:최소 요구사항",
  "hash": "#step-1최소-요구사항",
  "sentences": [
    "Step 1:최소 요구사항",
    "Android 5.0(API level 21) 이상에서 지원합니다.",
    "Android 4.4(API level 19)에서도 동작하지만, TLS v1.2로 설정이 필요합니다."
  ]
},
    {
  "title": "시작하기 > Step 2: NUGU  SDK 설치하기",
  "hash": "#step-2-nugu--sdk-설치하기",
  "sentences": [
    "Step 2: NUGU  SDK 설치하기"
  ]
},
    {
  "title": "시작하기 > 레포지토리 추가하기",
  "hash": "#레포지토리-추가하기",
  "sentences": [
    "레포지토리 추가하기",
    "프로젝트의 build.gradle에 레포지토리를 추가합니다.",
    "repositories {\n    maven {\n        url \"https://nexus.nugu.co.kr/repository/maven-public/\"\n    }\n}"
  ]
},
    {
  "title": "시작하기 > 의존성 추가하기",
  "hash": "#의존성-추가하기",
  "sentences": [
    "의존성 추가하기",
    "어플리케이션 모듈의 build.gradle에, 전체 라이브러리를 사용하기 위해 아래 의존성을 추가합니다.",
    "(전체 라이브러리에 대한 의존성은",
    "여기",
    "를 참조)",
    "dependencies {\n    // Nugu Android Helper\n    implementation \"com.skt.nugu.sdk:nugu-android-helper:${latestVersion}\"\n    // Nugu Android UX Kit\n    implementation \"com.skt.nugu.sdk:nugu-ux-kit:${latestVersion}\"\n    // Nugu Android Login Kit\n    implementation \"com.skt.nugu.sdk:nugu-login-kit:${latestVersion}\"\n}"
  ]
},
    {
  "title": "시작하기 > Step 3: 프로젝트 설정하기",
  "hash": "#step-3-프로젝트-설정하기",
  "sentences": [
    "Step 3: 프로젝트 설정하기"
  ]
},
    {
  "title": "시작하기 > PoC 정보 입력하기",
  "hash": "#poc-정보-입력하기",
  "sentences": [
    "PoC 정보 입력하기",
    "NUGU PoC를 생성하기 위해서는 NUGU Developers를 통해 제휴가 필요합니다.\n더 자세한 내용은 NUGU SDK 소개에서 확인이 가능합니다.",
    "체험판은 체험판 신청을 통해 발급 가능합니다.",
    "발급받은 PoC 정보를 확인하기 위해서",
    "NUGU SDK PoC목록",
    "으로 이동해서 Client ID, Client Secret, Redirect URI 정보를 확인하세요.",
    "체험판은 체험판 신청 내역에서 확인 가능합니다.",
    "NUGU SDK를 사용하는 앱 간에 URL Scheme 충돌을 방지하기 위해,\nRedirect URI는 nugu.user.{client-id}://auth로 설정하는 것을 권고합니다.",
    "체험판은 Redirect URI가 필요하지 않습니다."
  ]
},
    {
  "title": "시작하기 > 리소스에 정보 추가하기",
  "hash": "#리소스에-정보-추가하기",
  "sentences": [
    "리소스에 정보 추가하기",
    "strings.xml 파일에 nugu_redirect_scheme, nugu_redirect_host를 추가합니다. 예를들어 redirectUri가",
    "“example://sample”",
    "라면 아래와 같이 추가합니다.",
    "<string name=\"nugu_redirect_scheme\">example</string>\n<string name=\"nugu_redirect_host\">sample</string>"
  ]
},
    {
  "title": "시작하기 > 음성 인식 모델 파일 설정하기",
  "hash": "#음성-인식-모델-파일-설정하기",
  "sentences": [
    "음성 인식 모델 파일 설정하기"
  ]
},
    {
  "title": "시작하기 > 다운로드 받기",
  "hash": "#다운로드-받기-",
  "sentences": [
    "다운로드 받기",
    "NUGU SDK PoC목록",
    "에서 음성인식 모델 파일을 다운로드 받습니다.",
    "체험판은 체험판 신청 내역에서 음성인식 모델파일을 다운로드 받습니다.",
    "음성인식 파일 리소스에 대해서 압축되지 않도록 build.gradle 설정이 필요합니다.",
    "android {\n   ...\n   aaptOptions {\n       noCompress \"raw\"\n   }\n}"
  ]
},
    {
  "title": "시작하기 > Configuration 파일 설정하기",
  "hash": "#configuration-파일-설정하기",
  "sentences": [
    "Configuration 파일 설정하기"
  ]
},
    {
  "title": "시작하기 > 다운로드 받기",
  "hash": "#다운로드-받기",
  "sentences": [
    "다운로드 받기",
    "NUGU SDK PoC목록",
    "에서 nugu-config.json 파일을 다운로드 받습니다.",
    "체험판은 체험판 신청 내역에서  nugu-config.json 파일을 다운로드 받습니다."
  ]
},
    {
  "title": "시작하기 > 설정하기",
  "hash": "#설정하기",
  "sentences": [
    "설정하기",
    "다운로드 받은 파일을 Asset 폴더에 파일을 복사하고, ConfigurationStore을 초기화합니다.",
    "ConfigurationStore.configure(context = context,\n                             filename = \"nugu-config.json\")"
  ]
},
    {
  "title": "시작하기 > 앱 권한 설정하기",
  "hash": "#앱-권한-설정하기",
  "sentences": [
    "앱 권한 설정하기",
    "AndroidManifest.xml에 아래 필수 권한을 추가합니다.",
    "<uses-permission android:name=\"android.permission.RECORD_AUDIO\"/>\n<uses-permission android:name=\"android.permission.INTERNET\"/>",
    "Manifest에 추가한 android.permission.RECORD_AUDIO 권한은 런타임에 추가로 요청하여 획득해야 합니다."
  ]
},
    {
  "title": "시작하기 > Step 4: NUGU 로그인 추가",
  "hash": "#step-4-nugu-로그인-추가",
  "sentences": [
    "Step 4: NUGU 로그인 추가",
    "NUGU 로그인은",
    "NUGU 회원 연동 방식",
    "과",
    "NUGU 회원 미사용 방식",
    "두 가지로 제공됩니다.",
    "체험판은 NUGU 회원 미사용 방식만 가능합니다.",
    "NUGU 서비스를 이용하기 위해서는 OAuth 2.0 인증이 필요합니다.\nOAuth 2.0 API 는 Authentication 에서 확인이 가능합니다."
  ]
},
    {
  "title": "시작하기 > NUGU 회원 연동 방식으로 로그인",
  "hash": "#nugu-회원-연동-방식으로-로그인",
  "sentences": [
    "NUGU 회원 연동 방식으로 로그인",
    "NUGU 회원 연동 방식을 사용하기 위해서는 T아이디 연동이 필요합니다."
  ]
},
    {
  "title": "시작하기 > 로그인 정보 설정",
  "hash": "#로그인-정보-설정",
  "sentences": [
    "로그인 정보 설정",
    "기기별 고유식별자(",
    "deviceUniqueId",
    ")를 변경 가능합니다. (이미 NuguOAuth.create 에서 설정 되어있다면 생략)",
    "val newOptions = NuguOAuthOptions.Builder()\n            .deviceUniqueId(\"{your-device-uniqueId}\")\n            .build()\nNuguOAuth.getClient().setOptions(newOptions)"
  ]
},
    {
  "title": "시작하기 > Tid 로그인",
  "hash": "#tid-로그인",
  "sentences": [
    "Tid 로그인",
    "loginWithTid()",
    "를 호출 후에",
    "NuguOAuthInterface.OnLoginListener",
    "를 통해 인증 결과를 받습니다.",
    "authClient.loginWithTid( activity = this, listener = object : NuguOAuthInterface.OnLoginListener {\n            override fun onSuccess(credentials: Credentials) {\n                // Save Credentials\n            }\n\n            override fun onError(error: NuguOAuthError) {\n                // Called when the request failed.\n            }\n        })"
  ]
},
    {
  "title": "시작하기 > 로그인 정보 갱신",
  "hash": "#로그인-정보-갱신",
  "sentences": [
    "로그인 정보 갱신",
    "발급 받은 refresh-token이 이미 있다면, 이 후에는 인 앱 브라우저 없이 로그인 정보를 갱신할 수 있습니다.",
    "authClient.loginSilentlyWithTid(\"{refresh-token}\", object : NuguOAuthInterface.OnLoginListener {\n            override fun onSuccess(credentials: Credentials) {\n                // Save Credentials \n            }\n\n            override fun onError(error: NuguOAuthError) {\n                // Called when the request failed.\n            }\n        })"
  ]
},
    {
  "title": "시작하기 > NUGU 회원 미사용 방식으로 로그인",
  "hash": "#nugu-회원-미사용-방식으로-로그인",
  "sentences": [
    "NUGU 회원 미사용 방식으로 로그인"
  ]
},
    {
  "title": "시작하기 > 로그인 정보 설정",
  "hash": "#로그인-정보-설정-1",
  "sentences": [
    "로그인 정보 설정",
    "기기별 고유식별자(",
    "deviceUniqueId",
    ")를 변경 가능합니다. (이미 NuguOAuth.create 에서 설정 되어있다면 생략)",
    "val newOptions = NuguOAuthOptions.Builder()\n            .deviceUniqueId(\"{your-device-uniqueId}\")\n            .build()\nNuguOAuth.getClient().setOptions(newOptions)"
  ]
},
    {
  "title": "시작하기 > 로그인",
  "hash": "#로그인",
  "sentences": [
    "로그인",
    "loginAnonymously()",
    "를 호출 후에",
    "NuguOAuthInterface.OnLoginListener",
    "를 통해 인증 결과를 받습니다.",
    "authClient.loginAnonymously(object : NuguOAuthInterface.OnLoginListener {\n            override fun onSuccess(credentials: Credentials) {\n                // Save credentials\n            }\n\n            override fun onError(error: NuguOAuthError) {\n                // Called when the request failed.\n            }\n        })"
  ]
},
    {
  "title": "시작하기 > Step5. NUGU 음성인식 사용하기",
  "hash": "#step5-nugu-음성인식-사용하기",
  "sentences": [
    "Step5. NUGU 음성인식 사용하기",
    "로그인 후, 우리는 NUGU의 모든 기능을 사용할 수 있습니다. 여기서는 NUGU의 모든 기능을 손쉽게 이용할 수 있도록 SDK에서 제공하는",
    "NuguAndroidClient",
    "클래스를 이용하여 음성인식을 시작하는 간단한 방법을 소개합니다.",
    "인증 정보 처리를 위임할 AuthDelegate를 정의합니다.",
    "// Parameter로 OAuth 옵션을 설정해야 합니다.\n   // 설정된 옵션은 이후 NuguOAuth.setOptions을 사용하여 변경 가능합니다.\n   val authDelegate = NuguOAuth.create(\n                   options = NuguOAuthOptions.Builder()\n                       .deviceUniqueId(deviceUniqueId(context))\n                       .build()\n               )",
    "음성인식에 사용할 기본 AudioProvider를 생성합니다.",
    "// AudioSourceManager : AudioProvider에 대한 기본 구현 클래스\n   // AudioRecordSourceFactory : Android의 AudioRecord를 소스로 사용하는 SDK에서 제공\n   val audioProvider = AudioSourceManager(AudioRecordSourceFactory())",
    "음성인식에 사용할 EndPointDetector를 생성합니다. 위에서 받은 모델 파일의 경로를 인자로 넣어줍니다.",
    "val endPointDetector = EndPointDetector(EPD_MODEL_FILE_PATH)",
    "마지막으로 NuguAndroidClient를 생성하고, 음성인식을 시작합니다. 음성인식에 대한 결과는 각각의 리스너를 통해 받을 수 있습니다.",
    "val client = NuguAndroidClient.Builder(\n      context,    // Android Context\n      authDelegate,\n      audioProvider\n   ).endPointDetector(endPointDetector).build()\n\n   client.asrAgent?.addOnResultListener(...)\n   client.asrAgent?.addOnStateChangeListener(...)\n   // 음성인식 시작\n   client.asrAgent?.startRecognition(initiator = ASRAgentInterface.Initiator.TAP)"
  ]
},
    {
  "title": "시작하기 > 더 알아보기",
  "hash": "#더-알아보기",
  "sentences": [
    "더 알아보기"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/statecheck-interface",
  "order": 92,
  "indexes": [
    {
  "title": "StateCheck Interface",
  "hash": "",
  "sentences": [
    "StateCheck Interface",
    "NUGU 스마트홈 StateCheck Capability Interface는 NUGU 스마트홈에 등록된 SmartHomeDevice의 상태조회방식에 대한 설명입니다."
  ]
},
    {
  "title": "StateCheck Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "StateCheck Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "StateCheck Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"D1234567\",\n      \"deviceTypeCode\": \"OVEN\",\n      \"modelName\": \"example light\",\n      \"friendlyNameSuggestion\": \"조리실\",\n      \"manufacturer\": \"example manufacturer\",\n      \"supportedCapabilities\": {\n        \"stateCheck\": {\n        }\n      },\n      \"customData\": {\n        ...\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "SmartHomeDevice Attribute Parameters",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "StateCheck Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU SmartHome StateCheck Capability는 SmartHomeDevice의 상태를 조회하는 AskState와 OpenSensor의 열림상태를 조회하는 AskOpenState 등의 Directive를 지원합니다."
  ]
},
    {
  "title": "StateCheck Interface > AskState",
  "hash": "#askstate",
  "sentences": [
    "AskState",
    "Directive 정보",
    "SmartHomeDevice의 상태를 조회한다.",
    "Capability : StateCheck",
    "Directive : AskState",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 상태 알려줘",
    "아리아, {FriendlyName} 상태 조회해줘",
    "아리아, {DeviceType} 현재 상태 알려줘"
  ]
},
    {
  "title": "StateCheck Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/StateCheck/directives/AskState)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"StateCheck\",\n      \"smartHomeDirective\": \"AskState\",\n      \"parameters\": {}\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"OVEN\",\n        \"deviceTypeName\": \"example_device_type\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"조리실\",\n        \"manufacturer\": \"example_manufacturer\",\n        \"supportedCapabilities\": {\n          \"stateCheck\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "StateCheck Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\":[\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"temperatureLevel\": \"200\", // directive 마다 필요한 property 채워서 응답.\n        \"hour\" : \"1\", // directive 마다 필요한 property 채워서 응답.\n        \"minute\" : \"29\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "AskState Directive Response parameter details",
    "  | AskState Directive에 응답할 parameter들은 SmartHomeDeviceType에 따라 다릅니다.상세한 정보는 SmartHomeAttribute : DeviceStatus를 참조해주세요. | string"
  ]
},
    {
  "title": "StateCheck Interface > AskOpenState",
  "hash": "#askopenstate",
  "sentences": [
    "AskOpenState",
    "Directive 정보",
    "SmartHomeDevice의 열림상태를 조회한다.",
    "Capability : StateCheck",
    "Directive : AskOpenState",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 열림상태 알려줘",
    "아리아, {FriendlyName} 열림상태 조회해줘",
    "아리아, {DeviceType} 현재 열림상태 알려줘"
  ]
},
    {
  "title": "StateCheck Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/StateCheck/directives/AskOpenState)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"StateCheck\",\n      \"smartHomeDirective\": \"AskOpenState\",\n      \"parameters\": {}\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"OPEN_SENSOR\",\n        \"deviceTypeName\": \"example_device_type\",\n        \"deviceModelName\": \"example_model_name\",\n        \"friendlyName\": \"현관\",\n        \"manufacturer\": \"example_manufacturer\",\n        \"supportedCapabilities\": {\n          \"stateCheck\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "StateCheck Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"2019071712638a4378649347bdb21643127a0f6d83\", // request로 받은 값을 그대로 응답\n  \"data\":[\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"openState\": \"open\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "AskOpenState Directive Response parameter details",
    "openState | SmartHomeDevice의 열림상태(open, close로 구분) | string"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/manage-poc/statistic",
  "order": 147,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/reference/status",
  "order": 210,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/support-tools",
  "order": 53,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/system",
  "order": 154,
  "indexes": [
    {
  "title": "System",
  "hash": "",
  "sentences": [
    "System",
    "디바이스의 전원 및 네트워크 연결 상태를 관리하기 위한 규격"
  ]
},
    {
  "title": "System > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.3 입니다.",
    "1.0 | 2019.12.05 | 규격 추가",
    "1.1 | 2020.03.20 | System.Revoke, System.Noop directive 추가",
    "1.2 | 2020.06.05 | System.Revoke directive 에 WITHDRAWN_USER 추가",
    "1.3 | 2020.08.27 | System.ResetConnection 추가"
  ]
},
    {
  "title": "System > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "System > SystemAgent 사용",
  "hash": "#systemagent-사용",
  "sentences": [
    "SystemAgent 사용",
    "System interface 규격에 따른 디바이스의 동작 제어는 SystemAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 SystemAgent instance 에 접근할 수 있습니다.",
    "val systemAgent = nuguAndroidClient.systemAgent",
    "NuguClient instance 를 통해 SystemAgent instance 에 접근할 수 있습니다.",
    "let systemAgent = nuguClient.systemAgent",
    "CapabilityFactory::makeCapability 함수로 SystemAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto system_handler(std::shared_ptr<ISystemHandler>(\n            CapabilityFactory::makeCapability<SystemAgent, ISystemHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(system_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "System > 디바이스 전원 제어",
  "hash": "#디바이스-전원-제어",
  "sentences": [
    "디바이스 전원 제어",
    "사용자 발화",
    "에 따라",
    "TurnOff",
    "directive 로 디바이스 전원을 제어할 수 있습니다.",
    "iOS 는 지원하지 않습니다",
    "Android",
    "Linux",
    "SystemAgentInterface.Listener 를 추가합니다.",
    "val listener = object: SystemAgentInterface.Listener {\n    override fun onTurnOff() {\n        ...\n    }\n}\nsystemAgent.addListener(listener)",
    "ISystemListener 를 추가합니다.",
    "class MySystemListener : public ISystemListener {\npublic:\n    ...\n\n    void onTurnOff() override\n    {\n        ...\n    }\n\n    ...\n};\nauto system_listener(std::make_shared<MySystemListener>());\nCapabilityFactory::makeCapability<SystemAgent, ISystemHandler>(system_listener.get());"
  ]
},
    {
  "title": "System > 에러처리",
  "hash": "#에러처리",
  "sentences": [
    "에러처리",
    "NUGU 서버에서 에러가 발생할 경우",
    "Exception",
    "directive 로 error code가 전달됩니다.",
    "사용자가 에러 상황을 인지할 수 있도록 Toast, Local TTS 등으로 안내해야합니다.",
    "Android",
    "iOS",
    "Linux",
    "SystemAgentInterface.Listener 를 추가합니다.",
    "val listener = object: SystemAgentInterface.Listener {\n    override fun onException(code: ExceptionCode, description: String?) {\n        ...\n    }\n}\nsystemAgent.addListener(listener)",
    "SystemAgentDelegate 를 추가합니다.",
    "class MySystemAgentDelegate: SystemAgentDelegate {\n    func systemAgentDidReceiveExceptionFail(code: SystemAgentExceptionCode.Fail, dialogRequestId: String) {\n        ...\n    }\n\n    ...\n}\nsystemAgent.add(systemAgentDelegate: MySystemAgentDelegate())",
    "ISystemListener 를 추가합니다.",
    "class MySystemListener : public ISystemListener {\npublic:\n    ...\n\n    void onException(SystemException exception, const std::string &dialog_id) override\n    {\n        ...\n    }\n\n    ...\n};\nauto system_listener(std::make_shared<MySystemListener>());\nCapabilityFactory::makeCapability<SystemAgent, ISystemHandler>(system_listener.get());"
  ]
},
    {
  "title": "System > 디바이스 등록 해제",
  "hash": "#디바이스-등록-해제",
  "sentences": [
    "디바이스 등록 해제",
    "누구 서버에서 디바이스가 등록 해제되면",
    "Revoke",
    "directive 로 reason 이 전달됩니다.",
    "Application 의 상황에 따라 NUGU 로그인 화면으로 이동하거나 NUGU Button 을 비활성화 해야합니다.",
    "Android",
    "iOS",
    "Linux",
    "SystemAgentInterface.Listener 를 추가합니다.",
    "val listener = object: SystemAgentInterface.Listener {\n    override fun onRevoke(reason: RevokeReason) {\n        ...\n    }\n}\nsystemAgent.addListener(listener)",
    "SystemAgentDelegate 를 추가합니다.",
    "class MySystemAgentDelegate: SystemAgentDelegate {\n    func systemAgentDidReceiveRevokeDevice(reason: SystemAgentRevokeReason, dialogRequestId: String) {\n        ...\n    }\n\n    ...\n}\nsystemAgent.add(systemAgentDelegate: MySystemAgentDelegate())",
    "ISystemListener 를 추가합니다.",
    "class MySystemListener : public ISystemListener {\npublic:\n    ...\n\n    onRevoke(RevokeReason reason) override\n    {\n        ...\n    }\n\n    ...\n};\nauto system_listener(std::make_shared<MySystemListener>());\nCapabilityFactory::makeCapability<SystemAgent, ISystemHandler>(system_listener.get());"
  ]
},
    {
  "title": "System > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"System\": {\n    \"version\": \"1.3\"\n  }\n}"
  ]
},
    {
  "title": "System > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive"
  ]
},
    {
  "title": "System > ResetUserInactivity",
  "hash": "#resetuserinactivity",
  "sentences": [
    "ResetUserInactivity",
    "Connection-oriented 디바이스에서만 사용",
    "UserInactivityReport 이벤트의 inactivity timer를 리셋시키기 위해 전송",
    "사용자 인터렉션은 없지만 서비스를 사용하는 경우에 보내야 함",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"ResetUserInactivity\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "System > HandoffConnection",
  "hash": "#handoffconnection",
  "sentences": [
    "HandoffConnection",
    "Connection-oriented 디바이스에서만 사용",
    "NUGU Platform과 TCP  connection을 맺고 유지하는 디바이스에게 연결을 끊고 다시 접속하라는 명령",
    "장시간 사용하지 않는 경우 NUGU Platform에서 TCP connection을 관리하는 서버의 rebalancing을 위해 사용",
    "NUGU Platform은 UserInactivityReport에서 inactivity 시간을 보고 장시간 사용하지 않은 디바이스를 대상으로 RevokeConnection 디렉티브를 전송할 수 있음",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"HandoffConnection\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"protocol\": \"{{STRING}}\",\n    \"hostName\": \"{{STRING}}\",\n    \"port\": {{LONG}},\n    \"retryCountLimit\": {{LONG}},\n    \"connectionTimeout\": {{LONG}},\n    \"charge\": \"{{STRING}}\"\n  }\n}",
    "protocol | String | Y | H2_GRPC : grpc overhttp2 H2 : http2",
    "hostname | String | Y | domain",
    "address | String | Y | deprecated ip or domain",
    "port | Int | Y | port",
    "retryCountLimit | Int | Y | retry_count_limit까지 요청 한 후 다음 server로 접속 시도",
    "connectionTimeout | Int | Y | milliseconds",
    "charge | String | N | NORMAL : 일반적인 통신 요금 과금 (default)FREE : 무과금 포트를 이용하여 device gateway에 접속해서 TTS.SpeechPlay Event를 통해 음성 합성"
  ]
},
    {
  "title": "System > TurnOff",
  "hash": "#turnoff",
  "sentences": [
    "TurnOff",
    "디바이스 전원 끄기 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"TurnOff\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "System > UpdateState",
  "hash": "#updatestate",
  "sentences": [
    "UpdateState",
    "디바이스의 모든 상태 정보 전달 요청",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"UpdateState\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "System > Exception",
  "hash": "#exception",
  "sentences": [
    "Exception",
    "누구 서버에서 에러가 발생하면 전달됩니다.",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"Exception\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"code\": \"{{STRING}}\",\n    \"description\": \"{{STRING}}\"\n  }\n}",
    "code | string | Y | 서버에서 발생",
    "description | string | N | 에러에 대한 설명",
    "UNAUTHORIZED_REQUEST_EXCEPTION | 접속시 인증 에러jwt 토큰이 유효하지 않거나 header에 토큰이 없는 경우- grpc : System.Exception(UNAUTHORIZED_REQUEST_EXCEPTION)을 내리고 연결 끊음- h2 : 403 에러play router에서 토큰이 유효하지 않아서 실패jwt 토큰은 유효하지만 디바이스 연결 직후 habilis를 조회해서 토큰이 유효하지 않은 것이 확인",
    "ASR_RECOGNIZING_EXCEPTION | 음성 인식 에러",
    "PLAY_ROUTER_PROCESSING_EXCEPTION | Play router 에러Fallback Play 연동 실패Client 로직 오류(잘못된 규격으로 요청)",
    "TTS_SPEAKING_EXCEPTION | 음성 합성 에러",
    "INTERNAL_SERVICE_EXCEPTION | 기타 알 수 없는 에러"
  ]
},
    {
  "title": "System > NoDirectives",
  "hash": "#nodirectives",
  "sentences": [
    "NoDirectives",
    "Event에 대한 play router 처리 결과과 없는 경우 발생",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"NoDirectives\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "System > Revoke",
  "hash": "#revoke",
  "sentences": [
    "Revoke",
    "NUGU 서버에서 디바이스가 등록 해제되면 전달됩니다.",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"Revoke\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"reson\": \"{{STRING}}\"\n  }\n}",
    "reason | string | Y | 디바이스가 등록 해제된 원인",
    "REVOKED_DEVICE | NUGU 모바일 앱에서 디바이스 연결 해제"
  ]
},
    {
  "title": "System > Noop",
  "hash": "#noop",
  "sentences": [
    "Noop",
    "http2 response에서 multi part body를 사용하면서 padding으로 사용",
    "클라이언트에서는 Noop은 무시하고 아무런 처리를 하지 않음",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"Noop\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "System > ResetConnection",
  "hash": "#resetconnection",
  "sentences": [
    "ResetConnection",
    "Connection-oriented 디바이스에서만 사용",
    "이 요청을 받으면 클라이언트는 registry에 다시 접속해서 주소를 받아서 접속한다.",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"ResetConnection\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n      \"description\": \"{{STRING}}\"\n  }\n}",
    "description | String | N | 서버에서 정보를 남기기 위한 단순 로깅 용도"
  ]
},
    {
  "title": "System > Events",
  "hash": "#events",
  "sentences": [
    "Events"
  ]
},
    {
  "title": "System > SynchronizeState",
  "hash": "#synchronizestate",
  "sentences": [
    "SynchronizeState",
    "System.UpdateState 에 대한 응답",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"SynchronizeState\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {}\n}"
  ]
},
    {
  "title": "System > UserInactivityReport",
  "hash": "#userinactivityreport",
  "sentences": [
    "UserInactivityReport",
    "Connection-oriented 디바이스에서만 사용",
    "1시간동안 사용자 인터렉션이 없는 경우 보내야 함",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"UserInactivityReport\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {\n    \"inactiveTimeInSeconds\": {{LONG}}\n  }\n}",
    "inactiveTimeInSeconds | long | Y |  "
  ]
},
    {
  "title": "System > Disconnect",
  "hash": "#disconnect",
  "sentences": [
    "Disconnect",
    "Connection-oriented 디바이스에서만 사용",
    "handoff 가 완료되어 더 이상 받을 directive나 TTS stream이 없는 경우",
    "디바이스 종료 등 이슈로 연결을 끊는 경우",
    "{\n  \"header\": {\n    \"namespace\": \"System\",\n    \"name\": \"SynchronizeState\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.0\"\n  },\n  \"payload\": {}\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/nugu-ux/target-user-analysis-and-task-definition",
  "order": 3,
  "indexes": [
    {
  "title": "기능 정의",
  "hash": "",
  "sentences": [
    "기능 정의",
    "VUX 디자인의 첫 번째 단계는 제공하고자 하는 서비스의 타겟 사용자와 사용자의 상황을 분석하고, 제공할 주요 기능을 목록으로 정의하는 단계입니다. 즉, 이 서비스를 어떤 사용자가 어떤 환경에서 주로 이용할 것인지를 고려하여 제공할 기능 범위를 정의합니다.",
    "예를 들어, 자동차에서 스타벅스 커피를 주문하고, 해당 매장에 도착해서 주문한 커피를 받아가는 서비스를 제공한다고 할 경우에는 사용자의 운전 상황에 대한 이해와 사용자의 요구를 바탕으로 서비스 범위를 결정해야 합니다.",
    "기존 커피 주문 시에는 샷이나 얼음 추가 등 여러 가지 옵션을 추가할 수 있지만, 운전 상황에서 여러 번의 사용자 선택을 거치는 것은 사고 발생의 위험이 있으므로 차량 내 커피 주문 서비스에서는 옵션 추가 기능을 제공하지 않을 수 있습니다. 이처럼 제공하고자 하는 기능 범위가 결정되면 이를 단위 기능으로 분류하고 흐름을 구조화합니다."
  ]
},
    {
  "title": "기능 정의 > 서비스 제공 범위 정의",
  "hash": "#서비스-제공-범위-정의",
  "sentences": [
    "서비스 제공 범위 정의",
    "제공하고자 하는 기능(Task) 목록을 정의하고, 각 기능을 사용자가 예측 가능한 범위로 분리 또는 병합한 뒤 핵심 기능과 주변 기능을 계층 또는 흐름으로 구조화합니다.",
    "커피 주문 서비스 태스크",
    "사전 등록: 계정 연동 / 결제 방식 등록",
    "커피 주문: 주문 시작 / 메뉴 선택 / 매장 선택 / 주문 접수 / 주문 진행 상태 알림",
    "주문 관리: 주문 조회 / 잔액 조회 / 주문 취소",
    "기타 : 도움말"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomecapability/temperaturecontrol-interface",
  "order": 93,
  "indexes": [
    {
  "title": "TemperatureControl Interface",
  "hash": "",
  "sentences": [
    "TemperatureControl Interface",
    "NUGU 스마트홈 TemperatureControl Capability Interface는 NUGU 스마트홈에 등록된 SmartHomeDevice의 온도제어방식에 대한 설명입니다. TemperatureControl Interface는 주변 온도를 특정 온도로 설정하기 위한 스마트홈 기기의 제어 명령입니다."
  ]
},
    {
  "title": "TemperatureControl Interface > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈을 통해 SmartHomeDevice를 제어하려면 사전에 NUGU스마트홈에 SmartHomeDevice를 등록해야 합니다. 사용자가 NUGU App을 통해 SmartHomeDevice 등록을 요청하면 SmartHome Play 제작 당시 입력한 SmartHomeBackendProxy URL로 NUGU스마트홈에 등록할 수 있는 SmartHomeDevice 목록에 대한 Discovery 요청이 전달됩니다. SmartHomeBackendProxy는 SmartHomeDevice 목록과 함께 각 SmartHomeDevice별로 지원하는 Capability와 그에 따른 부가적인 Parameter들을 응답해야 합니다."
  ]
},
    {
  "title": "TemperatureControl Interface > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "TemperatureControl Interface > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"AIR_CONDITIONER\",\n      \"deviceTypeName\": \"에어컨\",\n      \"deviceModelName\": \"example air_conditioner\",\n      \"friendlyNameSuggestion\": \"거실\",\n      \"manufacturer\": \"example manufacturer\",\n      \"supportedCapabilities\": {\n        \"temperatureControl\": {\n          \"deviceTemperatureControl\": {\n            \"minTemperature\": \"18\",\n            \"maxTemperature\": \"29\",\n            \"temperatureStep\": \"1\"\n          }\n        } // \"온도 25도로 설정해줘\" 등 TemperatureControl 을 지원하기 위해서는 이 property 를 supportedCapabilities 에 포함해야 합니다.\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}",
    "SmartHomeDevice Attribute Parameters",
    "minTemperature | 해당 SmartHomeDevice가 지원하는 최저 섭씨 온도입니다.",
    "maxTemperature | 해당 SmartHomeDevice가 지원하는 최고 섭씨 온도입니다.",
    "temperatureStep | 해당 SmartHomeDevice의 온도 상승/하강 시의 기본 제어 단위입니다.별도의 사용자 발화가 없을 시 해당 단위만큼 조절합니다.",
    "customData | Discovery 시 SmartHomeServiceProvider가 응답할 수 있는 SmartHomeDevice의 부가정보입니다.customData는 해당 SmartHomeDevice의 제어요청 시 Request에 포함되어 전달됩니다."
  ]
},
    {
  "title": "TemperatureControl Interface > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive",
    "NUGU SmartHome TemperatureControl Capability는 설정온도 및 실제온도를 조회하는 AskTemperature, 설정온도를 제어하는 SetTemperature, IncreaseTemperature, DecreaseTemperature, SetTemperatureMax, SetTemperatureMin 등의 Directive를 지원합니다."
  ]
},
    {
  "title": "TemperatureControl Interface > AskTemperature",
  "hash": "#asktemperature",
  "sentences": [
    "AskTemperature",
    "Directive 정보",
    "SmartHomeDeivce에서 측정한 실제온도와 SmartHomeDevice에 설정된 설정온도를 조회한다.",
    "Capability : TemperatureControl",
    "Directive : AskTemperature",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 온도 알려줘.",
    "아리아, {FriendlyName} 온도 어떻게 설정되어 있어?",
    "아리아, {DeviceType} 온도 조회해줘"
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Request",
  "hash": "#sample-request",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/TemperatureControl/directives/AskTemperature)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"TemperatureControl\",\n      \"smartHomeDirective\": \"AskTemperature\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"temperatureControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Response",
  "hash": "#sample-response",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"currentTemperature\": \"25\", // directive 마다 필요한 property 채워서 응답.\n        \"temperatureLevel\": \"20\"\n      }\n    }\n  ]\n}",
    "AskTemperature Directive Response parameter details",
    "currentTemperature | SmartHomeDevice에서 측정한 해당 공간의 실제 온도정보입니다.사용자에게 실제온도로 안내됩니다. | double",
    "temperatureLevel | SmartHomeDevice에 설정된 온도정보입니다.사용자에게 설정온도로 안내됩니다. | double"
  ]
},
    {
  "title": "TemperatureControl Interface > SetTemperature",
  "hash": "#settemperature",
  "sentences": [
    "SetTemperature",
    "Directive 정보",
    "SmartHomeDevice의 설정온도를 사용자가 발화한 특정 온도로 설정한다.",
    "Capability : TemperatureControl",
    "Directive : SetTemperature",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 온도 25도로 설정해줘.",
    "아리아, {FriendlyName} 온도 30.5도로 설정해줘.",
    "아리아, {DeviceType} 온도 19도로 설정해줘."
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Request",
  "hash": "#sample-request-1",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/TemperatureControl/directives/SetTemperature)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"TemperatureControl\",\n      \"smartHomeDirective\": \"SetTemperature\",\n      \"parameters\": {\n        \"temperatureLevel\": \"20\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"temperatureControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "SetTemperature Directive Request parameter details",
    "temperatureLevel | 사용자가 SmartHomeDevice에 설정하고자 하는 온도의 발화 정보입니다. | double"
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Response",
  "hash": "#sample-response-1",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"temperatureLevel\": \"20\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "SetTemperature Directive Response parameter details",
    "temperatureLevel | SmartHomeDevice를 설정한 이후의 설정온도입니다.제어를 마친 이후의 온도로 응답해야 합니다. | double"
  ]
},
    {
  "title": "TemperatureControl Interface > IncreaseTemperature",
  "hash": "#increasetemperature",
  "sentences": [
    "IncreaseTemperature",
    "Directive 정보",
    "SmartHomeDevice의 설정온도를 증가시킨다.",
    "Capability : TemperatureControl",
    "Directive : IncreaseTemperature",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 온도 올려줘.",
    "아리아, {FriendlyName} 온도 3도 올려서 설정해줘.",
    "아리아, {DeviceType} 온도 10.5도 올려줘."
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Request",
  "hash": "#sample-request-2",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/TemperatureControl/directives/IncreaseTemperature)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"TemperatureControl\",\n      \"smartHomeDirective\": \"IncreaseTemperature\",\n      \"parameters\": {\n        \"temperatureDelta\": \"3\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"temperatureControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "IncreaseTemperature Directive request parameter details",
    "temperatureDelta | 설정온도를 몇 도(섭씨) 올릴지에 대한 사용자 발화 정보입니다.해당 정보가 없을 경우에는 1도 만큼 올리도록 설정합니다. | double"
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Response",
  "hash": "#sample-response-2",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"temperatureLevel\": \"23\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "IncreaseTemperature Directive response parameter details",
    "temperatureLevel | SmartHomeDevice를 설정한 이후의 설정온도입니다.제어를 마친 이후의 온도로 응답해야 합니다. | double"
  ]
},
    {
  "title": "TemperatureControl Interface > DecreaseTemperature",
  "hash": "#decreasetemperature",
  "sentences": [
    "DecreaseTemperature",
    "Directive 정보",
    "SmartHomeDevice의 설정 온도를 감소시킨다.",
    "Capability : TemperatureControl",
    "Directive : DecreaseTemperature",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 온도 내려줘.",
    "아리아, {FriendlyName} 온도 3도 내려서 설정해줘.",
    "아리아, {DeviceType} 온도 10.5도 내려줘."
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Request",
  "hash": "#sample-request-3",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/TemperatureControl/directives/DecreaseTemperature)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"TemperatureControl\",\n      \"smartHomeDirective\": \"DecreaseTemperature\",\n      \"parameters\": {\n        \"temperatureDelta\": \"3\"\n      }\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"temperatureControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}",
    "DecreaseTemperature Directive request parameter details",
    "temperatureDelta | 설정온도를 몇 도(섭씨) 내릴지에 대한 사용자 발화 정보입니다.해당 정보가 없을 경우에는 1도 만큼 내리도록 설정합니다. | double"
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Response",
  "hash": "#sample-response-3",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"temperatureLevel\": \"23\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "DecreaseTemperature Directive response parameter details",
    "temperatureLevel | SmartHomeDevice를 설정한 이후의 설정온도입니다.제어를 마친 이후의 온도로 응답해야 합니다. | double"
  ]
},
    {
  "title": "TemperatureControl Interface > SetTemperatureMax",
  "hash": "#settemperaturemax",
  "sentences": [
    "SetTemperatureMax",
    "Directive 정보",
    "SmartHomeDevice를 최고 설정온도로 설정한다.",
    "Capability : TemperatureControl",
    "Directive : SetTemperatureMax",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 온도 최고로 설정해줘.",
    "아리아, {FriendlyName} 온도 가장 높게 해줘",
    "아리아, {DeviceType} 설정온도 최대로 해줘."
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Request",
  "hash": "#sample-request-4",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/TemperatureControl/directives/SetTemperatureMax)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"TemperatureControl\",\n      \"smartHomeDirective\": \"SetTemperatureMax\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"temperatureControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Response",
  "hash": "#sample-response-4",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"temperatureLevel\": \"30\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "SetTemperatureMax Directive Response parameter details",
    "temperatureLevel | SmartHomeDevice를 설정한 이후의 설정온도입니다.제어를 마친 이후의 온도로 응답해야 합니다. | double"
  ]
},
    {
  "title": "TemperatureControl Interface > SetTemperatureMin",
  "hash": "#settemperaturemin",
  "sentences": [
    "SetTemperatureMin",
    "Directive 정보",
    "SmartHomeDevice를 최저 설정온도로 설정한다.",
    "Capability : TemperatureControl",
    "Directive : SetTemperatureMin",
    "Voice Command",
    "아리아, {FriendlyName} {DeviceType} 온도 최저로 설정해줘.",
    "아리아, {FriendlyName} 온도 가장 낮게 해줘",
    "아리아, {DeviceType} 설정온도 최소로 해줘."
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Request",
  "hash": "#sample-request-5",
  "sentences": [
    "Sample Request",
    "Control Request 예시 (POST, /nugu/v1/capabilities/TemperatureControl/directives/SetTemperatureMin)",
    "{\n  \"version\": 1,\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\",\n  \"action\": {\n    \"command\": {\n      \"smartHomeCapability\": \"TemperatureControl\",\n      \"smartHomeDirective\": \"SetTemperatureMin\",\n      \"parameters\": null\n    },\n    \"smartHomeDevices\": [\n      {\n        \"id\": \"1234567\",\n        \"deviceTypeCode\": \"AIR_CONDITIONER\",\n        \"deviceTypeName\": \"에어컨\",\n        \"deviceModelName\": \"example air_conditioner\",\n        \"friendlyName\": \"거실\",\n        \"manufacturer\": \"example manufacturer\",\n        \"supportedCapabilities\": {\n          \"temperatureControl\": {}\n        },\n        \"customData\": {\n          \"foo\": \"bar\"\n        },\n        \"connectionStatus\": true\n      }\n    ]\n  },\n  \"context\": {\n    \"session\": {\n      \"id\": \"example_session_id\",\n      \"accessToken\": \"example_access_token\"\n    }\n  }\n}"
  ]
},
    {
  "title": "TemperatureControl Interface > Sample Response",
  "hash": "#sample-response-5",
  "sentences": [
    "Sample Response",
    "{\n  \"requestId\": \"20190916109ad8219c251742859c56f6ec3c4700bb\", // request로 받은 값을 그대로 응답\n  \"data\": [\n    {\n      \"resultCode\": \"OK\", // 에러일 경우 에러코드 응답\n      \"smartHomeDevice\": {}, // request로 받은 값을 그대로 응답\n      \"properties\": {\n        \"temperatureLevel\": \"18\" // directive 마다 필요한 property 채워서 응답.\n      }\n    }\n  ]\n}",
    "SetTemperatureMin Directive Response parameter details",
    "temperatureLevel | SmartHomeDevice를 설정한 이후의 설정온도입니다.제어를 마친 이후의 온도로 응답해야 합니다. | double"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/nugu-display/templatehandler",
  "order": 191,
  "indexes": [
    {
  "title": "TemplateHandler",
  "hash": "",
  "sentences": [
    "TemplateHandler",
    "Template, 응용레벨 사이의 상호작용 커스텀",
    "TemplateRenderer",
    "는",
    "TemplateView",
    "를 사용하여 화면을 구성합니다.",
    "TemplateView 에서 버튼클릭이나 상태 변경이 일어나면 이를 응용레벨에 알려 처리되도록 해야 합니다. 마찬가지로 응용레벨에서 display에 필요한 상태변경이나 명령이 발생하면 TemplateView에 알려 갱신 처리를 해야 합니다. 이와 같은 TemplateView와 응용레벨에서의 상호작용은",
    "TemplateHandler",
    "인터페이스를 통해 이루어집니다.",
    "TemplateHandler는",
    "TemplateHandlerFactory",
    "에서 생성합니다.",
    "특정 상호작용을 제한하거나 동작 변경이 필요하다면 SDK의 기본 Handler인",
    "BasicTemplateHandler",
    "를 상속 후 필요한 메서드를 override 하여 커스텀 TemplateHandler를 작성하고, 이를 TemplateHandlerFactory에 의해 생성되도록 적용하면 됩니다."
  ]
},
    {
  "title": "TemplateHandler > TemplateHandler",
  "hash": "#templatehandler",
  "sentences": [
    "TemplateHandler",
    "TemplateView (이하 View로 표기) 는 버튼이 클릭되거나, 보여지는 item list에 변화가 생길때 이를 응용레벨로 알려 처리되도록 합니다. 또한 Toast나 Activity의 노출을 요청할 수도 있습니다.",
    "각 상황에 호출되는 메서드들은 아래와 같습니다.",
    "fun onElementSelected(tokenId: String, postback : String?)View내 버튼 클릭시 호출된다.",
    "fun onChipSelected(text: String)View내 chip(추천 명령어) 클릭시 호출된다.",
    "fun onCloseClicked()View내 닫기 버튼 클릭시 호출된다.",
    "fun onCloseWithParent()Child View의 닫기 버튼 클릭시 호출된다. Parent View 를 함께 종료한다.",
    "fun onCloseAllClicked()View내 홈 버튼 클릭시 호출된다. SDK에서는 노출중인 모든 템플릿을 종료한다.",
    "fun onNuguButtonSelected()View내 누구 버튼 (아리아 호출) 클릭시 호출된다.",
    "fun onPlayerCommand(command: String, param: String = “”)미디어 재생 관련 동작이 필요할때 호출된다. (ex. View내 재생/일시정지 버튼 클릭)",
    "fun onContextChanged(context: String)View의 display context 변경이 있을때 호출된다. (ex. focus item 변화, visible item 리스트의 변화)",
    "fun showToast(text: String)View에서 응용레벨로 Toast노출을 요청할때 호출된다.",
    "fun showActivity(className: String)View에서 응용레벨로 Activity 노출을 요청할때 호출된다.",
    "fun playTTS(text: String)View에서 응용레벨로 TTS 재생을 요청할때 호출된다.",
    "fun setClientListener(listener: ClientListener)handler에 ClientListener를 설정한다.",
    "fun onClear()TemplateView가 종료될때 호출된다.여기서 사용한 리소스를 해제한다.",
    "fun getNuguClient() : NuguAndroidClient?TemplateHandler 의 내부 구현에 필요한 NuguAndroidClient 를 리턴한다."
  ]
},
    {
  "title": "TemplateHandler > TemplateHandler.ClientListener",
  "hash": "#templatehandlerclientlistener",
  "sentences": [
    "TemplateHandler.ClientListener",
    "TemplateHandler가 View에서 응용레벨로의 메시지 전달 혹은 요청이라면, ClientListener는 응용레벨에서 View로의 메시지 전달과 요청이라고 할 수 있다.",
    "fun onMediaStateChanged(activity: AudioPlayerAgentInterface.State, currentTimeMs: Long, currentProgress: Float)미디어 재생 상태 변경시 호출된다.",
    "fun onMediaDurationRetrieved(durationMs: Long)미디어의 재생시간이 구해졌을때 호출된다.",
    "fun onMediaProgressChanged(progress: Float, currentTimeMs: Long)미디어의 재생경과 업데이트시 호출된다.",
    "fun controlFocus(direction: Direction): BooleanView에 focus 이동을 요청한다.",
    "fun controlScroll(direction: Direction): BooleanView에 scroll 을 요청한다.",
    "fun getFocusedItemToken(): String?View내에 현재 focusing 중인 아이템의 토큰정보를 요구한다.",
    "fun getVisibleTokenList(): List?View내에 현재 visible한 아이템 리스트정보를 요구한다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/nugu-display/templaterenderer",
  "order": 190,
  "indexes": [
    {
  "title": "TemplateRenderer",
  "hash": "",
  "sentences": [
    "TemplateRenderer",
    "Template 유지 정책의 커스텀",
    "TemplateRenderer",
    "는 NUGU의 Template유지정책에 따라 Template 을 노출하고 제거합니다.",
    "예를들어 응답 TTS재생이 종료되면 일정시간 후 연관된 Template은 자동으로 제거됩니다. 또한 미디어 플레이어 Template의 경우, 새로운 미디어 플레이 요청이 들어왔을때 기존의 모든 Template을 제거한후 노출됩니다.",
    "이런 기본 정책과 다른 자신만의 유지정책을 가지려면",
    "DisplayAggregatorInterface.Renderer",
    "를 직접 구현하여",
    "NuguAndroidClient",
    "객체에",
    "displayRenderer로 등록",
    "하면 됩니다."
  ]
},
    {
  "title": "TemplateRenderer > Renderer 구현",
  "hash": "#renderer-구현",
  "sentences": [
    "Renderer 구현",
    "DisplayAggregatorInterface.Renderer 인터페이스를 직접 구현하여 Template의 노출과 제거를 컨트롤 할 수 있습니다.",
    "interface Renderer {\n    fun render(templateId: String, templateType: String, templateContent: String, header: Header, displayType: Type): Boolean\n    fun clear(templateId: String, force: Boolean)\n    fun update(templateId: String, templateContent: String)\n}",
    "render() : 새로운 Template 노출이 필요할때 호출됩니다. 파라미터로 전달받은 Template 정보를 이용하여 사용자에게 시각정보를 제공해야 합니다. 처리 여부를 리턴해야 합니다.",
    "clear() : Template을 제거해야 할때 호출됩니다. 사용자의 ‘닫기’ 명령에 의해 호출될 수도 있고 NUGU의 화면 유지정책에 따라 호출될 수도 있습니다. force 파라미터가 true인 경우는 반드시 제거하기를 권장합니다.",
    "update() : 이미 노출된 Template의 특정 요소를 업데이트 해야할때 호출됩니다.",
    "각 메서드는 mainThread에서 호출됨을 보장하지 않습니다.\n필요한 로직이 mainThread에서 동작하도록 작성하시기 바랍니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/nugu-display/templateview",
  "order": 192,
  "indexes": [
    {
  "title": "TemplateView",
  "hash": "",
  "sentences": [
    "TemplateView",
    "TemplateView 커스텀",
    "기본적으로 제공되는",
    "TemplateView",
    "는 Nugu에서 정의한 레이아웃과 디자인을 따릅니다. TemplateView를 직접 구현하고 이를 TemplateView 생성로직에 적용하면 특정 templateType의 template 노출이 요청된 경우 원하는 TemplateView를 노출 시킬 수 있습니다."
  ]
},
    {
  "title": "TemplateView > TemplateView 구현",
  "hash": "#templateview-구현",
  "sentences": [
    "TemplateView 구현",
    "TemplateView는 TemplateRenderer를 통해 전달되는 템플릿의 노출과 업데이트를 처리해야 합니다.",
    "TemplateView Interface에서 필수로 override 해야 하는 method입니다.",
    "fun load(templateContent: String, deviceTypeCode: String, dialogRequestId: String, onLoadingComplete: (() -> Unit)? = null)새로운 탬플릿 노출이 필요할때 TemplateRenderer의 render()를 통해 호출됩니다. templateContent에는 template payload 전체가 전달됩니다.",
    "fun update(templateContent: String, dialogRequestedId: String, onLoadingComplete: (() -> Unit)이미 노출된 탬플릿의 부분 업데이트가 필요할때 TemplateRenderer의 update()를 통해 호출됩니다. templateContent에는 업데이트가 필요한 template payload가 전달됩니다.",
    "TemplateView 구현체는 android View 객체여야 합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/terms",
  "order": 214,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/test-a-play",
  "order": 39,
  "indexes": [
    {
  "title": "테스트하기",
  "hash": "",
  "sentences": [
    "테스트하기",
    "Play가 제대로 동작하는지 테스트하는 방법은 크게 두 가지입니다.",
    "Play Builder에서 채팅으로 테스트",
    "NUGU 디바이스(스피커, T전화 등)에서 음성으로 테스트",
    "Play Builder에서 채팅으로 테스트하는 방법은 Play Builder를 통해 직접 학습시킨 Intent에 대해 어떻게 분석이 되고 어떻게 동작하는지 확인할 수 있는 테스트입니다.",
    "NUGU 디바이스(스피커)와 연동하여 진행하는 테스트는 실제 사용자에게 제공될 서비스 그대로를 점검할 수 있는 테스트입니다.",
    "이 테스트는 NUGU play kit에서 사용할 NUGU 디바이스를 등록해야 합니다."
  ]
},
    {
  "title": "테스트하기 > Play Builder에서 채팅으로 테스트하기",
  "hash": "#play-builder에서-채팅으로-테스트하기",
  "sentences": [
    "Play Builder에서 채팅으로 테스트하기",
    "Play Builder 우측 상단에 있는 테스트 버튼을 클릭하여 실행한 채팅창에 발화 내용을 입력한 후 버튼을 클릭합니다.(예: 날씨 알려줘)",
    "단축키 Ctrl+D (Mac에서는 ⌘ Command + D) 를 눌러 실행할 수 있습니다.",
    "Play Builder 내에서의 테스트는 사용자의 실제 발화를 어떻게 분석할지 확인할 수 있으며, 이 분석 결과를 바탕으로 실제로 의도한 대로 Prompt가 나가게 되는지도 확인할 수 있습니다.",
    "분석 결과를 확인하려면 입력 문장 바로 아래의 NLU 분석 결과 열기를 클릭합니다. 입력한 문장 아래 분석 결과가 표시됩니다.",
    "분석 결과 표시를 닫으려면 NLU 분석 결과 닫기를 클릭합니다.",
    "NLU 분석 결과는 문장을 직접 입력하여 학습시킨 Custom Intent에 대해서만 분석이 되며, 이 Custom Intent를 Trigger로 사용하는 Custom Action에 대해 응답 중 Prompt가 어떻게 나가게 되는지 확인할 수 있습니다.",
    "Built-in Intent(그만, 다시 등)는 테스트 내에서 분석되지 않으며, NUGU.ACTION.fallback에 등록한 Prompt가 나가게 됩니다.",
    "다만, 응답을 Directive + Prompt로 정의한 경우에는 Prompt만 나가게 되고, Directive만 등록한 경우에는 채팅창에 빈 칸으로 응답이 나오게 됩니다.",
    "Backend proxy를 사용하고 정상적으로 개발이 되어 있다면, Backend proxy가 처리하는 항목들(Backend Parameter, 예외 상황 처리)도 테스트를 할 수 있습니다.",
    "그러나, Backend proxy가 OAuth를 통해 사용자를 특정하여 서비스를 제공하는 경우에는 Play Builder 내에서 테스트를 할 수 없습니다.",
    "Play Builder 내 테스트가 가능한 항목과 불가능한 항목은 다음과 같습니다.",
    "테스트 가능 항목",
    "직접 등록한 Custom Intent",
    "Custom Intent를 Trigger로 하는 Custom Action 의 Prompt 결과",
    "테스트 불가능 항목",
    "Built-in Intent(NUGU.INTENT.stop, NUGU.INTENT.rewind) 의 테스트",
    "Directive",
    "Backend proxy 에서 OAuth를 통해 사용자를 특정하여 제공되는 기능",
    "테스트 창에서 어떠한 메시지를 입력하면, 그 메시지 앞에 Wake-up word(아리아, 팅커벨), Play 호출 이름을 붙여서 발화한 것처럼 동작합니다.",
    "따라서, 테스트 창에서는, Wake-up word와 Play의 호출 이름은 넣지 않고 입력해야 정상 동작합니다.",
    "SKML 태그는 결과창에 그대로 나오게 되나, 실제로 발화되지는 않습니다.",
    "테스트창에 30분 동안 입력이 없으면, 해당 Play를 담당하는 NLU 엔진이 비활성화 됩니다.",
    "아무 텍스트를 입력하거나, User Utterance Model을 수정 또는 저장한 경우에는 NLU 엔진이 활성화되며, 1분 후에 다시 테스트할 수 있습니다.",
    "일반적으로 NLU 엔진이 활성화하는 데 10초 정도 걸리며, User Utterance Model에 입력된 문장이 1만 문장 이상의 경우 20초 가량 걸립니다.",
    "Initial Parameter를 정의했으나, 실제로 Backend proxy에서 Initial Parameter를 전달하지 않으면 응답이 늦을 수도 있습니다."
  ]
},
    {
  "title": "테스트하기 > 디바이스에서 테스트하기",
  "hash": "#디바이스에서-테스트하기-",
  "sentences": [
    "디바이스에서 테스트하기"
  ]
},
    {
  "title": "테스트하기 > Play 테스트 가능 상태 확인하기",
  "hash": "#play-테스트-가능-상태-확인하기",
  "sentences": [
    "Play 테스트 가능 상태 확인하기",
    "Play의 상태가 등록중, 심사대기, 심사반려, 심사중, 심사완료, 배포대기 중인 경우에 스피커에서 테스트가 가능합니다.",
    "Play를 등록하는 방법은 Play 정보 등록을 참고하세요.",
    "NUGU 디바이스 테스트는 음성인식 학습 등의 사유로 Play 및 테스트기기 등록 다음날부터 가능합니다.",
    "하루가 지나도 NUGU 디바이스에서 Play를 테스트할 수 없다면, Support > 문의 사항으로 문의해 주시기 바랍니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/hello-aria/test-and-build-a-play",
  "order": 12,
  "indexes": [
    {
  "title": "4) Play 테스트 및 빌드하기",
  "hash": "",
  "sentences": [
    "4) Play 테스트 및 빌드하기"
  ]
},
    {
  "title": "4) Play 테스트 및 빌드하기 > 테스트하기",
  "hash": "#테스트하기",
  "sentences": [
    "테스트하기",
    "이제 만들어진 Play를 테스트할 차례입니다.",
    "Play Builder 우측 상단에 있는 테스트 버튼을 클릭하면 테스트 채팅창이 표시됩니다.",
    "테스트 채팅창에 날씨 또는 미세 먼지 관련 발화를 입력한 후 Enter 키를 누르거나 버튼을 클릭합니다.(예: 날씨 알려줘)",
    "입력한 발화에 따라 Play가 어떻게 응답하는지를 직접 확인할 수 있습니다.",
    "Action에 등록한 “오늘 날씨는 맑겠습니다. 오늘 날씨는 맑아요. 오늘은 맑은 날씨가 되겠습니다.” 중 한 문장이 나오는 것을 확인할 수 있습니다.",
    "테스트 결과 수정해야 할 부분이 있으면 Intent와 Action을 수정한 후 만족할 만한 결과가 나타날 때까지 위 테스트를 반복합니다.",
    "Intent와 Action 작업에 대한 내용은 각각 Intent 만들고 예상 발화 등록하기과 Action 만들고 응답 등록하기을 참고하세요."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/ios/testing_sdk_integration",
  "order": 182,
  "indexes": [
    {
  "title": "테스트 환경 설정",
  "hash": "",
  "sentences": [
    "테스트 환경 설정"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/android/testing_sdk_integration",
  "order": 195,
  "indexes": [
    {
  "title": "테스트 환경 설정",
  "hash": "",
  "sentences": [
    "테스트 환경 설정"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/text",
  "order": 157,
  "indexes": [
    {
  "title": "Text",
  "hash": "",
  "sentences": [
    "Text",
    "텍스트 명령을 Play 로 전달하기 위한 규격"
  ]
},
    {
  "title": "Text > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.7 입니다.",
    "1.0 | 2019.11.24 | 규격 추가",
    "1.1 | 2020.03.23 | TextInput event 에 asrContext 필드 추가",
    "1.2 | 2020.06.05 | TextInput event 의 sessionId 필드 삭제TextInput event 의 asrContext 에 playServiceId 필드 추가",
    "1.3 | 2020.09.02 | TextSource 에 playServiceId 추가",
    "1.4 | 2020.11.13 | TextRedirect directive 추가",
    "1.5 | 2020.11.30 | TextSourceFailed, TextRedirectFailed event 추가",
    "1.6 | 2021.12.09 | ExpectTyping Directive 추가",
    "1.7 | 2022.04.05 | TextInput 이벤트에 source 필드 추가"
  ]
},
    {
  "title": "Text > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "Text > TextAgent 사용",
  "hash": "#textagent-사용",
  "sentences": [
    "TextAgent 사용",
    "Text interface 규격에 따른 디바이스의 동작 제어는 TextAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 TextAgent instance 에 접근할 수 있습니다.",
    "val textAgent = nuguAndroidClient.textAgent",
    "NuguClient instance 를 통해 TextAgent instance 에 접근할 수 있습니다.",
    "let textAgent = nuguClient.textAgent",
    "CapabilityFactory::makeCapability 함수로 TextAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto text_handler(std::shared_ptr<ITextHandler>(\n        CapabilityFactory::makeCapability<TextAgent, ITextHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(text_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "Text > 텍스트 명령",
  "hash": "#텍스트-명령",
  "sentences": [
    "텍스트 명령",
    "임의의 텍스트 명령을",
    "TextInput",
    "event 로 요청할 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "textAgent.requestTextInput(text)",
    "textAgent.requestTextInput(text: textInput, requestType: .normal)",
    "text_handler->requestTextInput(text)"
  ]
},
    {
  "title": "Text > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Text\": {\n    \"version\": \"1.5\"\n  }\n}"
  ]
},
    {
  "title": "Text > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive"
  ]
},
    {
  "title": "Text > TextSource",
  "hash": "#textsource",
  "sentences": [
    "TextSource",
    "외부 시스템에서 Device Gateway를 사용하여 직접 연동하는 경우에만 사용",
    "{\n  \"header\": {\n    \"namespace\": \"Text\",\n    \"name\": \"TextSource\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.5\"\n  },\n  \"payload\": {\n    \"text\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}",
    "text | string | Y | 디바이스로 전달한 뒤 context를 추가하여 다시 Device Gateway로 전송해야 하는 text",
    "token | string | Y | 전송하는 text를 식별하기 위한 unique string",
    "playServiceId | string | N | 값이 존재하면 TextInput의 playServiceId 값을 설정하는데 사용 ASR.ExpectSpeech 보다 우선하여 동작 함.(TextSource 에 playServiceId 가 있는 경우 ASR.ExpecSpeech 에서 받은 playServiceId, domainTypes, asrContext 를 TextInput 으로 전달하지 않음)"
  ]
},
    {
  "title": "Text > TextRedirect",
  "hash": "#textredirect",
  "sentences": [
    "TextRedirect",
    "Play에서 다른 Play로 처리를 넘기는데, 특정 Text를 전달해서 실행하고자 하는 경우에 사용",
    "{\n  \"header\": {\n    \"namespace\": \"Text\",\n    \"name\": \"TextRedirect\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.5\"\n  },\n  \"payload\": {\n    \"text\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"playServiceId\": \"{{STRING}}\",\n    \"targetPlayServiceId\": \"{{STRING}}\"\n  }\n}",
    "text | string | Y | 디바이스로 전달한 뒤 context를 추가하여 다시 Device Gateway로 전송해야 하는 text",
    "token | string | Y | 전송하는 text를 식별하기 위한 unique string",
    "playServiceId | string | Y | 디렉티브를 지시한 PlayServiceId (Play에서 NPK 통한 응답일때는 라우터가 알아서 채워줌)",
    "targetPlayServiceId | string | N | 값이 존재하면 TextInput의 playServiceId 값을 설정하는데 사용 명확히 라우팅되어야 하는 Play를 지정하는 경우에 사용되고, 지정하지 않으면 라우팅 로직에 의해 라우팅 ASR.ExpectSpeech 보다 우선하여 동작 함.(TextRedirect에 targetPlayServiceId가 있는 경우 ASR.ExpecSpeech 에서 받은 playServiceId, domainTypes, asrContext 를 TextInput 으로 전달하지 않음)"
  ]
},
    {
  "title": "Text > ExpectTyping",
  "hash": "#expecttyping",
  "sentences": [
    "ExpectTyping",
    "Text input을 했을때 멀티턴 Play로 강제 라우팅 할 때 사용",
    "{\n  \"header\": {\n    \"namespace\": \"Text\",\n    \"name\": \"TextSource\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.5\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"domainTypes\": [],\n    \"asrContext\": {\n      \"task\": \"{{STRING}}\",\n      \"sceneId\": \"{{STRING}}\",\n      \"sceneText\": [\n        \"{{STRING}}\"\n      ],\n      \"playServiceId\" : \"playServiceId\"\n    }\n  }\n}",
    "playServiceId | string | N | 값이 존재하면 이후 입력하는 TextInput 이벤트의 playServiceId 값을 설정하는데 사용",
    "domainTypes | string | N | TextInput 이벤트로 입력되는 text 분석 시 NLU에서 사용할 domainType 셋팅 정보(ASR.ExpectSpeech의 domainTypes와 동일한 용도)",
    "asrContext | object | N | ExpectTyping directive 수신 후 ASR.Recognize 이벤트 발생 시 포함 되어야 함",
    "asrContext.task | string | N | -",
    "asrContext.sceneId | string | N | -",
    "asrContext.playServiceId | string | N | -",
    "asrContext.sceneText | Array | N | -"
  ]
},
    {
  "title": "Text > Events",
  "hash": "#events",
  "sentences": [
    "Events"
  ]
},
    {
  "title": "Text > TextInput",
  "hash": "#textinput",
  "sentences": [
    "TextInput",
    "{\n  \"header\": {\n    \"namespace\": \"Text\",\n    \"name\": \"TextInput\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.5\"\n  },\n  \"payload\": {\n    \"text\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"sessionId\": \"{{STRING}}\",\n    \"playServiceId\": \"{{STRING}}\",\n    \"domainTypes\": [\n      \"{{STRING}}\"\n    ],\n    \"source\" : \"{{STRING}}\"\n  }\n}",
    "text | string | Y | TextSource directive 에서 전달한 text 디바이스에서 생성한 임의의 text",
    "token | string | N | TextSource에 의해 생성된 이벤트인 경우 TextSource의 token을 그대로 사용Chips interface, Display interface, Routine interface 에 의해 생성된 이벤트의 경우 해당 directive 에서 전달받은 token 을 사용디바이스에서 생성된 text는 임의의 값을 갖거나 필드를 갖지 않아도 됨",
    "playServiceId | string | N | ASR/Display/Routine/Text interface 에 의해 생성된 이벤트의 경우 해당 directive 에서 전달받은 playServiceId 를 사용",
    "domainTypes | array of string | N | ExpectSpeech에 의한 발화인 경우에만 ExpectSpeech에서 받은 domainTypes를 적용",
    "source | string | N | TextInput을 유발한 원인에 대한 정보 값"
  ]
},
    {
  "title": "Text > TextSourceFailed",
  "hash": "#textsourcefailed",
  "sentences": [
    "TextSourceFailed",
    "{\n  \"header\": {\n    \"namespace\": \"Text\",\n    \"name\": \"TextSourceFailed\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.5\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\",\n    \"errorCode\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | TextSource에서 정의한 token",
    "errorCode | string | Y | NOT_SUPPORTED_STATE"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/trialprocess",
  "order": 144,
  "indexes": [
    {
  "title": "체험판 신청하기",
  "hash": "",
  "sentences": [
    "체험판 신청하기"
  ]
},
    {
  "title": "체험판 신청하기 > 체험판 신청하기",
  "hash": "#체험판-신청하기",
  "sentences": [
    "체험판 신청하기",
    "체험판 SDK 는",
    "Developers Console",
    ">",
    "SDK",
    ">",
    "체험판 신청",
    "메뉴를 통해 누구나 사용해보실 수 있습니다. 신청자에 대한 기본 정보와 업체 정보, NUGU SDK 체험판을 사용할 디바이스/PoC 에 대한 정보를 입력해주세요."
  ]
},
    {
  "title": "체험판 신청하기 > 기본 정보",
  "hash": "#기본-정보",
  "sentences": [
    "기본 정보",
    "신청자명 (필수)",
    "NUGU SDK 체험판을 사용할 신청자의 이름을 입력해주세요.",
    "소속(조직명)",
    "소속된 회사나 조직의 이름을 입력해주세요.",
    "직급/직책",
    "소속된 조직에서의 직급을 입력해주세요.",
    "연락처 (필수)",
    "연락처를 입력해주세요.",
    "메일주소 (필수)",
    "메일주소를 입력해주세요.",
    "신청 목적 (필수)",
    "체험판을 신청하게 된 목적과 신청 배경을 입력해주세요."
  ]
},
    {
  "title": "체험판 신청하기 > 업체 정보",
  "hash": "#업체-정보",
  "sentences": [
    "업체 정보",
    "구분 (필수)",
    "NUGU SDK 체험판을 사용할 조직의 구분 (공공기관, 기업, 개인, 그 외 기타)을 선택해주세요.",
    "회사(단체)명 (필수)",
    "회사(단체)의 이름을 입력해주세요.",
    "회사소개서",
    "회사를 소개하는 문서가 있다면 첨부해주세요.",
    "홈페이지 주소",
    "회사의 홈페이지 주소가 있다면 입력해주세요."
  ]
},
    {
  "title": "체험판 신청하기 > 디바이스 정보",
  "hash": "#디바이스-정보",
  "sentences": [
    "디바이스 정보",
    "디바이스/서비스 이름 (필수)",
    "NUGU SDK 를 탑재할 디바이스나 서비스의 이름을 입력해주세요.",
    "디바이스 소개서 첨부",
    "해당 디바이스나 서비스에 대한 소개서가 있다면 첨부해주세요.",
    "구분 (필수)",
    "해당 디바이스나 서비스의 구분 (스피커, 로봇, 모바일 앱, 기타)을 선택해주세요.",
    "OS (필수)",
    "해당 디바이스나 서비스의 운영체제 (Android, iOS, Linux)를 선택해주세요."
  ]
},
    {
  "title": "체험판 신청하기 > 체험판 사용하기",
  "hash": "#체험판-사용하기",
  "sentences": [
    "체험판 사용하기",
    "체험판 신청서를 작성하고 이용 합의서에 동의하게 되면 NUGU SDK 를 사용할 수 있는 인증 정보를 발급받게 됩니다. 신청내역에서 작성한 신청서 정보를 클릭하면 인증 정보를 조회할 수 있습니다. NUGU SDK 체험판은 신청서를 제출한 날로부터 3개월간 사용이 가능하며, 3개월이 지난 시점에서는 발급된 인증 정보가 만료되어 파일 다운로드 및 SDK 사용이 불가능하게 됩니다."
  ]
},
    {
  "title": "체험판 신청하기 > NUGU SDK 체험판 파일 다운로드",
  "hash": "#nugu-sdk-체험판-파일-다운로드",
  "sentences": [
    "NUGU SDK 체험판 파일 다운로드",
    "상태",
    "NUGU SDK 체험판의 상태값을 표기합니다. 유효 기간 동안은 사용중, 유효 기간이 지나면 만료로 표기됩니다.",
    "인증 유효 기간",
    "NUGU SDK 체험판의 유효기간을 표기합니다. 유효 기간은 신청일로부터 3개월입니다.",
    "PoC 인증 정보",
    "NUGU SDK를 통해 NUGU 플랫폼과 연동을 위한 인증정보를 나타냅니다. clientId, clientSecret 값을 표시합니다.",
    "인증정보 Config 파일",
    "PoC 인증정보를 담고 있는 Config 파일입니다. NUGU SDK를 사용하여 개발할 때 이 파일을 다운로드 받아서 사용합니다. iOS 및 Android/Linux로 OS별 구분하여 제공합니다.",
    "음성인식 모델 파일",
    "NUGU SDK를 사용하여 개발할 때 요구되는 음성인식 모델 파일을 다운로드 받을 수 있습니다. PoC의 특성에 따라 다르게 제공됩니다. 모바일 앱에 대한 음성인식 모델 파일을 디폴트로 제공합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/tts",
  "order": 155,
  "indexes": [
    {
  "title": "TTS",
  "hash": "",
  "sentences": [
    "TTS",
    "음성 합성 결과를 전달받기 위한 규격"
  ]
},
    {
  "title": "TTS > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.3 입니다.",
    "1.0 | 2019.11.24 | 규격 추가",
    "1.1 | 2020.03.23 | Stop directive 에서 token 필드 삭제",
    "1.2 | 2020.06.05 | Context 에 token 필드 추가",
    "1.3 | 2020.11.09 | SpeechStarted, SpeechStopped, SpeechFinished event 전송 규칙 수정"
  ]
},
    {
  "title": "TTS > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface"
  ]
},
    {
  "title": "TTS > TTSAgent 사용",
  "hash": "#ttsagent-사용",
  "sentences": [
    "TTSAgent 사용",
    "TTS interface 규격에 따른 디바이스의 동작 제어는 TTSAgent 가 처리합니다.",
    "Android",
    "iOS",
    "Linux",
    "NuguAndroidClient instance 를 통해 TTSAgent instance 에 접근할 수 있습니다.",
    "val ttsAgent = nuguAndroidClient.ttsAgent",
    "NuguClient instance 를 통해 TTSAgent instance 에 접근할 수 있습니다.",
    "let ttsAgent = nuguClient.ttsAgent",
    "CapabilityFactory::makeCapability 함수로 TTSAgent 를 생성하고 NuguClient 에 추가해 주어야합니다.",
    "auto tts_handler(std::shared_ptr<ITTSHandler>(\n        CapabilityFactory::makeCapability<TTSAgent, ITTSHandler>()));\n\nnugu_client->getCapabilityBuilder()\n    ->add(tts_handler.get())\n    ->construct();"
  ]
},
    {
  "title": "TTS > 재생 상태 정보",
  "hash": "#재생-상태-정보",
  "sentences": [
    "재생 상태 정보",
    "Speak",
    "directive 로 전달된 음원에 대한 재생 상태를 모니터링 할 수 있습니다.",
    "Android",
    "iOS",
    "Linux",
    "TTSAgentInterface.Listener 를 추가합니다.",
    "val listener = object: TTSAgentInterface.Listener {\n    override fun onStateChanged(state: State, dialogRequestId: String) {\n        ...\n    }\n\n    ...\n}\nttsAgent.addListener(listener)",
    "TTSAgentDelegate 를 추가합니다.",
    "class MyTTSAgentDelegate: TTSAgentDelegate {\n    func ttsAgentDidChange(state: TTSState, dialogRequestId: String) {\n        ...\n    }\n\n    ...\n}\nttsAgent.add(delegate: MyTTSAgentDelegate())",
    "ITTSListener 를 추가합니다.",
    "class MyTTSListener : public ITTSListener {\npublic:\n    ...\n\n    void onTTSState(TTSState state, const std::string &dialog_id) override\n    {\n        ...\n    }\n\n    ...\n};\nauto tts_listener(std::make_shared<MyTTSListener>());\nCapabilityFactory::makeCapability<TTSAgent, ITTSHandler>(tts_listener.get());"
  ]
},
    {
  "title": "TTS > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"TTS\": {\n    \"version\": \"1.2\",\n    \"ttsActivity\": \"{{STRING}}\",\n    \"engine\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "ttsActivity | string | Y | TTS 재생 상태IDLEPLAYINGPAUSEDFINISHEDSTOPPEDIDLE인 경우는 최초 전원을 켰을 때만 가능하고 이후에는 나올 수 없음",
    "engine | string | N | Device 에서 사용하는 음성합성 engine 을 명시 NUGU 음성합성 engine 을 사용하는 경우 “skt” (값을 채우지 않으면 default “skt”)",
    "token | string | N | 현재 재생중인 TTS 의 token"
  ]
},
    {
  "title": "TTS > Directive",
  "hash": "#directive",
  "sentences": [
    "Directive"
  ]
},
    {
  "title": "TTS > Speak",
  "hash": "#speak",
  "sentences": [
    "Speak",
    "새로운 TTS 재생 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"TTS\",\n    \"name\": \"Speak\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"sourceType\": \"{{STRING}}\",\n    \"format\": \"{{STRING}}\",\n    \"text\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "sourceType | string | N | URL or ATTACHMENT(default 는 ATTACHMENT)",
    "format | string | Y | TEXT or SKML",
    "text | string | Y | tts text",
    "token | string | Y | 현재 TTS를 식별하기 위한 unique string"
  ]
},
    {
  "title": "TTS > Stop",
  "hash": "#stop",
  "sentences": [
    "Stop",
    "현재 TTS 중지 요청입니다.",
    "{\n  \"header\": {\n    \"namespace\": \"TTS\",\n    \"name\": \"Stop\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\"\n  }\n}"
  ]
},
    {
  "title": "TTS > Event",
  "hash": "#event",
  "sentences": [
    "Event"
  ]
},
    {
  "title": "TTS > SpeechStarted",
  "hash": "#speechstarted",
  "sentences": [
    "SpeechStarted",
    "{\n  \"header\": {\n    \"namespace\": \"TTS\",\n    \"name\": \"SpeechStarted\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | TTS.Speak 디렉티브에서 설정한 token 값"
  ]
},
    {
  "title": "TTS > SpeechFinished",
  "hash": "#speechfinished",
  "sentences": [
    "SpeechFinished",
    "{\n  \"header\": {\n    \"namespace\": \"TTS\",\n    \"name\": \"SpeechFinished\",\n    \"messageId\": \"{{STRING}}\",\n    \"dialogRequestId\": \"{{STRING}}\",\n    \"version\": \"1.1\"\n  },\n  \"payload\": {\n    \"playServiceId\": \"{{STRING}}\",\n    \"token\": \"{{STRING}}\"\n  }\n}",
    "token | string | Y | TTS.Speak 디렉티브에서 설정한 token 값"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-1",
  "order": 58,
  "indexes": [
    {
  "title": "가스차단기",
  "hash": "",
  "sentences": [
    "가스차단기",
    "NUGU스마트홈에서 제공하는 기종 중 가스차단기(GAS_BREAKER) 기종에 대한 정보입니다. 가스차단기는 닫는 기능을 제공하며 안전 상의 이유로 음성제어 시 여는 기능은 제공하고 있지 않습니다."
  ]
},
    {
  "title": "가스차단기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 가스차단기(GAS_BREAKER)을 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "가스차단기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "가스차단기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"GAS_BREAKER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"부엌\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-10",
  "order": 68,
  "indexes": [
    {
  "title": "스마트스위치",
  "hash": "",
  "sentences": [
    "스마트스위치",
    "NUGU스마트홈에서 제공하는 기종 중 스마트스위치(SWITCH) 기종에 대한 정보입니다. 스마트스위치는 스위치를 통해 제어하는 최종 기기의 전원 제어 기능을 지원합니다. 스마트스위치는 스위치를 제어함으로써 실제로 타 유형의 스마트홈 기기를 최종적으로 제어할 수 있습니다. 이 때 다양한 명령어를 통한 기능을 제공하려면 최종제어하는 스마트홈 기기 유형으로 등록해주세요."
  ]
},
    {
  "title": "스마트스위치 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 세탁기(WASHER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다. 스마트스위치는 스위치를 제어함으로써 실제로 타 유형의 스마트홈 기기를 최종적으로 제어할 수 있습니다. 이 때 다양한 명령어를 통한 기능을 제공하려면 최종제어하는 스마트홈 기기 유형으로 등록해주세요."
  ]
},
    {
  "title": "스마트스위치 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "스마트스위치 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"SWITCH\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"멀티탭\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-11",
  "order": 69,
  "indexes": [
    {
  "title": "스마트플러그",
  "hash": "",
  "sentences": [
    "스마트플러그",
    "NUGU스마트홈에서 제공하는 기종 중 스마트플러그(PLUG) 기종에 대한 정보입니다. 스마트플러그는 플러그의 전원 제어 기능, 플러그를 통한 전력사용량 조회 기능, 종료예약 설정 기능을 지원합니다."
  ]
},
    {
  "title": "스마트플러그 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 스마트플러그(PLUG)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "스마트플러그 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "스마트플러그 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"PLUG\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"내방\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"setTimeControl\": {},\n        \"powerControl\": {},\n        \"powerCheck\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-12",
  "order": 70,
  "indexes": [
    {
  "title": "식기세척기",
  "hash": "",
  "sentences": [
    "식기세척기",
    "NUGU스마트홈에서 제공하는 기종 중 식기세척기(DISH_WASHER) 기종에 대한 정보입니다. 식기세척기는 전원 자체를 켜거나 끄지 않고 기능을 시작 혹은 중지하며 현재 기기의 동작상태 체크 기능을 지원합니다."
  ]
},
    {
  "title": "식기세척기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 식기세척기(DISH_WASHER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "식기세척기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "식기세척기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"DISH_WASHER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"부엌\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {},\n        \"stateCheck\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-13",
  "order": 71,
  "indexes": [
    {
  "title": "에너지미터",
  "hash": "",
  "sentences": [
    "에너지미터",
    "NUGU스마트홈에서 제공하는 기종 중 에너지미터(ENERGY_METER) 기종에 대한 정보입니다. 에너지미터는 전력사용량을 측정하는 기기로 현재 기기의 전력사용량 및 목표전력사용량 조회 기능 등을 지원합니다."
  ]
},
    {
  "title": "에너지미터 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 에너지미터(ENERGY_METER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "에너지미터 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "에너지미터 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"ENERGY_METER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"거실\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerCheck\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-14",
  "order": 72,
  "indexes": [
    {
  "title": "에어워셔",
  "hash": "",
  "sentences": [
    "에어워셔",
    "NUGU스마트홈에서 제공하는 기종 중 에어워셔(AIR_WASHER) 기종에 대한 정보입니다. 에어워셔는 에어워셔 기기의 전원 제어 기능, 풍량 제어 기능, 에어워셔에서 측정한 주변 공기상태 조회 기능, 종료예약 설정 기능, 각 모델별로 지원하는 모드 설정 기능, 목표 설정 습도 제어 기능을 지원합니다."
  ]
},
    {
  "title": "에어워셔 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 에어워셔(AIR_WASHER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "에어워셔 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "에어워셔 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"AIR_WASEHR\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"부엌\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"airflowControl\": {\n          \"supportedAirflowTypes\": [\n            \"HIGH\",\n            \"MIDDLE\",\n            \"LOW\",\n            \"SPEED1\",\n            \"SPEED2\",\n            \"SPEED3\",\n            \"TURBO\"\n          ] // 지원 가능한 Airflow 타입 참고.\n        },\n        \"airQualityCheck\": {},\n        \"setTimeControl\": {},\n        \"modeControl\": {\n          \"supportedModes\": [\n            \"DEHUMIDITY\",\n            \"COMFORT\",\n            \"AIR_BLAST\",\n            \"ENERGY_SAVING\"\n          ] // 지원 가능한 Mode 타입 참고.\n        },\n        \"powerControl\": {},\n        \"humidityControl\": {\n          \"minHumidity\": \"30\",\n          \"maxHumidity\": \"70\",\n          \"humidityStep\": \"5\"\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-15",
  "order": 73,
  "indexes": [
    {
  "title": "에어컨",
  "hash": "",
  "sentences": [
    "에어컨",
    "NUGU스마트홈에서 제공하는 기종 중 에어컨(AIR_CONDITIONER) 기종에 대한 정보입니다. 에어컨은 냉방 온도 조절 장치로 전원 제어 기능 및 목표 온도 설정 기능, 에어컨의 풍량 제어 기능, 각 모델별로 지원하는 모드 설정 기능, 종료예약 설정 기능, 에어컨에서 측정한 주변 공기상태 조회 기능을 지원합니다."
  ]
},
    {
  "title": "에어컨 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 에어컨(AIR_CONDITIONER)을 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "에어컨 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "에어컨 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"AIR_CONDITIONER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"거실\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"airflowControl\": {\n          \"supportedAirflowTypes\": [\n            \"HIGH\",\n            \"MIDDLE\",\n            \"LOW\",\n            \"SPEED1\",\n            \"SPEED2\",\n            \"SPEED3\",\n            \"AUTO\"\n          ]\n        },\n        \"airQualityCheck\": {},\n        \"setTimeControl\": {},\n        \"modeControl\": {\n          \"supportedModes\": [\n            \"DEHUMIDITY\",\n            \"COMFORT\",\n            \"AIR_BLAST\",\n            \"ENERGY_SAVING\"\n          ] // 지원 가능한 Mode 타입 참고.\n        },\n        \"powerControl\": {},\n        \"temperatureControl\": {\n          \"minTemperature\": \"19\",\n          \"maxTemperature\": \"36\",\n          \"temperatureStep\": \"1\"\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-16",
  "order": 74,
  "indexes": [
    {
  "title": "열림감지센서",
  "hash": "",
  "sentences": [
    "열림감지센서",
    "NUGU스마트홈에서 제공하는 기종 중 열림감지센서(OPEN_SENSOR) 기종에 대한 정보입니다. 열림감지센서는 현재 센서의 상태를 조회하는 기능을 지원합니다."
  ]
},
    {
  "title": "열림감지센서 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 열림감지센서(OPEN_SENSOR)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "열림감지센서 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "열림감지센서 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"OPEN_SENSOR\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"현관\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"stateCheck\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-17",
  "order": 75,
  "indexes": [
    {
  "title": "오븐",
  "hash": "",
  "sentences": [
    "오븐",
    "NUGU스마트홈에서 제공하는 기종 중 오븐(OVEN) 기종에 대한 정보입니다. 오븐은 전원 제어 기능 및 오븐 기기 자체의 온도를 제어하는 기능과 오븐의 현재 상태를 조회하는 기능을 지원합니다."
  ]
},
    {
  "title": "오븐 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 오븐(OVEN)을 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "오븐 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "오븐 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"OVEN\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"부엌\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {},\n        \"stateCheck\": {},\n        \"deviceTemperatureControl\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-18",
  "order": 76,
  "indexes": [
    {
  "title": "의류관리기",
  "hash": "",
  "sentences": [
    "의류관리기",
    "NUGU스마트홈에서 제공하는 기종 중 의류관리기(CLOTHING_CARE_MACHINE) 기종에 대한 정보입니다. 의류관리기는 전원 자체를 켜거나 끄지 않고 기능을 시작 혹은 중지하며 의류관리기의 현재 상태를 조회하는 기능을 지원합니다."
  ]
},
    {
  "title": "의류관리기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 의류관리기(CLOTHING_CARE_MACHINE)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "의류관리기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "의류관리기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"CLOTHING_CARE_MACHINE\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"안방\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {},\n        \"stateCheck\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-19",
  "order": 77,
  "indexes": [
    {
  "title": "정수기",
  "hash": "",
  "sentences": [
    "정수기",
    "NUGU스마트홈에서 제공하는 기종 중 정수기(WATER_PURIFIER) 기종에 대한 정보입니다. 정수기는 현재 기기의 상태를 조회하는 기능을 지원합니다."
  ]
},
    {
  "title": "정수기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 정수기(WATER_PURIFIER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "정수기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "정수기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"WATER_PURIFIER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"부엌\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"stateCheck\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-2",
  "order": 59,
  "indexes": [
    {
  "title": "가습기",
  "hash": "",
  "sentences": [
    "가습기",
    "NUGU스마트홈에서 제공하는 기종 중 가습기(HUMIDIFICATION) 기종에 대한 정보입니다. 가습기는 풍량 제어 등을 통해 주변의 습도상태를 제어하는 기기로 전원제어 및 가습수준에 따른 풍량제어, 각 모델별로 지원하는 모드 설정 기능, 종료예약 설정 등의 기능을 제공합니다."
  ]
},
    {
  "title": "가습기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 가습기(HUMIDIFICATION)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "가습기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "가습기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"HUMIDIFICATION\",\n      \"deviceTypeName\": \"가습기\",\n      \"deviceModelName\": \"example humidification\",\n      \"friendlyName\": \"거실\",\n      \"manufacturer\": \"example manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {\n        },\n        \"airflowControl\": {\n          \"supportedAirflowTypes\": [\n            \"HIGH\",\n            \"MIDDLE\",\n            \"LOW\",\n            \"AUTO\"\n          ] // 지원 가능한 Airflow 타입 참고.\n        },\n        \"modeControl\": {\n          \"supportedModes\": [\n            \"DEHUMIDITY\",\n            \"COMFORT\",\n            \"AIR_BLAST\",\n            \"ENERGY_SAVING\"\n          ] // 지원 가능한 Mode 타입 참고.\n        },\n        \"setTimeControl\": {\n        },\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-20",
  "order": 78,
  "indexes": [
    {
  "title": "제습기",
  "hash": "",
  "sentences": [
    "제습기",
    "NUGU스마트홈에서 제공하는 기종 중 제습기(DEHUMIDIFICATION) 기종에 대한 정보입니다. 제습기는 동작을 위한 전원 제어 기능 및 목표 습도 설정 기능, 제습기의 풍량 제어 기능과 각 모델별로 지원하는 모드 설정 기능, 종료예약 설정 기능을 지원합니다."
  ]
},
    {
  "title": "제습기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 제습기(DEHUMIDIFICATION)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "제습기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "제습기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"DEHUMIDIFICATION\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"부엌\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"airflowControl\": {\n          \"supportedAirflowTypes\": [\n            \"HIGH\",\n            \"MIDDLE\",\n            \"LOW\",\n            \"SPEED1\",\n            \"SPEED2\",\n            \"SPEED3\",\n            \"TURBO\"\n          ] // 지원 가능한 Airflow 타입 참고.\n        },\n        \"setTimeControl\": {},\n        \"modeControl\": {\n          \"supportedModes\": [\n            \"DEHUMIDITY\",\n            \"COMFORT\",\n            \"AIR_BLAST\",\n            \"ENERGY_SAVING\"\n          ] // 지원 가능한 Mode 타입 참고.\n        },\n        \"powerControl\": {},\n        \"humidityControl\": {\n          \"minHumidity\": \"30\",\n          \"maxHumidity\": \"70\",\n          \"humidityStep\": \"1\"\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-21",
  "order": 79,
  "indexes": [
    {
  "title": "조명",
  "hash": "",
  "sentences": [
    "조명",
    "NUGU스마트홈에서 제공하는 기종 중 조명(LIGHT) 기종에 대한 정보입니다. 조명은 전원 제어 기능 및 모델에 따른 밝기 조절, 색상 변경에 대한 기능을 지원합니다."
  ]
},
    {
  "title": "조명 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 조명(LIGHT)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "조명 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "조명 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"LIGHT\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"거실\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {},\n        \"colorControl\": {\n          \"supportedColorTypes\": [\n            \"BLUE\",\n            \"GREEN\",\n            \"CYAN\",\n            \"MINT\",\n            \"SKYBLUE\",\n            \"PURPLE\",\n            \"LAVENDER\",\n            \"COOL_WHITE\",\n            \"SALMON\",\n            \"GOLD\",\n            \"RED\",\n            \"MAGENTA\",\n            \"CRIMSON\",\n            \"WARM_WHITE\",\n            \"ORANGE\",\n            \"SOFTWHITE\",\n            \"PINK\",\n            \"WHITE\",\n            \"DAY_LIGHT\",\n            \"YELLOW\",\n            \"TURQUOISE\",\n            \"LIGHT_PURPLE\"\n          ] // 지원 가능한 ColorType 타입 참고\n        },\n        \"brightnessControl\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-3",
  "order": 60,
  "indexes": [
    {
  "title": "건조기",
  "hash": "",
  "sentences": [
    "건조기",
    "NUGU스마트홈에서 제공하는 기종 중 건조기(DRYER) 기종에 대한 정보입니다. 건조기는 전원 자체를 켜거나 끄지 않고 기능을 시작 혹은 중지합니다."
  ]
},
    {
  "title": "건조기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 건조기(DRYER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "건조기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "건조기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"DRYER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"안방\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-4-1",
  "order": 62,
  "indexes": [
    {
  "title": "공기청정기",
  "hash": "",
  "sentences": [
    "공기청정기",
    "NUGU스마트홈에서 제공하는 기종 중 공기청정기(AIR_CLEANER) 기종에 대한 정보입니다. 공기청정기는 전원 제어 및 공기청정기 자체의 풍량 제어, 각 모델별로 지원하는 모드 설정 기능, 종료예약 설정 기능 등을 제공하며 공기청정기에서 측정한 주변 공기 상태 조회 기능도 제공할 수 있습니다."
  ]
},
    {
  "title": "공기청정기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 공기청정기(AIR_CLEANER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "공기청정기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "공기청정기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"AIR_CLEANER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"부엌\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"airflowControl\": {\n          \"supportedAirflowTypes\": [\n            \"HIGH\",\n            \"MIDDLE\",\n            \"LOW\",\n            \"AUTO\"\n          ] // 지원 가능한 Airflow 타입 참고.\n        },\n        \"airQualityCheck\": {},\n        \"setTimeControl\": {},\n        \"modeControl\": {\n          \"supportedModes\": [\n            \"DEHUMIDITY\",\n            \"COMFORT\",\n            \"AIR_BLAST\",\n            \"ENERGY_SAVING\"\n          ] // 지원 가능한 Mode 타입 참고.\n        },\n        \"powerControl\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-4",
  "order": 61,
  "indexes": [
    {
  "title": "공기센서",
  "hash": "",
  "sentences": [
    "공기센서",
    "NUGU스마트홈에서 제공하는 기종 중 공기센서(AIR_SENSOR) 기종에 대한 설명입니다. 공기센서에서 측정한 주변 공기 상태 조회 기능을 제공합니다."
  ]
},
    {
  "title": "공기센서 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 공기센서(AIR_SENSOR)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "공기센서 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "공기센서 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"AIR_SENSOR\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"거실\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"airQualityCheck\": {\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-5",
  "order": 63,
  "indexes": [
    {
  "title": "냉장고",
  "hash": "",
  "sentences": [
    "냉장고",
    "NUGU스마트홈에서 제공하는 기종 중 냉장고(REFRIGERATOR) 기종에 대한 정보입니다. 냉장고는 각 모델별로 지원하는 모드 설정 기능 및 냉장고 기기 자체의 온도를 제어하는 기능을 지원합니다."
  ]
},
    {
  "title": "냉장고 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 냉장고(REFRIGERATOR)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "냉장고 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "냉장고 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"REFRIGERATOR\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"부엌\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"modeControl\": {\n          \"supportedModes\": [\n            \"RAPID_FREEZE\",\n            \"SLEEP\"\n          ]\n        },\n        \"deviceTemperatureControl\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-6",
  "order": 64,
  "indexes": [
    {
  "title": "로봇청소기",
  "hash": "",
  "sentences": [
    "로봇청소기",
    "NUGU스마트홈에서 제공하는 기종 중 로봇청소기(ROBOT_CLEANER) 기종에 대한 정보입니다. 로봇청소기는 로봇청소기 청소 시작 및 중지 등의 동작 제어 기능과 충전 기능을 지원합니다. 청소 중지 명령 시에 충전을 하도록 제어하도록 구현하는 것을 권장합니다."
  ]
},
    {
  "title": "로봇청소기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 로봇청소기(ROBOT_CLEANER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "로봇청소기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "로봇청소기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"ROBOT_CLEANER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"거실\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"chargeControl\": {},\n        \"powerControl\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-7",
  "order": 65,
  "indexes": [
    {
  "title": "보일러",
  "hash": "",
  "sentences": [
    "보일러",
    "NUGU스마트홈에서 제공하는 기종 중 보일러(BOILER) 기종에 대한 정보입니다. 보일러는 공간에 대한 난방 제어 장치로 보일러 동작을 위한 전원 제어 기능 및 목표 설정 온도 제어, 각 모델별로 지원하는 모드 설정 기능, 종료예약 설정 기능을 지원합니다."
  ]
},
    {
  "title": "보일러 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 보일러(BOILER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "보일러 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "보일러 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"BOILER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"거실\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"setTimeControl\": {},\n        \"modeControl\": {\n          \"supportedModes\": [\n            \"HEAT_ROOM\",\n            \"HOTWATER\",\n            \"OUTSIDE\",\n            \"SLEEP\"\n          ]\n        },\n        \"powerControl\": {},\n        \"temperatureControl\": {\n          \"minTemperature\": \"21\",\n          \"maxTemperature\": \"40\",\n          \"temperatureStep\": \"1\"\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-8",
  "order": 66,
  "indexes": [
    {
  "title": "선풍기",
  "hash": "",
  "sentences": [
    "선풍기",
    "NUGU스마트홈에서 제공하는 기종 중 선풍기(FAN) 기종에 대한 정보입니다. 선풍기는 선풍기 동작을 위한 전원 제어 기능 및 선풍기의 풍량 제어 기능, 각 모델별로 지원하는 모드 설정 기능, 종료예약 설정 기능을 지원합니다."
  ]
},
    {
  "title": "선풍기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 선풍기(FAN)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "선풍기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "선풍기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"FAN\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"거실\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"airflowControl\": {\n          \"supportedAirflowTypes\": [\n            \"HIGH\",\n            \"MIDDLE\",\n            \"LOW\",\n            \"SPEED1\",\n            \"SPEED2\",\n            \"SPEED3\",\n            \"TURBO\"\n          ] // 지원 가능한 Airflow 타입 참고.\n        },\n        \"setTimeControl\": {},\n        \"modeControl\": {\n          \"supportedModes\": [\n            \"DEHUMIDITY\",\n            \"COMFORT\",\n            \"AIR_BLAST\",\n            \"ENERGY_SAVING\"\n          ] // 지원 가능한 Mode 타입 참고.\n        },\n        \"powerControl\": {}\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/smarthome-play/smarthomedevicetype/type-9",
  "order": 67,
  "indexes": [
    {
  "title": "세탁기",
  "hash": "",
  "sentences": [
    "세탁기",
    "NUGU스마트홈에서 제공하는 기종 중 세탁기(WASHER) 기종에 대한 정보입니다. 세탁기는 전원 자체를 켜거나 끄지 않고 기능을 시작 혹은 중지합니다."
  ]
},
    {
  "title": "세탁기 > Discovery",
  "hash": "#discovery",
  "sentences": [
    "Discovery",
    "NUGU스마트홈에 세탁기(WASHER)를 등록하고자 할 때 Discovery Request/Response의 예시입니다. 사용자가 NUGU 모바일 앱을 통해 IoT ServiceProvider의 계정을 연동한 후 스마트홈 기기를 등록하려고 시도할 때 NUGU스마트홈이 SmartHomeBackendProxy에 Discovery 요청을 보내고 이 때 등록할 수 있는 스마트홈 기기 정보를 응답해야 합니다."
  ]
},
    {
  "title": "세탁기 > Discovery Request 예시",
  "hash": "#discovery-request-예시",
  "sentences": [
    "Discovery Request 예시",
    "(POST, /nugu/v1/devices)",
    "{\n  \"token\": \"7KOdwPQdJPZf4KYsjtHdqz3e8fKd\"\n}"
  ]
},
    {
  "title": "세탁기 > Discovery Response 예시",
  "hash": "#discovery-response-예시",
  "sentences": [
    "Discovery Response 예시",
    "{\n  \"devices\": [\n    {\n      \"id\": \"1234567\",\n      \"deviceTypeCode\": \"WASHER\",\n      \"deviceTypeName\": \"example_device_type\",\n      \"deviceModelName\": \"example_model_name\",\n      \"friendlyName\": \"베란다\",\n      \"manufacturer\": \"example_manufacturer\",\n      \"supportedCapabilities\": {\n        \"powerControl\": {\n        }\n      },\n      \"customData\": {\n        \"foo\": \"bar\"\n      },\n      \"connectionStatus\": true\n    }\n  ]\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/distribute-and-manage-a-play/update-a-play",
  "order": 103,
  "indexes": [
    {
  "title": "Play 업데이트",
  "hash": "",
  "sentences": [
    "Play 업데이트",
    "Play 업데이트를 통해 배포를 완료한 Play를 수정하거나 기능을 고도화할 수 있습니다."
  ]
},
    {
  "title": "Play 업데이트 > 업데이트 등록",
  "hash": "#업데이트-등록-",
  "sentences": [
    "업데이트 등록",
    "Play가 배포되면 Play는 상용 서비스 상태가 되며, Play 등록 현황 리스트에 업데이트 버전을 등록할 수 있도록",
    "업데이트",
    "버튼이 생성됩니다. 이 버튼을 클릭하여 Play의 업데이트 버전을 등록할 수 있습니다.",
    "Developers > Play kit > Play 관리 페이지의 서비스중 Play에, Play Builder에서 서비스중 버전 이후의 새로운 빌드를 생성한 경우, 업데이트 버튼이 생성되며, 클릭 할 수 있습니다.",
    "Snapshot 버전 리스트에서 등록할 버전을 선택하고 확인 버튼을 클릭합니다.",
    "이후의 업데이트 절차는 Play 등록 방법과 동일합니다. 업데이트 등록이 완료되면 업데이트 버전에 대한 심사/배포 프로세스가 진행됩니다.",
    "Play 등록에 대한 자세한 내용은 Play 정보 등록 및 심사 요청하기를 참고하세요."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/use-backend-proxy",
  "order": 44,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-branch-actions",
  "order": 33,
  "indexes": [
    {
  "title": "Branch Action (Action Tree)",
  "hash": "",
  "sentences": [
    "Branch Action (Action Tree)",
    "하나의 Intent 를 처리하는 최소 단위인 Action 은 사용자가 어떠한 의도를 가지고 발화했을 때 그 발화를 해결하는 기능을 담고 있습니다. 하나의 Play 안에서 처리하고자 하는 Intent 가 여러 개라면 아래 그림처럼 그 Intent 의 수 만큼 Action 을 만들어야 사용자의 발화에 대해 적절한 응답 혹은 동작을 수행할 수 있게 됩니다.",
    "그러나 하나의 Intent 라도 그것을 처리하는 로직이 복잡할 경우 하나의 Action 만으로는 응답이 어려울 수 있습니다. 예를 들어, 날씨를 알려달라는 사용자의 요청에 대해 과거/현재/미래 별로 다른 응답을 하고 싶은 경우 하나의 Action 만으로는 구현이 쉽지 않습니다. 이때, Action 하위에 다시 Action 을 만드는 Action Tree 를 만들어, 조건에 맞는 응답 혹은 동작을 수행할 수 있습니다."
  ]
},
    {
  "title": "Branch Action (Action Tree) > Action Tree",
  "hash": "#action-tree",
  "sentences": [
    "Action Tree",
    "아리아, 안녕!",
    "에서는 하나의 Intent 를 처리하는 Action 을 하나만 만들어서 응답을 정의했습니다.",
    "그러나 같은 의도이더라도 조금씩 다른 요구사항이나 조건들이 있기 때문에 이를 하나의 Action 에서 처리하려면, 모든 조건들을 서버 개발자가 if 문을 사용하여 코딩을 해야합니다. 이렇게 예상 가능한 모든 경우(case)마다 하나의 if 문을 개발자가 작성했다 하더라도, 개발이 된 후에는 어떤 상황에 어떻게 응답하는지를 개발자가 아닌 사람은 파악하기 힘들고, 코드를 수정하는 것은 더더욱 어렵습니다. Play Builder 에서는 Action 을 상하관계로 중첩하여 Tree 를 구성하여 대화 구조를 구성할 수 있으며, 이렇게 구성된 대화는 유지 보수 또한 상대적으로 쉽습니다.",
    "한 Action 하위에 2개의 Action 을 다음과 같이 추가할 수 있습니다. 이 때 Trigger 를 Intent 로 갖는 Action 을 Root 위치에 있다라고 하며, Root 에 하위에 있는 Action 은 Branch 위치에 있다고 합니다.",
    "Action 의 하위에 여러 개의 Branch Action 을 만들 수도 있습니다. 그리고 각 Branch Action 하위에 Branch Action 을 하나 더 둘 수 있어 깊은 Tree 구조를 만들 수도 있습니다.",
    "이러한 Tree 맨 끝(하위)의 Action 들은 반드시 응답(Response)을 가져야 합니다.",
    "아래 예처럼 Branch 를 사용하여 하나의 “날씨 안내” Action 을 여러 개의 Action 으로 나누어 처리하는 것이 가능하며, 이렇게 Tree 구조를 만들게 되면 상황에 맞는 정확한 답변이 가능해집니다.",
    "Branch Action 은 기본적으로 Root Action 과 같으나, Trigger 가 Intent 가 아니라 조건(Precondition)이라는 차이점이 있습니다.",
    "위의 예처럼 ‘",
    "를 요청한 경우’, ‘",
    "한 경우’ 같이 조건이 Branch Action 의 Trigger 가 되며, 해당 조건이 만족했을 경우에만 그 Branch Action 이 실행됩니다.",
    "조건이 만족하는지 여부는 상위 Action 에서 하위 Action 으로 내려오면서 차례로 판단이 이루어지며, 만족시키는 Action 이 하나라도 있으면 해당 Action 에서 정의한 응답(Response)가 실행되고 대화의 한 턴이 종료됩니다.",
    "위 ‘날씨 안내’ Action 에 대한 조건(Precondition)만 자세히 보면 다음과 같습니다."
  ]
},
    {
  "title": "Branch Action (Action Tree) > Action Tree 만들기",
  "hash": "#action-tree-만들기",
  "sentences": [
    "Action Tree 만들기",
    "앞에서 만들어 둔 Intent 인 ‘ask.weather’ 와 Action 인 ‘answer.weather’ 를 가지고 Action Tree 를 만드는 과정을 하나하나 알아보도록 하겠습니다.",
    "Play Builder 홈 화면에서 Action 을 추가할 Play 를 클릭하여 선택한 후, Actions > Custom Actions을 누릅니다.",
    "Acton List 에서 answer.weather를 선택합니다.",
    "응답에 필요한 정보 가져오기 영역에서 다음과 같이 Parameter 및 Backend proxy 사용 옵션을 설정합니다.\n\n    \n\n    \n      Parameter: ‘day’, ‘location’, ‘day_check’\n      Backend proxy 사용 여부 : ‘ON’\n      Backend Parameter: ‘status’, ‘resultcode’\n      Parameter 등록 및 설정 방법에 대한 자세한 내용은 Parameter를 참고하세요.\n      Output 정의 영역에서 Branch Action 버튼을 클릭하여 Output 유형을 Branch 로 선택합니다.",
    "Parameter: ‘day’, ‘location’, ‘day_check’",
    "Backend proxy 사용 여부 : ‘ON’",
    "Backend Parameter: ‘status’, ‘resultcode’",
    "Parameter 등록 및 설정 방법에 대한 자세한 내용은 Parameter를 참고하세요.",
    "Output 정의 영역에서 Branch Action 버튼을 클릭하여 Output 유형을 Branch 로 선택합니다.",
    "Output 정의 영역의 Branch Action list 내에 위치한 입력 필드에 Branch 명(하위 Action 명)을 입력한 후 Enter 키를 누르거나 입력 필드 외 영역을 마우스 왼쪽 버튼을 클릭하여 Branch 를 등록합니다.\n\n    \n\n    \n      그림과 같이 Branch Action 4개를 만들어줍니다.\n      Action 이름은 다른 Action 과 중복되지 않도록 하여 자유롭게 입력합니다.\n      Branch 를 만든 경우에는 하나를 반드시 Default Branch 로 지정해주어야 합니다.\n      Default Branch 는 Branch 의 Trigger 를 조건을 하나도 만족시키지 못한 경우에 실행되는 Action 이며, Default 로 선택된 Branch Action 은 Trigger 정의가 필요 없습니다.\n      Default 를 선택하면 자동으로 Branch Action list 최하단으로 이동하게 됩니다.\n      \nPlay 저장 버튼을 클릭하여 지금까지 입력한 상황을 저장합니다. Branch Action 리스트의 상세 항목이 편집 상태로 변경됩니다.",
    "그림과 같이 Branch Action 4개를 만들어줍니다.",
    "Action 이름은 다른 Action 과 중복되지 않도록 하여 자유롭게 입력합니다.",
    "Branch 를 만든 경우에는 하나를 반드시 Default Branch 로 지정해주어야 합니다.",
    "Default Branch 는 Branch 의 Trigger 를 조건을 하나도 만족시키지 못한 경우에 실행되는 Action 이며, Default 로 선택된 Branch Action 은 Trigger 정의가 필요 없습니다.",
    "Default 를 선택하면 자동으로 Branch Action list 최하단으로 이동하게 됩니다.",
    "Play 저장 버튼을 클릭하여 지금까지 입력한 상황을 저장합니다. Branch Action 리스트의 상세 항목이 편집 상태로 변경됩니다."
  ]
},
    {
  "title": "Branch Action (Action Tree) > a_w_location Branch Action 추가",
  "hash": "#a_w_location-branch-action-추가",
  "sentences": [
    "a_w_location Branch Action 추가",
    "Branch Action 별로 구체적인 설정을 하기 위해 설정할 Branch 의 항목 ‘a_w_location’ 의 편집 버튼을 클릭합니다.",
    "이동한 Branch Action 설정 화면의 Trigger 영역에서 조건(Condition)을 추가하기 위해 + > Condition 버튼을 클릭하면 하단에 셀렉트 박스(Select Box)가 표시됩니다.\n\n    \n\n    \n      Branch Action 의 Trigger 는 Intent 가 아닌 Precondition 속성으로 자동 선택됩니다.\n      Condition 은 Trigger 가 될 하나의 조건입니다.",
    "Branch Action 의 Trigger 는 Intent 가 아닌 Precondition 속성으로 자동 선택됩니다.",
    "Condition 은 Trigger 가 될 하나의 조건입니다.",
    "첫 번째 셀렉트 박스에서 resultcode를 선택하고, 두 번째 셀렉트 박스에서 다음과 같을 경우를 선택한 후, 우측에 생긴 박스에서 String을 선택 상태로 두고 ‘정상’ 이라고 입력합니다.\n\n    \n\n    \n      이 설정은 resultcode 라는 Parameter 가 ‘정상’일 경우 이 Branch 를 실행한다라는 의미입니다.\n      \n+ 버튼을 클릭하여 조건(Condition)을 하나 더 추가한 후 + 버튼 좌측에 생긴 And/Or 조건은 And 를 선택한 상태에서, 첫 번째 셀렉트 박스에서 location를 선택하고, 두 번째 셀렉트 박스에서 존재하는 경우를 선택합니다.\n    \n\n    \n\n    \n      지금까지의 설정으로 첫 번째 Branch Action 의 Trigger 가 완성되었습니다.\n      이 Action 의 Precondition 은 이제 두 개의 Single Condition 이 AND 조건으로 묶인 Composite Condition 이 되었습니다.\n      이것의 의미는 ‘resultcode’ 라는 그릇 안에 ‘정상’이라는 값이 담겨 있으면서, ‘location’ Parameter 가 존재하는 경우’를 말합니다.\n    \n\n    그림으로 나타내어 보면 다음과 같습니다.",
    "이 설정은 resultcode 라는 Parameter 가 ‘정상’일 경우 이 Branch 를 실행한다라는 의미입니다.",
    "+ 버튼을 클릭하여 조건(Condition)을 하나 더 추가한 후 + 버튼 좌측에 생긴 And/Or 조건은 And 를 선택한 상태에서, 첫 번째 셀렉트 박스에서 location를 선택하고, 두 번째 셀렉트 박스에서 존재하는 경우를 선택합니다.",
    "지금까지의 설정으로 첫 번째 Branch Action 의 Trigger 가 완성되었습니다.",
    "이 Action 의 Precondition 은 이제 두 개의 Single Condition 이 AND 조건으로 묶인 Composite Condition 이 되었습니다.",
    "이것의 의미는 ‘resultcode’ 라는 그릇 안에 ‘정상’이라는 값이 담겨 있으면서, ‘location’ Parameter 가 존재하는 경우’를 말합니다.",
    "이제 이 페이지의 Output 정의 영역에서 Response 버튼을 클릭하고, Prompt 에 “의 날씨는 .”라고 입력합니다. 이제 첫 번째 ‘a.w.location’ Action 의 입력이 완료되었습니다.\n\n    \n\n    \n      resultcode 파라미터값이 ‘정상’이면서 location 파라미터가 존재한다면, 즉 location 이라는 그릇에 아무 값이라도 담겨 있으면 이 ‘a.w.location’ Action 이 동작하여 방금 입력한 값(“의 날씨는 .”)으로 응답하게 됩니다.",
    "resultcode 파라미터값이 ‘정상’이면서 location 파라미터가 존재한다면, 즉 location 이라는 그릇에 아무 값이라도 담겨 있으면 이 ‘a.w.location’ Action 이 동작하여 방금 입력한 값(“의 날씨는 .”)으로 응답하게 됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-common-actions",
  "order": 36,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-responses/use-directives",
  "order": 32,
  "indexes": [
    {
  "title": "Directive 사용하기",
  "hash": "",
  "sentences": [
    "Directive 사용하기",
    "Action의 Response는 사용자의 요청/질문 등에 답을 하는 Prompt와 디바이스를 제어하는 Directive로 구분할 수 있습니다. Directive는 오디오 파일을 재생시키거나 멈추게 하는 명령어로 Backend proxy가 Capability Interface를 지원해야만 사용할 수 있습니다. 현재 제공되는 Interface는 AudioPlayer만 있습니다.",
    "Directive를 사용하여 디바이스를 제어하기 위해서는 다음과 같은 과정을 거쳐야 합니다.",
    "Backend proxy에 Capability Interface가 구현되어 있어야 하며,",
    "Play의 설정(General > 기본정보)에서 Capability Interface를 사용함으로 설정하고,",
    "Directive를 사용할 Action의 Response가 Directive 또는 Directive + Prompt로 선택되어 있어야 합니다.",
    "Directive의 개념과 이를 적용하는 방법에 대한 자세한 내용은 다음을 참고하세요.",
    "Directive 개념에 대한 자세한 내용은 Response 사용하기를 참고하세요.",
    "Capability Interface의 개념과 Play Directive에 대한 자세한 내용은 Capability Interfaces를 참고하세요.",
    "AudioPlayer Interface 지원하는 Play를 만드는 방법에 대한 자세한 내용은 AudioPlayer Interface 지원하는 Play 만들기를 참고하세요."
  ]
},
    {
  "title": "Directive 사용하기 > Backend proxy에 Capability Interface 구현하기",
  "hash": "#backend-proxy에-capability-interface-구현하기",
  "sentences": [
    "Backend proxy에 Capability Interface 구현하기",
    "Directive를 사용하기 위해서는 Backend proxy에 Capability Interface 규격에 맞는 Directive을 구현해야 합니다. 사용자 발화가 어떤 디바이스(스피커)의 기능을 요청하면 Play는 Backend proxy에 요청을 보내게 되고, Backend proxy는 요청에 맞는 Directive를 Play에게 전달하게 됩니다. 따라서, Backend proxy에서는 Play에서 어떤 Action가 어떠한 Directive를 사용하는지를 확인하고 이를 구현해야 합니다.",
    "다음은 AudioPlayer Interface를 지원하는 스피커에 Directive가 전달되는 과정을 설명한 그림입니다."
  ]
},
    {
  "title": "Directive 사용하기 > Capability Interface를 사용함으로 설정하기",
  "hash": "#capability-interface를-사용함으로-설정하기",
  "sentences": [
    "Capability Interface를 사용함으로 설정하기",
    "Play Builder 홈 화면에서 Capability Interface를 설정할 Play를 클릭하여 선택한 후 General > 기본 정보 페이지의 Capability Interface에서 AudioPlayer Interface 제어 항목을 ON으로 설정합니다.",
    "Built-in Intent 15개가 추가됩니다. Built-in Intent 추가 여부는 User Utterance Model > Built-in Intents 페이지에서 확인할 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-parameters",
  "order": 24,
  "indexes": [
    {
  "title": "Parameter",
  "hash": "",
  "sentences": [
    "Parameter"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-responses/use-prompts",
  "order": 31,
  "indexes": [
    {
  "title": "Prompt 사용하기",
  "hash": "",
  "sentences": [
    "Prompt 사용하기"
  ]
},
    {
  "title": "Prompt 사용하기 > Prompt 사용하기",
  "hash": "#prompt-사용하기-",
  "sentences": [
    "Prompt 사용하기",
    "Prompt는 사용자에게 응답으로 전달할 메시지를 의미합니다. Prompt를 작성할때 다음과 같은 구성 요소들을 사용할 수 있습니다.",
    "일반 텍스트 |   | ‘가나다’와 같은 일반적인 텍스트를 그대로 읽어 발화합니다. |  ",
    "Parameter |   | {{}}와 같은 형태로 사용하며, Parameter에 담긴 값을 텍스트로 변형하여 발화합니다.Parameter 사용법에 대한 자세한 내용은 Parameter 사용하기를 참고하세요. | {{",
    "Response Filter | NLG Translator | Parameter와 항상 결합하여 사용되며, 단독으로 쓰일 수 없습니다. | >",
    "NLG Normalizer | Parameter에 담겨 있는 값이 Filter의 Source와 100% 일치할 경우에만 동작합니다. | =",
    "NLG Function | Response Filter에 대한 자세한 내용은 Response Filter를 참고하세요. | :",
    "조사 |   | ‘을/를’과 같이 앞 음절에 따라 조사가 바뀌는 경우에 자동으로 변환하여 발화합니다.조사 자동 변환은 Parameter와 함께 사용될 때만 동작합니다.조사 처리에 대한 자세한 내용은 조사 처리하기를 참고하세요. | /",
    "SKML 태그 |   | TTS 엔진이 텍스트 혹은 Parameter의 값을 SKML 태그에 따라 발화합니다.SKML 태그 사용 대한 자세한 내용은 발화 옵션 사용하기를 참고하세요. | <"
  ]
},
    {
  "title": "Prompt 사용하기 > Prompt의 유형",
  "hash": "#prompt의-유형-",
  "sentences": [
    "Prompt의 유형",
    "Play Builder의 Prompt에는 3가지 유형이 있습니다.",
    "대기 Prompt | Prompt가 발화된 이후 Play의 세션이 유지됩니다.",
    "연속 Prompt | 뒤이어 올 Prompt가 있는 경우에만 발화되며, 뒤이어 오는 Prompt와 더해져서 하나의 문장처럼 발화됩니다.",
    "종료 Prompt | Prompt가 발화된 이후 Play의 세션이 종료됩니다.",
    "Prompt는 사용 위치에 따라 다음과 같이 구분됩니다.",
    "일반 Response의 Prompt | Welcome Action을 제외한 모든 Action | 대기 Prompt와 종료 Prompt가 사용됩니다.여러 Prompt가 입력된 경우, 무작위로 선택되어 발화됩니다.",
    "Built-in Action > welcome | 대기 Prompt와 연속 Prompt가 사용됩니다.여러 Prompt가 입력된 경우, 무작위로 선택되어 발화됩니다.",
    "Built-in Action > exit | 종료 Prompt가 사용됩니다.여러 Prompt가 입력된 경우, 무작위로 선택되어 발화됩니다.",
    "Built-in Action > fallback | 대기 Prompt와 종료 Prompt가 사용됩니다.여러 Prompt가 입력된 경우, 위에서부터 순차적으로 발화됩니다.",
    "Slot-filling Prompt |   | 대기 Prompt와 종료 Prompt가 사용됩니다.여러 Prompt가 입력된 경우, 위에서부터 순차적으로 발화됩니다.",
    "예외 상황 처리의 Exception Prompt |   | 대기 Prompt와 종료 Prompt가 사용됩니다.여러 Prompt가 입력된 경우, 위에서부터 순차적으로 발화됩니다."
  ]
},
    {
  "title": "Prompt 사용하기 > Silent Prompt",
  "hash": "#silent-prompt-",
  "sentences": [
    "Silent Prompt",
    "사용자에게 빈 응답을 전달하고 싶을 경우, Silent Prompt를 사용할 수 있습니다. Silent Prompt는 Prompt 입력 창 우측의 버튼을 눌러 설정 가능합니다. Silent Prompt를 응답으로 설정하면, 아무 발화 없이 대기 모드로 넘어가거나 세션이 종료되므로 꼭 필요한 경우에만 사용하는 것이 좋습니다. Silent Prompt는 모든 유형의 Prompt에서 사용할 수 있습니다."
  ]
},
    {
  "title": "Prompt 사용하기 > 조사 처리하기",
  "hash": "#조사-처리하기-",
  "sentences": [
    "조사 처리하기",
    "국어의 조사 ‘이/가, 을/를, 은/는, 과/와, 로/으로’는 같은 형태소지만 앞음절의 받침 유무에 따라 다르게 사용됩니다.",
    "Prompt를 입력할 때 일반 문장은 작성자가 입력한 조사를 그대로 사용하면 되나, Parameter를 사용하는 경우에는 그 Parameter에 담긴 마지막 글자의 받침 유무를 알 수 없기 때문에 별도의 처리를 하지 않는다면 ‘내일는’과 같이 조사가 잘못 붙어서 응답될 가능성이 있습니다. Play Builder에서는 Parameter 뒤에 조사를 쓰는 경우 Parameter에 담긴 마지막 글자의 받침 유무에 따라 자동으로 조사를 변환 처리합니다.",
    "Parameter의",
    "}}",
    "기호 뒤에 / 입력하면 조사의 자동완성 창이 표시됩니다. 이 창에서 원하는 조사를 선택합니다.",
    "다음과 같이 중괄호 사이에 대표 조사가 입력되지만, 실제 발화 시에는 Parameter 마지막 글자의 받침 여부 따라 조사가 변환되어 출력됩니다.",
    "자동완성을 사용하지 않더라도 parameter의",
    "}}",
    "사이에 조사를 직접 입력해도 정상 동작합니다.",
    "받침 유무에 따른 조사는 다음과 같이 변환됩니다.",
    "받침이 없는 경우 | 는 | 가 | 를 | 와 | 로 | 에요 | 야",
    "받침이 있는 경우 | 은 | 이 | 을 | 과 | 으로 | 이에요 | 이야"
  ]
},
    {
  "title": "Prompt 사용하기 > 조사 처리 시, 받침 유무 판정 규칙",
  "hash": "#조사-처리-시-받침-유무-판정-규칙",
  "sentences": [
    "조사 처리 시, 받침 유무 판정 규칙",
    "알파벳은 미국식 영어로 읽는 것을 한국어로 옮긴다고 간주하고 조사 처리합니다.",
    "10 g, 1 m와 같이 숫자와 단위가 붙어서 조합되고, 발화 옵션 Say 태그(단위 속성)를 처리하지 않은 경우, 10 그램, 1 미터와 같이 단위에 대한 표준어로 변환하여 조사를 붙입니다.",
    "괄호나 특수문자가 포함된다면 제거한 후 처리합니다.",
    "단위, 한글, 영문, 숫자에 해당하지 않는 경우는 변환하지 않습니다."
  ]
},
    {
  "title": "Prompt 사용하기 > 발화 옵션 사용하기",
  "hash": "#발화-옵션-사용하기-",
  "sentences": [
    "발화 옵션 사용하기",
    "입력한 Response의 Prompt를 TTS 엔진이 음성으로 변환할 때 예상과는 다른 방식으로 읽을 수도 있고, 때로는 천천히 읽거나 또박또박 읽게 하고 싶을 수도 있습니다.",
    "가령 ‘119로 전화를 걸겠습니다’라고 Prompt를 입력한 경우 ‘일일구로 전화를 걸겠습니다’라고 발화할 것이라 기대하지만, TTS 엔진은 기본적으로 숫자를 그대로 읽도록 처리하고 있기 때문에 ‘백십구로 전화를 걸겠습니다.’ 라고 읽게 됩니다.",
    "Play Builder는 입력한 Prompt를 음성으로 변환시킬 때 개별적으로 튜닝을 하거나, 다르게 읽을 수 있는 ‘발화 옵션’ 기능을 제공하고 있습니다. 발화 옵션은 Play의 모든 Prompt에 일괄 반영할 수도 있고, 특정 문장별로 변경할 수 있습니다.",
    "또, 문장 내 발화 옵션 태그를 사용하여 세밀한 설정도 가능합니다."
  ]
},
    {
  "title": "Prompt 사용하기 > 전체 발화 옵션 변경하기",
  "hash": "#전체-발화-옵션-변경하기",
  "sentences": [
    "전체 발화 옵션 변경하기",
    "⁣1. Play 내 모든 prompt의 발화 옵션을 변경하고 싶다면",
    "General",
    ">",
    "기본정보",
    "로 이동 합니다.",
    "⁣2. 기본 정보 페이지의 Prompt 발화 옵션에서 발화속도, 음 높낮이, 문장 사이의 묵음 길이, 끊어읽기 뒤 묵음 길이를 설정한 후",
    "발화옵션 적용하기",
    "버튼을 클릭합니다. 이 값을 변경하면 변경한 순간 이후부터 만드는 Prompt부터 적용됩니다.",
    "① 발화속도 (speed)",
    "재생 속도를 50 ~ 120% 사이에서 변경할 수 있습니다.(기본값: 100%) 최솟값이나 최댓값으로 설정할 경우에는 음질 열화가 발생할 수 있으므로 85 ~ 115 사잇값 사용을 권장합니다.",
    "② 합성음 높낮이 (pitch)",
    "합성음의 높낮이를 90 ~ 110 % 사이에서 변경할 수 있습니다.(기본값: 100%) 최솟값이나 최댓값으로 설정할 경우에는 음질 열화가 발생할 수 있으므로 95 ~ 105 사잇값 사용을 권장합니다.",
    "③ 문장 사이 묵음 길이 (pause1)",
    "문장과 문장 사이의 묵음 길이를 300 ~ 900 ms 사이에서 변경할 수 있습니다.(기본값: 600 ms)",
    "④ 끊어읽기 뒤 묵음 길이 (pause2)",
    "문장 내 끊어읽기 후의 묵음 길이를 100 ~ 500 ms 사이에서 변경할 수 있습니다.(기본값: 300 ms)"
  ]
},
    {
  "title": "Prompt 사용하기 > 문장별 발화 옵션 변경하기",
  "hash": "#문장별-발화-옵션-변경하기",
  "sentences": [
    "문장별 발화 옵션 변경하기",
    "문장별로 발화 옵션을 조절할 수 있습니다.",
    "⁣1. Play Builder 홈 화면에서 모든 Prompt의 발화 옵션을 변경할 Play를 클릭하여 선택한 후",
    "Actions",
    ">",
    "Custom Actions",
    "페이지에서 발화 옵션을 설정할 문장이 있는 Action을 선택합니다.",
    "⁣2. Output 정의 영역에서 발화 옵션을 변경할 Prompt의 우측 버튼을 클릭하여 옵션을 설정한 후 [Play 저장] 버튼을 클릭합니다.",
    "변경 가능한 옵션은 전체 발화 옵션과 같습니다."
  ]
},
    {
  "title": "Prompt 사용하기 > 문장 내 발화 옵션 태그 추가하기",
  "hash": "#문장-내-발화-옵션-태그-추가하기-",
  "sentences": [
    "문장 내 발화 옵션 태그 추가하기",
    "Prompt 내에서 특정 구간에 끊어읽기를 추가하거나, 특정 단어를 읽는 방식을 조절하는 태그도 제공하고 있습니다.",
    "태그들은 기본적으로",
    "<태그 속성=\"속성값\">",
    "형태로 구성됩니다. 이 태그는 직접 입력하지 않아도 되도록 Prompt 문장 입력창에서 자동완성으로 제공하고 있습니다. 문장 입력 중 특수문자",
    "<",
    "를 입력한 뒤 자동완성창에서 세 가지 기능 중 적용할 옵션을 선택합니다.",
    "텍스트읽기 (say) | 한글이 아닌 문자들을 어떻게 읽을지 결정하는 태그입니다.‘4-2’는 ‘사 다시 이’와 같이 주소처럼 읽거나, ‘사 대 이’처럼 경기 스코어로 읽을 수 있을 수 있기 때문에, 이것을 어떻게 읽을 것인지 태그로 정해주는 기능입니다.태그를 적용할 텍스트의 끝에 </say>가 필수로 들어가야 합니다.",
    "변환하여 읽기 (sub) | 일반적이지 않은 발음변환 규칙을 통해 발음이 되는 텍스트인 경우, 속성으로 지정해준 텍스트로 변환하여 발화하도록 하는 태그입니다.예) <sub alias=\"호날두\">Ronaldo</sub> → ‘Ronaldo’를 태그 내 속성의 ‘호날두’로 변환하여 읽습니다.예) <sub alias=\"써프라이즈\">서프라이즈</sub> → ‘서프라이즈’를 태그 내 속성의 ‘써프라이즈’로 변환하여 읽습니다.태그를 적용할 텍스트의 끝에 </sub>가 필수로 들어가야 합니다.",
    "끊어읽기 (break, pause) | 문장을 읽을 때 내용상, 길이상 적절하게 쉬어서 읽어주는 곳을 결정하는 태그입니다.입력된 Prompt는 TTS 엔진이 끊어읽기 간격을 스스로 계산하여 발화합니다.TTS 엔진 합성음의 끊어읽기가 자연스럽지 않다고 판단될 경우에 끊어읽기의 위치 및 종류를 수동으로 설정할 수 있습니다.이 태그는 적용할 어절의 뒤에 공백 없이 넣어야하고, 태그의 뒤에는 공백이 있어야 합니다.예) 안녕하세요. <break type=\"weak\"/>아리아에요. (X)예) 안녕하세요. <break type=\"weak\"/> 아리아에요. (O)",
    "효과음넣기 (audio) | 문장 중간에 박수 소리, 천둥 소리 등의 효과음을 넣을 수 있는 태그입니다.",
    "각 태그별 세부 기능은 다음과 같습니다.",
    "끊어읽기 | 가장 길게 끊어읽기 | 가장 길게 끊어읽습니다.예) 오늘은 비가 <break type=\"sentence\"/> 옵니다. | sentence | -",
    "길게 끊어읽기 | 길게 끊어읽습니다.예) 오늘은 비가<break type=\"strong\"/> 옵니다. | strong | -",
    "짧게 끊어읽기 | 짧게 끊어읽습니다.예) 오늘은 비가<break type=\"weak\"/> 옵니다. | weak | -",
    "끊어읽기 없애기 | 이 태그가 추가된 부분을 끊지 않고 읽습니다.원하지 않게 끊어읽는 부분이 발생하는 경우에 사용합니다.예) 브로콜리<break type=\"none\"/> 너마저의 음악을 들려드릴께요. | none | -",
    "한단어처럼 붙여읽기 | 한 단어와 같이 발음되도록 읽습니다.예를들어 ‘첫 번째’를 ‘첫뻔째’로 읽습니다.예) 첫<break type=\"clitic\"/> 번째 | clitic | -",
    "끊어읽기 시간설정 | 끊어 읽는 시간을 설정합니다.예) <pause time=\"200\"/> → 200 ms 동안 끊어 읽습니다.‘0’보다 큰 정수만 사용 가능합니다.예) 오늘은<pause time=\"200\"/> 비가 옵니다. | - | [n]",
    "텍스트읽기 | 한자 낱숫자 읽기 | 숫자를 ‘일, 이, 삼, 사’와 같이 읽습니다.두 자리 이상의 숫자도 ‘일일구’와 같이 한 자씩 읽습니다. | digit | [n]",
    "한자 숫자 읽기 | 숫자를 ‘일, 이, 삼, 사’와 같이 읽습니다.자릿수를 포함하여 ‘백십구’와 같이 읽습니다.‘경’(10의 16제곱) 단위까지 읽습니다. | num_hanja | [n]",
    "한글 숫자 읽기 | 숫자를 ‘한, 두, 세, 네’와 같이 읽습니다. | num_kor | [n]",
    "영어 숫자 읽기 | 숫자를 ‘원, 투, 쓰리, 포’와 같이 읽습니다.Trillion(10의 12제곱) 단위까지 읽습니다. | num_eng | [n]",
    "날짜 읽기 | ‘이천십팔년 삼월 구일’과 같이 날짜로 읽습니다.‘삼월 구일’과 같이 특정 날짜로 읽거나,‘삼월 구일에서 사월 십일’과 같이 범위로 읽는 것을 지원합니다. | date | 특정 날- [yyyy]-[mm]-[dd]- [yyyy]:[mm]:[dd]- [yyyy]/[mm]/[dd]- [yyyy].[mm].[dd]- [mm]-[dd]- [mm]/[dd]- [mm].[dd]",
    "범위- [yyyy]-[mm]-[dd]~- [yyyy]-[mm]-[dd]- [yyyy]:[mm]:[dd]~- [yyyy]:[mm]:[dd]- [yyyy]/[mm]/[dd]~[yyyy]/[mm]/[dd]- [yyyy].[mm].[dd]~- [yyyy].[mm].[dd]- [mm]-[dd]~- [mm]-[dd]- [mm]/[dd]~- [mm]/[dd]- [mm].[dd]~- [mm].[dd]",
    "시간 읽기 | ‘열한시 삽십분 사십오초’와 같이 시간으로 읽습니다.‘hh시 mm분 ss초, hh시 mm분’과 같이 특정 시간으로 읽거나‘hh시 mm분 ss초에서 hh시 mm분 ss초’,‘hh시 mm분에서 hh시 mm분’처럼 범위로 읽는 것을 지원합니다. | time | 특정 시간- [hh]:[mm]:[ss]- [mm]:[ss]",
    "기간- [hh]:[mm]:[ss]~- [hh]:[mm]:[ss]- [hh]:[mm]:[ss]-- [hh]:[mm]:[ss]- [mm]:[ss]~- [mm]:[ss]- [mm]:[ss]-- [mm]:[ss]",
    "단위 읽기 | ‘칠미터, 칠그램’과 같이 단위로 읽습니다.139개의 단위를 읽기 지원합니다.(발화 옵션에서 UNIT 태그로 지원 단위 목록) | unit | [n][unit]",
    "주소 읽기 | ‘팔십삼 다시 일’과 같이 지번 주소의 지번을 읽습니다. | address | [n]-[n]",
    "전화번호 읽기 | ‘일이삼사 일이삼사’와 같이 전화번호로 읽습니다. | telephone | [n]-[n][n]-[n]-[n]",
    "영어 스펠링 읽기 | ‘비티에스’와 같이 영어 스펠링으로 읽습니다.대소문자는 구분하지 않습니다. | spell | [text]",
    "경기 스코어 읽기 | ‘삼 대 이’와 같이 경기 스코어로 읽습니다. | score | [n]:[n][n]-[n]",
    "분수 읽기 | ‘삼분의 일’과 같이 분수로 읽습니다. | fraction | [n]/[n]",
    "효과음넣기 | 심장 박동 | - | - | -",
    "심장 박동 (빠르게) | - | - | -",
    "재채기 | - | - | -",
    "박수 | - | - | -",
    "텔레파시 1 | - | - | -",
    "텔레파시 2 | - | - | -",
    "발걸음 | - | - | -",
    "물튀기는소리 | - | - | -",
    "얼굴 씻는 소리 | - | - | -",
    "음악 1 | - | - | -",
    "음악 2 | - | - | -",
    "카메라 셔터 | - | - | -",
    "핀버튼 누르는 소리 | - | - | -",
    "불타는 소리 | - | - | -",
    "천둥 | - | - | -",
    "자동차 리모콘 | - | - | -",
    "비행기 | - | - | -",
    "물방울 떨어지는 소리 | - | - | -",
    "휘파람 1 | - | - | -",
    "휘파람 2 | - | - | -",
    "빗자루질 | - | - | -",
    "종소리 1 | - | - | -",
    "종소리 2 | - | - | -",
    "Prompt 내에 사용하는 태그는 텍스트를 직접 입력하여 추가 또는 수정할 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-responses",
  "order": 30,
  "indexes": [

  ]
},
  {
  "url": "/document-staging/nugu-sdk/capability-interface/utility",
  "order": 172,
  "indexes": [
    {
  "title": "Utility",
  "hash": "",
  "sentences": [
    "Utility",
    "Directive 의 실행 순서를 제어하기 위한 규격"
  ]
},
    {
  "title": "Utility > Version",
  "hash": "#version",
  "sentences": [
    "Version",
    "최신 버전은 1.0 입니다.",
    "1.0 | 2020.11.30 | 규격 추가"
  ]
},
    {
  "title": "Utility > SDK Interface",
  "hash": "#sdk-interface",
  "sentences": [
    "SDK Interface",
    "Utility 는 하나의 응답으로 전달되는 Directive들의 실행 순서 및 Blocking 처리 로직을 포함하고 있는 규격으로 Application 에서 처리할 별도의 interface 가 없습니다."
  ]
},
    {
  "title": "Utility > Context",
  "hash": "#context",
  "sentences": [
    "Context",
    "{\n  \"Utility\": {\n    \"version\": \"1.0\"\n  }\n}"
  ]
},
    {
  "title": "Utility > Directives",
  "hash": "#directives",
  "sentences": [
    "Directives"
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/sdk-design-guide/voice-chrome",
  "order": 204,
  "indexes": [
    {
  "title": "Voice Chrome",
  "hash": "",
  "sentences": [
    "Voice Chrome",
    "화면이 있는 기기는 NUGU Voice Chrome을 표현해야 합니다.",
    "NUGU Voice Chrome은 사용자의 음성 입력 수신, NUGU 음성 출력 등 NUGU 음성 동작과 관련된 상태를 버튼과 그래픽, 색상, 모션으로 표현합니다.",
    "Voice Chrome 외에 디스플레이 기능을 추가하기 위해 LED를 사용할 수도 있습니다."
  ]
},
    {
  "title": "Voice Chrome > NUGU Voice Chrome 색상",
  "hash": "#nugu-voice-chrome-색상",
  "sentences": [
    "NUGU Voice Chrome 색상",
    "NUGU Blue | 0,158, 255 (#009DFF) | 85, 21, 0, 0 | 2925C",
    "Green | 0, 230, 136 (#00E688) | 48, 0, 45, 0 | 2412C"
  ]
},
    {
  "title": "Voice Chrome > NUGU Voice Chrome 상태",
  "hash": "#nugu-voice-chrome-상태",
  "sentences": [
    "NUGU Voice Chrome 상태",
    "NUGU Voice Chrome은 구분된 상태에 따라 표현이 달라집니다.",
    "Idle 상태는 ‘",
    "NUGU Voice Button",
    "‘을 사용하고, 나머지 상태는 그래픽 애니메이션으로 표현합니다.",
    "상태 그래픽은 ‘",
    "Chrome Indicator",
    "‘라고 말합니다.",
    "기기에 Wake-up 버튼이 탑재해 있을 경우 NUGU Voice Button은 미노출도 허용합니다.",
    "Idle |  | Wake-up 가능한 대기 상태",
    "Listening-Passive |  | 사용자 발화 입력 대기 상태",
    "Listening-Active |  | 사용자 발화 입력 중 상태",
    "Processing |  | 입력된 사용자 발화를 분석하는 상태",
    "Speaking |  | 정보/동작에 대해서 TTS 답변하는 상태",
    "[동작설명]",
    "사용자가 호출어를 부르거나, NUGU Voice Button을 눌러 클라이언트가 사용자 발화 입력 대기 모드로 진입하면 Listening-Passive 동작을 재생합니다.",
    "Listening-Passive 동작은 사용자의 실제 음성 입력이 시작되기 전까지 반복 재생합니다.",
    "사용자의 실제 음성이 입력되기 시작하여 클라이언트가 사용자 발화 입력 중 상태로 진입하면 사용자의 음성 입력이 끝날 때까지 Listening-Active 동작을 반복 재생합니다.",
    "사용자의 입력이 끝나고 클라이언트가 입력된 사용자 발화를 분석하는 상태로 진입하면 응답을 출력하거나 결과 화면을 보여주기 전까지 Processing 동작을 반복 재생합니다.",
    "Speaking 동작은 연속 대화의 NUGU Voice Chrome Window가 유지된 상태에서 응답이 시작될 때부터 종료될 때까지 반복 재생합니다. 일반적인 TTS 응답 시에는 제공하지 않아도 됩니다.",
    "사용자 요청에 대한 작업 수행을 완료하면 클라이언트는 Idle 상태로 진입하게 됩니다."
  ]
},
    {
  "title": "Voice Chrome > NUGU Voice Button",
  "hash": "#nugu-voice-button",
  "sentences": [
    "NUGU Voice Button",
    "NUGU Voice Button은 음성 입력이 가능한 대기 상태를 나타내는 버튼입니다.",
    "BLUE / WHITE 컬러타입 중 한 가지를 선택 적용할 수 있습니다.",
    "Idle 상태에 적용되며,",
    "FAB",
    "(Floating Action Button) 또는",
    "Button",
    "타입으로 사용하는 것을 권장합니다. (FAB과 Button은 Elevation값에 차이가 있습니다.)",
    "FAB과 Button에 따른 사용 및 동작 정의는 다음과 같습니다.",
    "NUGU Voice Button과 아래 레이어의 콘텐츠가 중첩되는 경우 FAB 사용 (화면 우하단 권장)",
    "NUGU Voice Button이 콘텐츠 중첩 없이 독립된 영역을 확보하고 있는 경우 Button 사용 (검색창 옆 권장)",
    "FAB",
    "Button",
    "(1) FAB을 눌러 보이스크롬을 호출하면 FAB 버튼은 사라집니다.",
    "(1-1) FAB은 스크롤 방향에 따라 노출 여부를 달리할 수 있습니다.",
    "(2) Button을 눌러 Voice Chrome을 호출하면, Toggle Button 버튼으로 상태가 변경됩니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/nugu-ux/voice-interaction-design",
  "order": 4,
  "indexes": [
    {
  "title": "사용자 발화(User Utterance) 예상 하기",
  "hash": "",
  "sentences": [
    "사용자 발화(User Utterance) 예상 하기",
    "예상 발화 디자인은 사용자가 특정 기능을 요청하기 위하여 발화할 음성 명령을 예측하여 정의하는 단계로서, 다음과 같은 사항을 고려하여야 합니다."
  ]
},
    {
  "title": "사용자 발화(User Utterance) 예상 하기 > 발화의 범용성",
  "hash": "#발화의-범용성",
  "sentences": [
    "발화의 범용성",
    "일반적인 사용자가 실제 생활에서 사용하는 구어체 형식의 문장으로 작성해야 합니다. 전문 용어나 소수의 발화 습관이 반영된 명령은 아닌지 살펴보고, 개인의 발화 습관에 편향될 수 있으므로 여러 사람과 교차 확인을 하는 것이 좋습니다."
  ]
},
    {
  "title": "사용자 발화(User Utterance) 예상 하기 > 발화의 일관성",
  "hash": "#발화의-일관성",
  "sentences": [
    "발화의 일관성",
    "서비스 내에서 혹은 유사 서비스와 발화 패턴이 일관적이어야 합니다. 예를 들어, A 정보를 조회하는 기능의 발화로 ‘알려줘’, ‘찾아줘’가 정의되었다면, B 정보를 조회하는 기능에 대한 발화도 동일하게 정의하는 것이 좋습니다. 또한, 한 기능을 익힌 사용자가 다른 서비스에서 유사한 기능을 쉽게 이용할 수 있도록, 다른 서비스에서 제공하는 유사한 기능이 없는지 파악하고, 이를 참조하여 발화 패턴을 일관되게 적용하는 것도 중요합니다."
  ]
},
    {
  "title": "사용자 발화(User Utterance) 예상 하기 > 발화의 독립성",
  "hash": "#발화의-독립성",
  "sentences": [
    "발화의 독립성",
    "각 기능별 발화는 서로 구분되어야 하며, 의미가 명확히 인식될 수 있아야 합니다. 예를 들어, 현재 습도를 물어보는 기능의 발화를 은유적 표현인 “지금 제습기 켜야 해?”로 적용할 경우, 제습기를 키는 명령과 충돌할 수가 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-sdk/platform/ios/web-server",
  "order": 178,
  "indexes": [
    {
  "title": "NUGU 서비스 관리 web server 연동",
  "hash": "",
  "sentences": [
    "NUGU 서비스 관리 web server 연동"
  ]
},
    {
  "title": "NUGU 서비스 관리 web server 연동 > WebView 설정하기",
  "hash": "#webview-설정하기",
  "sentences": [
    "WebView 설정하기"
  ]
},
    {
  "title": "NUGU 서비스 관리 web server 연동 > Cookie 설정",
  "hash": "#cookie-설정",
  "sentences": [
    "Cookie 설정",
    "NUGU 서비스 관리 웹에서 사용할 cookie 를 설정합니다.",
    "authToken: OAuth bearer 토큰",
    "appVersion: Application 버전 정보",
    "pocId: https://developers.nugu.co.kr/#/sdk/pocList 에서 확인 가능",
    "theme: LIGHT 또는 DARK",
    "oauthRedirectUri: NUGU 서비스 관리 웹 내에서 Play 에 로그인 하고 나면 호출되는 url (ex> nugu.public.sample://oauth_refresh)",
    "deviceUniqueId: NuguOauthClient 의 인증을 통해 관리되는 device unique id",
    "NuguClientKit",
    "에서는 사용자의 편의를 위해",
    "NuguServiceWebView",
    "의 cookie 값을 default 로 설정해주고 있습니다. 이를 위해선",
    "addCookie",
    "함수를 사용하시고, 직접 cookie 를 설정해주시고 싶다면",
    "setCookie",
    "를 사용합니다.",
    "NuguClientKit",
    "은 사용자의 편의를 위해서 cookie 를 default 로 제공하고 있습니다. Default cookie 를 사용하려면",
    "addCooklie",
    "함수를, 직접 cookie 를 세팅하려면",
    "setCookie",
    "함수를 사용하면 됩니다.",
    "NuguServiceWebViewController.swift",
    "@IBOutlet private weak var nuguServiceWebView: NuguServiceWebView!\n\noverride func viewDidLoad() {\n    super.viewDidLoad()\n    nuguServiceWebView.addCookie(nil)\n}"
  ]
},
    {
  "title": "NUGU 서비스 관리 web server 연동 > Javascript interface 연동",
  "hash": "#javascript-interface-연동",
  "sentences": [
    "Javascript interface 연동",
    "openExternalApp(openExternalAppItem:) : 외부 앱 실행 요청",
    "openInAppBrowser(url:) : 인 앱 브라우저 실행 요청",
    "closeWindow(reason:) : ViewController 종료 요청. reason 이 WITHDRAWN_USER 인 경우 회원탈퇴 요청으로 인한 종료이기 때문에, 인증정보 등을 파기해야 합니다.",
    "requestActiveRoutine : Routine 설정, 조회를 위해 필요한 정보를 전달해줍니다. Routine 을 지원하지 않을 경우 비워두시면 됩니다.",
    "NuguServiceWebViewController.swift",
    "override func viewDidLoad() {\n    super.viewDidLoad()\n\n    nuguServiceWebView.javascriptDelegate = self\n}\n\nextension NuguServiceWebViewController: NuguServiceWebJavascriptDelegate {\n    func openExternalApp(openExternalAppItem: WebOpenExternalApp) {\n        if let appSchemeUrl = URL(string: openExternalAppItem.scheme ?? \"\"),\n            UIApplication.shared.canOpenURL(appSchemeUrl) == true {\n            UIApplication.shared.open(appSchemeUrl, options: [:], completionHandler: nil)\n            return\n        }\n        if let appId = openExternalAppItem.appId,\n            let appStoreUrl = URL(string: \"https://itunes.apple.com/app/\" + appId + \"?mt=8\"),\n            UIApplication.shared.canOpenURL(appStoreUrl) == true {\n            UIApplication.shared.open(appStoreUrl, options: [:], completionHandler: nil)\n        }\n    }\n\n    func openInAppBrowser(url: String) {\n        present(SFSafariViewController(url: URL(string: url)!), animated: true, completion: nil)\n    }\n\n    func closeWindow(reason: String) {\n        if reason == \"WITHDRAWN_USER\" {\n            navigationController?.dismiss(animated: true, completion: {\n                // 인증 정보 파기\n            })\n        } else {\n            navigationController?.popViewController(animated: true)\n        }\n    }\n    \n    func requestActiveRoutine() {\n        guard let routineItem = NuguCentralManager.shared.client.routineAgent.routineItem,\n              NuguCentralManager.shared.client.routineAgent.state == .playing else {\n            return\n        }\n        nuguServiceWebView.onRoutineStatusChanged(token: routineItem.payload.token, status: RoutineState.playing.routineActivity)\n    }\n}"
  ]
},
    {
  "title": "NUGU 서비스 관리 web server 연동 > NUGU 서비스 관리 웹 호출",
  "hash": "#nugu-서비스-관리-웹-호출",
  "sentences": [
    "NUGU 서비스 관리 웹 호출",
    "serviceSettingUrl: NUGU 서비스 관리 웹 사이트",
    "agreementUrl: NUGU 이용약관 웹 사이트",
    "NuguServiceWebView 가 가지고 있던",
    "serviceSettingUrl",
    "과",
    "agreementUrl",
    "은 deprecate 되었습니다.",
    "final public class NuguServiceWebView: WKWebView {\n\n    /// Url for service setting web page (deprecated)\n    @available(*, deprecated, message: \"Use `ConfigurationStore`\")\n    public static var serviceSettingUrl: String {\n        return domain + \"/3pp/main.html?screenCode=setting_webview\"\n    }\n    \n    /// Url for agreement web page (deprecated)\n    @available(*, deprecated, message: \"Use `ConfigurationStore`\")\n    public static var agreementUrl: String {\n        return domain + \"/3pp/agreement/list.html\"\n    }\n}",
    "대신 ConfigurationStore 에서",
    "serviceSettingUrl",
    "과",
    "agreementUrl",
    "을 제공합니다.",
    "public class ConfigurationStore {\n    /// Get the web page url to configure play settings for the user device.\n    ///\n    /// - Parameter completion: The closure to receive result.\n    func serviceSettingUrl(completion: @escaping (Result<String, Error>) -> Void) {\n        configurationMetadata { result in\n            switch result {\n            case .success(let configurationMetadata):\n                if let urlString = configurationMetadata.serviceSetting {\n                    completion(.success(urlString))\n                } else {\n                    completion(.failure(ConfigurationError.invalidUrl))\n                }\n            case .failure(let error):\n                completion(.failure(error))\n            }\n        }\n    }\n    \n    /// Get the web page url for the terms of service.\n    ///\n    /// - Parameter completion: The closure to receive result.\n    func agreementUrl(completion: @escaping (Result<String, Error>) -> Void) {\n        configurationMetadata { result in\n            switch result {\n            case .success(let configurationMetadata):\n                if let urlString = configurationMetadata.termOfServiceUri {\n                    completion(.success(urlString))\n                } else {\n                    completion(.failure(ConfigurationError.invalidUrl))\n                }\n            case .failure(let error):\n                completion(.failure(error))\n            }\n        }\n    }\n}"
  ]
}
  ]
},
  {
  "url": "/document-staging/work-with-nugu-biz",
  "order": 108,
  "indexes": [
    {
  "title": "NUGU biz kit",
  "hash": "",
  "sentences": [
    "NUGU biz kit",
    "NUGU biz kit은 NUGU 플랫폼과 연동된 디바이스를 비즈니스 환경에서 활용하기 위한 상품입니다. 비즈니스 용도를 위해 NUGU play kit에서 Private Play를 만들고, 특정 디바이스 또는 사용자 그룹만 사용할 수 있도록 관리 할 수 있습니다. 또한 해당 디바이스 및 사용자를 대상으로 Announcement (tts, image) 메세지를 보낼 수 있습니다.",
    "주요 개념",
    "체험판 및 정식판",
    "Private Play",
    "Biz 전용 디바이스 관리",
    "Biz 사용자 관리",
    "Biz API"
  ]
},
    {
  "title": "NUGU biz kit > Biz 전용 디바이스 관리(Shared Device)",
  "hash": "#biz-전용-디바이스-관리shared-device",
  "sentences": [
    "Biz 전용 디바이스 관리(Shared Device)",
    "NUGU 디바이스를 사업장/영업장 등과 같은 공용 공간에서 누구나 사용할 수 있도록 설정하는 기능입니다.",
    "전용 디바이스로 설정되면 NUGU 개인 계정과 연결 없이, 해당 공간을 이용하는 사람은 누구나 이용 가능합니다. 사무 공간, 호텔, 병원 등 다양한 공용 공간에서, 특화된 Private Play를 제공하는 전용 디바이스를 이용할 수 있고, Announcement 메세지를 보낼 수 있습니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/nugu-ux/write-a-prompt",
  "order": 6,
  "indexes": [
    {
  "title": "Prompt 디자인",
  "hash": "",
  "sentences": [
    "Prompt 디자인",
    "Prompt란 NUGU 에이전트의 음성 답을 의미하며, 음성으로 전달되는 정보를 사용자가 잘 이해할 수 있도록 다음과 같은 가이드라인을 고려하여 디자인하는 것이 좋습니다."
  ]
},
    {
  "title": "Prompt 디자인 > Prompt 정확성",
  "hash": "#prompt-정확성",
  "sentences": [
    "Prompt 정확성",
    "다음 사항에서는 정보의 누락 없이 정확하고 명확하게 말해야 합니다.",
    "정보 전달이 목적인 경우\n\n    사용자가 각 기능 실행에 대한 답변(Prompt) 피드백만으로도 이해할 수 있도록 필요한 정보를 빠짐없이 모두 포함합니다.",
    "질문인 경우\n\n    사용자가 답변(Prompt)를 들었을 때 질문형으로 이해할 수 있도록 문장을 구성합니다.\n\n    원활한 상호작용을 위해 사용자가 대답해야 하는 발화를 명확하게 제시해야 합니다.",
    "오류 상황인 경우\n\n    오류 발생의 이유나 해결 방법을 구체적이고 정확하게 제시합니다.",
    "목록에서 선택해야 하는 경우, 사용자가 “O번째”라고 답변할 수 있도록 질문합니다.\n예) 몇 번째 장소로 갈까요?"
  ]
},
    {
  "title": "Prompt 디자인 > Prompt 간결성",
  "hash": "#prompt-간결성",
  "sentences": [
    "Prompt 간결성",
    "사용자와 음성으로만 상호작용하기 때문에 효율적인 의사 전달을 위해 간결하게 말해야 합니다.",
    "불필요한 꾸밈말이나 조사를 사용하여 답변(Prompt)가 불필요하게 길어지지 않도록 주의합니다.",
    "기능 실행이 목적인 답변(Prompt)인 경우에는 가능한 짧고 간결한 형태로 응답합니다.",
    "사용자가 이미 알고 있는 주소를 안내할 경우, 시, 군, 구, 동 등 전체 주소를 안내하기 보다는 동 이하 주소만 안내",
    "한 문장 안에는 기본 2개, 최대 4개의 정보만 배치합니다.",
    "전체 문장이 3문장 이상이 되어야 할 경우 중요한 정보를 포함하고 있을 경우에만 허용합니다.\n\n    이 경우, 정보와 정보 사이를 구분하여 읽어 사용자의 이해를 도와야 합니다.",
    "문장과 문장 사이에 동일한 단어 또는 술어를 반복 사용하여 중복되는 느낌을 주는 것을 지양합니다.",
    "오전 날씨는 비가 오고, 오후에는 비가 와요 (X)\n하루 종일 비가 와요 (O)"
  ]
},
    {
  "title": "Prompt 디자인 > Prompt 다양성",
  "hash": "#prompt-다양성",
  "sentences": [
    "Prompt 다양성",
    "사용자가 자주 이용하는 서비스라면 매번 동일한 응답을 듣는 것이 지루할 수 있으므로 다양한 응답으로 구성합니다.",
    "사용자: 아리아, 놀아줘!\nNUGU: 아 저도요 오후엔 졸리고 무료하고 좀 그렇네요 제가 내는 퀴즈를 맞춰 보실래요?\n사용자: 아리아, 놀아줘!\nNUGU: 흠 이럴 때는 뭘 해드려야 칭찬받을까요? 요즘 유행하는 신조어를 지금 배워보는 건 어때요?\n사용자: 아리아, 놀아줘!\nNUGU: 아 이런 날은 뭔가 재미있는 일이 생기면 좋을 텐데요. 음 제가 준비한 무드등 개인기 한번 보실래요?"
  ]
},
    {
  "title": "Prompt 디자인 > Prompt 일관성",
  "hash": "#prompt-일관성",
  "sentences": [
    "Prompt 일관성"
  ]
},
    {
  "title": "Prompt 디자인 > NUGU 페르소나",
  "hash": "#nugu-페르소나",
  "sentences": [
    "NUGU 페르소나",
    "페르소나는 인격을 뜻하는 라틴어로서, NUGU 페르소나란 사용자가 NUGU 에이전트에 대해 가지는 인격에 대한 심상을 의미합니다.",
    "즉, 사람들은 다른 사람의 목소리를 들을 때 머릿속에 자동으로(빠르고, 무의식적으로) 그 사람에 대한 캐릭터(나이, 교육 정도, 감정의 상태, 얼마나 믿을만한지, 친절한지 등)을 형성하게 되는데, NUGU 사용자는 NUGU 에이전트가 제공하는 말투나 목소리 등으로부터 이러한 이미지를 갖게 됩니다. 서비스 전반에 걸쳐 일관된 페르소나를 유지하여 사용자가 NUGU 에이전트와 자연스럽게 상호작용할 수 있도록 VUX를 디자인하는 것이 필요합니다.",
    "NUGU의 페르소나는 20대 후반에서 30대 초반의 여성으로, 차분하고 편안함을 지향하는 다정다감한 성격의 친구같은 비서입니다. 세부 대화 스타일은 다음과 같으며, 작성한 Prompt가 NUGU 페르소나와 일치하는지 검토하는 것을 권장합니다."
  ]
}
  ]
},
  {
  "url": "/document-staging/nugu-play/create-plays-with-play-builder/define-an-action/use-parameters/write-responses",
  "order": 26,
  "indexes": [

  ]
}
]